   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"fips202.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.load64,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	load64:
  24              	.LFB0:
  25              		.file 1 "fips202.c"
   1:fips202.c     **** /* Based on the public domain implementation in
   2:fips202.c     ****  * crypto_hash/keccakc512/simple/ from http://bench.cr.yp.to/supercop.html
   3:fips202.c     ****  * by Ronny Van Keer
   4:fips202.c     ****  * and the public domain "TweetFips202" implementation
   5:fips202.c     ****  * from https://twitter.com/tweetfips202
   6:fips202.c     ****  * by Gilles Van Assche, Daniel J. Bernstein, and Peter Schwabe */
   7:fips202.c     **** 
   8:fips202.c     **** #include <stddef.h>
   9:fips202.c     **** #include <stdint.h>
  10:fips202.c     **** #include "fips202.h"
  11:fips202.c     **** 
  12:fips202.c     **** #define NROUNDS 24
  13:fips202.c     **** #define ROL(a, offset) ((a << offset) ^ (a >> (64-offset)))
  14:fips202.c     **** 
  15:fips202.c     **** /*************************************************
  16:fips202.c     **** * Name:        load64
  17:fips202.c     **** *
  18:fips202.c     **** * Description: Load 8 bytes into uint64_t in little-endian order
  19:fips202.c     **** *
  20:fips202.c     **** * Arguments:   - const uint8_t *x: pointer to input byte array
  21:fips202.c     **** *
  22:fips202.c     **** * Returns the loaded 64-bit unsigned integer
  23:fips202.c     **** **************************************************/
  24:fips202.c     **** static uint64_t load64(const uint8_t x[8]) {
  26              		.loc 1 24 44
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 2DE9F003 		push	{r4, r5, r6, r7, r8, r9}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 9, -4
  40 0004 86B0     		sub	sp, sp, #24
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 48
  43 0006 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0008 7860     		str	r0, [r7, #4]
  25:fips202.c     ****   unsigned int i;
  26:fips202.c     ****   uint64_t r = 0;
  47              		.loc 1 26 12
  48 000a 4FF00000 		mov	r0, #0
  49 000e 4FF00001 		mov	r1, #0
  50 0012 C7E90201 		strd	r0, [r7, #8]
  27:fips202.c     **** 
  28:fips202.c     ****   for(i=0;i<8;i++)
  51              		.loc 1 28 8
  52 0016 0021     		movs	r1, #0
  53 0018 7961     		str	r1, [r7, #20]
  54              		.loc 1 28 3
  55 001a 22E0     		b	.L2
  56              	.L3:
  29:fips202.c     ****     r |= (uint64_t)x[i] << 8*i;
  57              		.loc 1 29 21 discriminator 3
  58 001c 7868     		ldr	r0, [r7, #4]
  59 001e 7969     		ldr	r1, [r7, #20]
  60 0020 0144     		add	r1, r1, r0
  61 0022 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
  62              		.loc 1 29 10 discriminator 3
  63 0024 C9B2     		uxtb	r1, r1
  64 0026 0020     		movs	r0, #0
  65 0028 0C46     		mov	r4, r1
  66 002a 0546     		mov	r5, r0
  67              		.loc 1 29 29 discriminator 3
  68 002c 7969     		ldr	r1, [r7, #20]
  69 002e C900     		lsls	r1, r1, #3
  70              		.loc 1 29 25 discriminator 3
  71 0030 A1F12006 		sub	r6, r1, #32
  72 0034 C1F12000 		rsb	r0, r1, #32
  73 0038 05FA01F3 		lsl	r3, r5, r1
  74 003c 04FA06F6 		lsl	r6, r4, r6
  75 0040 3343     		orrs	r3, r3, r6
  76 0042 24FA00F0 		lsr	r0, r4, r0
  77 0046 0343     		orrs	r3, r3, r0
  78 0048 04FA01F2 		lsl	r2, r4, r1
  79              		.loc 1 29 7 discriminator 3
  80 004c D7E90201 		ldrd	r0, [r7, #8]
  81 0050 40EA0208 		orr	r8, r0, r2
  82 0054 41EA0309 		orr	r9, r1, r3
  83 0058 C7E90289 		strd	r8, [r7, #8]
  28:fips202.c     ****     r |= (uint64_t)x[i] << 8*i;
  84              		.loc 1 28 16 discriminator 3
  85 005c 7969     		ldr	r1, [r7, #20]
  86 005e 0131     		adds	r1, r1, #1
  87 0060 7961     		str	r1, [r7, #20]
  88              	.L2:
  28:fips202.c     ****     r |= (uint64_t)x[i] << 8*i;
  89              		.loc 1 28 3 discriminator 1
  90 0062 7969     		ldr	r1, [r7, #20]
  91 0064 0729     		cmp	r1, #7
  92 0066 D9D9     		bls	.L3
  30:fips202.c     **** 
  31:fips202.c     ****   return r;
  93              		.loc 1 31 10
  94 0068 D7E90223 		ldrd	r2, [r7, #8]
  32:fips202.c     **** }
  95              		.loc 1 32 1
  96 006c 1046     		mov	r0, r2
  97 006e 1946     		mov	r1, r3
  98 0070 1837     		adds	r7, r7, #24
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 24
 101 0072 BD46     		mov	sp, r7
 102              	.LCFI4:
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0074 BDE8F003 		pop	{r4, r5, r6, r7, r8, r9}
 106              	.LCFI5:
 107              		.cfi_restore 9
 108              		.cfi_restore 8
 109              		.cfi_restore 7
 110              		.cfi_restore 6
 111              		.cfi_restore 5
 112              		.cfi_restore 4
 113              		.cfi_def_cfa_offset 0
 114 0078 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE0:
 118              		.section	.text.store64,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu softvfp
 125              	store64:
 126              	.LFB1:
  33:fips202.c     **** 
  34:fips202.c     **** /*************************************************
  35:fips202.c     **** * Name:        store64
  36:fips202.c     **** *
  37:fips202.c     **** * Description: Store a 64-bit integer to array of 8 bytes in little-endian order
  38:fips202.c     **** *
  39:fips202.c     **** * Arguments:   - uint8_t *x: pointer to the output byte array (allocated)
  40:fips202.c     **** *              - uint64_t u: input 64-bit unsigned integer
  41:fips202.c     **** **************************************************/
  42:fips202.c     **** static void store64(uint8_t x[8], uint64_t u) {
 127              		.loc 1 42 47
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 24
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 F0B4     		push	{r4, r5, r6, r7}
 133              	.LCFI6:
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 4, -16
 136              		.cfi_offset 5, -12
 137              		.cfi_offset 6, -8
 138              		.cfi_offset 7, -4
 139 0002 86B0     		sub	sp, sp, #24
 140              	.LCFI7:
 141              		.cfi_def_cfa_offset 40
 142 0004 00AF     		add	r7, sp, #0
 143              	.LCFI8:
 144              		.cfi_def_cfa_register 7
 145 0006 F860     		str	r0, [r7, #12]
 146 0008 C7E90023 		strd	r2, [r7]
  43:fips202.c     ****   unsigned int i;
  44:fips202.c     **** 
  45:fips202.c     ****   for(i=0;i<8;i++)
 147              		.loc 1 45 8
 148 000c 0023     		movs	r3, #0
 149 000e 7B61     		str	r3, [r7, #20]
 150              		.loc 1 45 3
 151 0010 19E0     		b	.L6
 152              	.L7:
  46:fips202.c     ****     x[i] = u >> 8*i;
 153              		.loc 1 46 18 discriminator 3
 154 0012 7B69     		ldr	r3, [r7, #20]
 155 0014 D900     		lsls	r1, r3, #3
 156              		.loc 1 46 14 discriminator 3
 157 0016 D7E90023 		ldrd	r2, [r7]
 158 001a C1F12006 		rsb	r6, r1, #32
 159 001e A1F12000 		sub	r0, r1, #32
 160 0022 22FA01F4 		lsr	r4, r2, r1
 161 0026 03FA06F6 		lsl	r6, r3, r6
 162 002a 3443     		orrs	r4, r4, r6
 163 002c 23FA00F0 		lsr	r0, r3, r0
 164 0030 0443     		orrs	r4, r4, r0
 165 0032 23FA01F5 		lsr	r5, r3, r1
 166              		.loc 1 46 6 discriminator 3
 167 0036 FA68     		ldr	r2, [r7, #12]
 168 0038 7B69     		ldr	r3, [r7, #20]
 169 003a 1344     		add	r3, r3, r2
 170              		.loc 1 46 10 discriminator 3
 171 003c E2B2     		uxtb	r2, r4
 172 003e 1A70     		strb	r2, [r3]
  45:fips202.c     ****     x[i] = u >> 8*i;
 173              		.loc 1 45 16 discriminator 3
 174 0040 7B69     		ldr	r3, [r7, #20]
 175 0042 0133     		adds	r3, r3, #1
 176 0044 7B61     		str	r3, [r7, #20]
 177              	.L6:
  45:fips202.c     ****     x[i] = u >> 8*i;
 178              		.loc 1 45 3 discriminator 1
 179 0046 7B69     		ldr	r3, [r7, #20]
 180 0048 072B     		cmp	r3, #7
 181 004a E2D9     		bls	.L7
  47:fips202.c     **** }
 182              		.loc 1 47 1
 183 004c 00BF     		nop
 184 004e 00BF     		nop
 185 0050 1837     		adds	r7, r7, #24
 186              	.LCFI9:
 187              		.cfi_def_cfa_offset 16
 188 0052 BD46     		mov	sp, r7
 189              	.LCFI10:
 190              		.cfi_def_cfa_register 13
 191              		@ sp needed
 192 0054 F0BC     		pop	{r4, r5, r6, r7}
 193              	.LCFI11:
 194              		.cfi_restore 7
 195              		.cfi_restore 6
 196              		.cfi_restore 5
 197              		.cfi_restore 4
 198              		.cfi_def_cfa_offset 0
 199 0056 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE1:
 203              		.section	.rodata
 204              		.align	3
 207              	KeccakF_RoundConstants:
 208 0000 01000000 		.word	1
 209 0004 00000000 		.word	0
 210 0008 82800000 		.word	32898
 211 000c 00000000 		.word	0
 212 0010 8A800000 		.word	32906
 213 0014 00000080 		.word	-2147483648
 214 0018 00800080 		.word	-2147450880
 215 001c 00000080 		.word	-2147483648
 216 0020 8B800000 		.word	32907
 217 0024 00000000 		.word	0
 218 0028 01000080 		.word	-2147483647
 219 002c 00000000 		.word	0
 220 0030 81800080 		.word	-2147450751
 221 0034 00000080 		.word	-2147483648
 222 0038 09800000 		.word	32777
 223 003c 00000080 		.word	-2147483648
 224 0040 8A000000 		.word	138
 225 0044 00000000 		.word	0
 226 0048 88000000 		.word	136
 227 004c 00000000 		.word	0
 228 0050 09800080 		.word	-2147450871
 229 0054 00000000 		.word	0
 230 0058 0A000080 		.word	-2147483638
 231 005c 00000000 		.word	0
 232 0060 8B800080 		.word	-2147450741
 233 0064 00000000 		.word	0
 234 0068 8B000000 		.word	139
 235 006c 00000080 		.word	-2147483648
 236 0070 89800000 		.word	32905
 237 0074 00000080 		.word	-2147483648
 238 0078 03800000 		.word	32771
 239 007c 00000080 		.word	-2147483648
 240 0080 02800000 		.word	32770
 241 0084 00000080 		.word	-2147483648
 242 0088 80000000 		.word	128
 243 008c 00000080 		.word	-2147483648
 244 0090 0A800000 		.word	32778
 245 0094 00000000 		.word	0
 246 0098 0A000080 		.word	-2147483638
 247 009c 00000080 		.word	-2147483648
 248 00a0 81800080 		.word	-2147450751
 249 00a4 00000080 		.word	-2147483648
 250 00a8 80800000 		.word	32896
 251 00ac 00000080 		.word	-2147483648
 252 00b0 01000080 		.word	-2147483647
 253 00b4 00000000 		.word	0
 254 00b8 08800080 		.word	-2147450872
 255 00bc 00000080 		.word	-2147483648
 256              		.section	.text.KeccakF1600_StatePermute,"ax",%progbits
 257              		.align	1
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu softvfp
 263              	KeccakF1600_StatePermute:
 264              	.LFB2:
  48:fips202.c     **** 
  49:fips202.c     **** /* Keccak round constants */
  50:fips202.c     **** static const uint64_t KeccakF_RoundConstants[NROUNDS] = {
  51:fips202.c     ****   (uint64_t)0x0000000000000001ULL,
  52:fips202.c     ****   (uint64_t)0x0000000000008082ULL,
  53:fips202.c     ****   (uint64_t)0x800000000000808aULL,
  54:fips202.c     ****   (uint64_t)0x8000000080008000ULL,
  55:fips202.c     ****   (uint64_t)0x000000000000808bULL,
  56:fips202.c     ****   (uint64_t)0x0000000080000001ULL,
  57:fips202.c     ****   (uint64_t)0x8000000080008081ULL,
  58:fips202.c     ****   (uint64_t)0x8000000000008009ULL,
  59:fips202.c     ****   (uint64_t)0x000000000000008aULL,
  60:fips202.c     ****   (uint64_t)0x0000000000000088ULL,
  61:fips202.c     ****   (uint64_t)0x0000000080008009ULL,
  62:fips202.c     ****   (uint64_t)0x000000008000000aULL,
  63:fips202.c     ****   (uint64_t)0x000000008000808bULL,
  64:fips202.c     ****   (uint64_t)0x800000000000008bULL,
  65:fips202.c     ****   (uint64_t)0x8000000000008089ULL,
  66:fips202.c     ****   (uint64_t)0x8000000000008003ULL,
  67:fips202.c     ****   (uint64_t)0x8000000000008002ULL,
  68:fips202.c     ****   (uint64_t)0x8000000000000080ULL,
  69:fips202.c     ****   (uint64_t)0x000000000000800aULL,
  70:fips202.c     ****   (uint64_t)0x800000008000000aULL,
  71:fips202.c     ****   (uint64_t)0x8000000080008081ULL,
  72:fips202.c     ****   (uint64_t)0x8000000000008080ULL,
  73:fips202.c     ****   (uint64_t)0x0000000080000001ULL,
  74:fips202.c     ****   (uint64_t)0x8000000080008008ULL
  75:fips202.c     **** };
  76:fips202.c     **** 
  77:fips202.c     **** /*************************************************
  78:fips202.c     **** * Name:        KeccakF1600_StatePermute
  79:fips202.c     **** *
  80:fips202.c     **** * Description: The Keccak F1600 Permutation
  81:fips202.c     **** *
  82:fips202.c     **** * Arguments:   - uint64_t *state: pointer to input/output Keccak state
  83:fips202.c     **** **************************************************/
  84:fips202.c     **** static void KeccakF1600_StatePermute(uint64_t state[25])
  85:fips202.c     **** {
 265              		.loc 1 85 1
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 2952
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 271              	.LCFI12:
 272              		.cfi_def_cfa_offset 28
 273              		.cfi_offset 4, -28
 274              		.cfi_offset 5, -24
 275              		.cfi_offset 7, -20
 276              		.cfi_offset 8, -16
 277              		.cfi_offset 9, -12
 278              		.cfi_offset 10, -8
 279              		.cfi_offset 11, -4
 280 0004 ADF68C3D 		subw	sp, sp, #2956
 281              	.LCFI13:
 282              		.cfi_def_cfa_offset 2984
 283 0008 00AF     		add	r7, sp, #0
 284              	.LCFI14:
 285              		.cfi_def_cfa_register 7
 286 000a 07F68833 		addw	r3, r7, #2952
 287 000e A3F5F673 		sub	r3, r3, #492
 288 0012 1860     		str	r0, [r3]
  86:fips202.c     ****         int round;
  87:fips202.c     **** 
  88:fips202.c     ****         uint64_t Aba, Abe, Abi, Abo, Abu;
  89:fips202.c     ****         uint64_t Aga, Age, Agi, Ago, Agu;
  90:fips202.c     ****         uint64_t Aka, Ake, Aki, Ako, Aku;
  91:fips202.c     ****         uint64_t Ama, Ame, Ami, Amo, Amu;
  92:fips202.c     ****         uint64_t Asa, Ase, Asi, Aso, Asu;
  93:fips202.c     ****         uint64_t BCa, BCe, BCi, BCo, BCu;
  94:fips202.c     ****         uint64_t Da, De, Di, Do, Du;
  95:fips202.c     ****         uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
  96:fips202.c     ****         uint64_t Ega, Ege, Egi, Ego, Egu;
  97:fips202.c     ****         uint64_t Eka, Eke, Eki, Eko, Eku;
  98:fips202.c     ****         uint64_t Ema, Eme, Emi, Emo, Emu;
  99:fips202.c     ****         uint64_t Esa, Ese, Esi, Eso, Esu;
 100:fips202.c     **** 
 101:fips202.c     ****         //copyFromState(A, state)
 102:fips202.c     ****         Aba = state[ 0];
 289              		.loc 1 102 13
 290 0014 07F68833 		addw	r3, r7, #2952
 291 0018 A3F5F673 		sub	r3, r3, #492
 292 001c 1B68     		ldr	r3, [r3]
 293 001e D3E90023 		ldrd	r2, [r3]
 294 0022 07F67831 		addw	r1, r7, #2936
 295 0026 C1E90023 		strd	r2, [r1]
 103:fips202.c     ****         Abe = state[ 1];
 296              		.loc 1 103 13
 297 002a 07F68833 		addw	r3, r7, #2952
 298 002e A3F5F673 		sub	r3, r3, #492
 299 0032 1B68     		ldr	r3, [r3]
 300 0034 D3E90223 		ldrd	r2, [r3, #8]
 301 0038 07F53761 		add	r1, r7, #2928
 302 003c C1E90023 		strd	r2, [r1]
 104:fips202.c     ****         Abi = state[ 2];
 303              		.loc 1 104 13
 304 0040 07F68833 		addw	r3, r7, #2952
 305 0044 A3F5F673 		sub	r3, r3, #492
 306 0048 1B68     		ldr	r3, [r3]
 307 004a D3E90423 		ldrd	r2, [r3, #16]
 308 004e 07F66831 		addw	r1, r7, #2920
 309 0052 C1E90023 		strd	r2, [r1]
 105:fips202.c     ****         Abo = state[ 3];
 310              		.loc 1 105 13
 311 0056 07F68833 		addw	r3, r7, #2952
 312 005a A3F5F673 		sub	r3, r3, #492
 313 005e 1B68     		ldr	r3, [r3]
 314 0060 D3E90623 		ldrd	r2, [r3, #24]
 315 0064 07F53661 		add	r1, r7, #2912
 316 0068 C1E90023 		strd	r2, [r1]
 106:fips202.c     ****         Abu = state[ 4];
 317              		.loc 1 106 13
 318 006c 07F68833 		addw	r3, r7, #2952
 319 0070 A3F5F673 		sub	r3, r3, #492
 320 0074 1B68     		ldr	r3, [r3]
 321 0076 D3E90823 		ldrd	r2, [r3, #32]
 322 007a 07F65831 		addw	r1, r7, #2904
 323 007e C1E90023 		strd	r2, [r1]
 107:fips202.c     ****         Aga = state[ 5];
 324              		.loc 1 107 13
 325 0082 07F68833 		addw	r3, r7, #2952
 326 0086 A3F5F673 		sub	r3, r3, #492
 327 008a 1B68     		ldr	r3, [r3]
 328 008c D3E90A23 		ldrd	r2, [r3, #40]
 329 0090 07F53561 		add	r1, r7, #2896
 330 0094 C1E90023 		strd	r2, [r1]
 108:fips202.c     ****         Age = state[ 6];
 331              		.loc 1 108 13
 332 0098 07F68833 		addw	r3, r7, #2952
 333 009c A3F5F673 		sub	r3, r3, #492
 334 00a0 1B68     		ldr	r3, [r3]
 335 00a2 D3E90C23 		ldrd	r2, [r3, #48]
 336 00a6 07F64831 		addw	r1, r7, #2888
 337 00aa C1E90023 		strd	r2, [r1]
 109:fips202.c     ****         Agi = state[ 7];
 338              		.loc 1 109 13
 339 00ae 07F68833 		addw	r3, r7, #2952
 340 00b2 A3F5F673 		sub	r3, r3, #492
 341 00b6 1B68     		ldr	r3, [r3]
 342 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 343 00bc 07F53461 		add	r1, r7, #2880
 344 00c0 C1E90023 		strd	r2, [r1]
 110:fips202.c     ****         Ago = state[ 8];
 345              		.loc 1 110 13
 346 00c4 07F68833 		addw	r3, r7, #2952
 347 00c8 A3F5F673 		sub	r3, r3, #492
 348 00cc 1B68     		ldr	r3, [r3]
 349 00ce D3E91023 		ldrd	r2, [r3, #64]
 350 00d2 07F63831 		addw	r1, r7, #2872
 351 00d6 C1E90023 		strd	r2, [r1]
 111:fips202.c     ****         Agu = state[ 9];
 352              		.loc 1 111 13
 353 00da 07F68833 		addw	r3, r7, #2952
 354 00de A3F5F673 		sub	r3, r3, #492
 355 00e2 1B68     		ldr	r3, [r3]
 356 00e4 D3E91223 		ldrd	r2, [r3, #72]
 357 00e8 07F53361 		add	r1, r7, #2864
 358 00ec C1E90023 		strd	r2, [r1]
 112:fips202.c     ****         Aka = state[10];
 359              		.loc 1 112 13
 360 00f0 07F68833 		addw	r3, r7, #2952
 361 00f4 A3F5F673 		sub	r3, r3, #492
 362 00f8 1B68     		ldr	r3, [r3]
 363 00fa D3E91423 		ldrd	r2, [r3, #80]
 364 00fe 07F62831 		addw	r1, r7, #2856
 365 0102 C1E90023 		strd	r2, [r1]
 113:fips202.c     ****         Ake = state[11];
 366              		.loc 1 113 13
 367 0106 07F68833 		addw	r3, r7, #2952
 368 010a A3F5F673 		sub	r3, r3, #492
 369 010e 1B68     		ldr	r3, [r3]
 370 0110 D3E91623 		ldrd	r2, [r3, #88]
 371 0114 07F53261 		add	r1, r7, #2848
 372 0118 C1E90023 		strd	r2, [r1]
 114:fips202.c     ****         Aki = state[12];
 373              		.loc 1 114 13
 374 011c 07F68833 		addw	r3, r7, #2952
 375 0120 A3F5F673 		sub	r3, r3, #492
 376 0124 1B68     		ldr	r3, [r3]
 377 0126 D3E91823 		ldrd	r2, [r3, #96]
 378 012a 07F61831 		addw	r1, r7, #2840
 379 012e C1E90023 		strd	r2, [r1]
 115:fips202.c     ****         Ako = state[13];
 380              		.loc 1 115 13
 381 0132 07F68833 		addw	r3, r7, #2952
 382 0136 A3F5F673 		sub	r3, r3, #492
 383 013a 1B68     		ldr	r3, [r3]
 384 013c D3E91A23 		ldrd	r2, [r3, #104]
 385 0140 07F53161 		add	r1, r7, #2832
 386 0144 C1E90023 		strd	r2, [r1]
 116:fips202.c     ****         Aku = state[14];
 387              		.loc 1 116 13
 388 0148 07F68833 		addw	r3, r7, #2952
 389 014c A3F5F673 		sub	r3, r3, #492
 390 0150 1B68     		ldr	r3, [r3]
 391 0152 D3E91C23 		ldrd	r2, [r3, #112]
 392 0156 07F60831 		addw	r1, r7, #2824
 393 015a C1E90023 		strd	r2, [r1]
 117:fips202.c     ****         Ama = state[15];
 394              		.loc 1 117 13
 395 015e 07F68833 		addw	r3, r7, #2952
 396 0162 A3F5F673 		sub	r3, r3, #492
 397 0166 1B68     		ldr	r3, [r3]
 398 0168 D3E91E23 		ldrd	r2, [r3, #120]
 399 016c 07F53061 		add	r1, r7, #2816
 400 0170 C1E90023 		strd	r2, [r1]
 118:fips202.c     ****         Ame = state[16];
 401              		.loc 1 118 13
 402 0174 07F68833 		addw	r3, r7, #2952
 403 0178 A3F5F673 		sub	r3, r3, #492
 404 017c 1B68     		ldr	r3, [r3]
 405 017e D3E92023 		ldrd	r2, [r3, #128]
 406 0182 07F6F821 		addw	r1, r7, #2808
 407 0186 C1E90023 		strd	r2, [r1]
 119:fips202.c     ****         Ami = state[17];
 408              		.loc 1 119 13
 409 018a 07F68833 		addw	r3, r7, #2952
 410 018e A3F5F673 		sub	r3, r3, #492
 411 0192 1B68     		ldr	r3, [r3]
 412 0194 D3E92223 		ldrd	r2, [r3, #136]
 413 0198 07F52F61 		add	r1, r7, #2800
 414 019c C1E90023 		strd	r2, [r1]
 120:fips202.c     ****         Amo = state[18];
 415              		.loc 1 120 13
 416 01a0 07F68833 		addw	r3, r7, #2952
 417 01a4 A3F5F673 		sub	r3, r3, #492
 418 01a8 1B68     		ldr	r3, [r3]
 419 01aa D3E92423 		ldrd	r2, [r3, #144]
 420 01ae 07F6E821 		addw	r1, r7, #2792
 421 01b2 C1E90023 		strd	r2, [r1]
 121:fips202.c     ****         Amu = state[19];
 422              		.loc 1 121 13
 423 01b6 07F68833 		addw	r3, r7, #2952
 424 01ba A3F5F673 		sub	r3, r3, #492
 425 01be 1B68     		ldr	r3, [r3]
 426 01c0 D3E92623 		ldrd	r2, [r3, #152]
 427 01c4 07F52E61 		add	r1, r7, #2784
 428 01c8 C1E90023 		strd	r2, [r1]
 122:fips202.c     ****         Asa = state[20];
 429              		.loc 1 122 13
 430 01cc 07F68833 		addw	r3, r7, #2952
 431 01d0 A3F5F673 		sub	r3, r3, #492
 432 01d4 1B68     		ldr	r3, [r3]
 433 01d6 D3E92823 		ldrd	r2, [r3, #160]
 434 01da 07F6D821 		addw	r1, r7, #2776
 435 01de C1E90023 		strd	r2, [r1]
 123:fips202.c     ****         Ase = state[21];
 436              		.loc 1 123 13
 437 01e2 07F68833 		addw	r3, r7, #2952
 438 01e6 A3F5F673 		sub	r3, r3, #492
 439 01ea 1B68     		ldr	r3, [r3]
 440 01ec D3E92A23 		ldrd	r2, [r3, #168]
 441 01f0 07F52D61 		add	r1, r7, #2768
 442 01f4 C1E90023 		strd	r2, [r1]
 124:fips202.c     ****         Asi = state[22];
 443              		.loc 1 124 13
 444 01f8 07F68833 		addw	r3, r7, #2952
 445 01fc A3F5F673 		sub	r3, r3, #492
 446 0200 1B68     		ldr	r3, [r3]
 447 0202 D3E92C23 		ldrd	r2, [r3, #176]
 448 0206 07F6C821 		addw	r1, r7, #2760
 449 020a C1E90023 		strd	r2, [r1]
 125:fips202.c     ****         Aso = state[23];
 450              		.loc 1 125 13
 451 020e 07F68833 		addw	r3, r7, #2952
 452 0212 A3F5F673 		sub	r3, r3, #492
 453 0216 1B68     		ldr	r3, [r3]
 454 0218 D3E92E23 		ldrd	r2, [r3, #184]
 455 021c 07F52C61 		add	r1, r7, #2752
 456 0220 C1E90023 		strd	r2, [r1]
 126:fips202.c     ****         Asu = state[24];
 457              		.loc 1 126 13
 458 0224 07F68833 		addw	r3, r7, #2952
 459 0228 A3F5F673 		sub	r3, r3, #492
 460 022c 1B68     		ldr	r3, [r3]
 461 022e D3E93023 		ldrd	r2, [r3, #192]
 462 0232 07F6B821 		addw	r1, r7, #2744
 463 0236 C1E90023 		strd	r2, [r1]
 127:fips202.c     **** 
 128:fips202.c     ****         for( round = 0; round < NROUNDS; round += 2 )
 464              		.loc 1 128 20
 465 023a 0023     		movs	r3, #0
 466 023c C7F8843B 		str	r3, [r7, #2948]
 467              		.loc 1 128 9
 468 0240 02F010BF 		b	.L9
 469              	.L10:
 129:fips202.c     ****         {
 130:fips202.c     ****             //    prepareTheta
 131:fips202.c     ****             BCa = Aba^Aga^Aka^Ama^Asa;
 470              		.loc 1 131 22 discriminator 3
 471 0244 07F67833 		addw	r3, r7, #2936
 472 0248 D3E90001 		ldrd	r0, [r3]
 473 024c 07F53563 		add	r3, r7, #2896
 474 0250 D3E90023 		ldrd	r2, [r3]
 475 0254 80EA020C 		eor	ip, r0, r2
 476 0258 C7F890C9 		str	ip, [r7, #2448]
 477 025c 4B40     		eors	r3, r3, r1
 478 025e C7F89439 		str	r3, [r7, #2452]
 479              		.loc 1 131 26 discriminator 3
 480 0262 07F62833 		addw	r3, r7, #2856
 481 0266 D3E90023 		ldrd	r2, [r3]
 482 026a 07F51961 		add	r1, r7, #2448
 483 026e D1E90001 		ldrd	r0, [r1]
 484 0272 8446     		mov	ip, r0
 485 0274 8CEA020C 		eor	ip, ip, r2
 486 0278 C7F888C9 		str	ip, [r7, #2440]
 487 027c 4B40     		eors	r3, r3, r1
 488 027e C7F88C39 		str	r3, [r7, #2444]
 489              		.loc 1 131 30 discriminator 3
 490 0282 07F53063 		add	r3, r7, #2816
 491 0286 D3E90023 		ldrd	r2, [r3]
 492 028a 07F68811 		addw	r1, r7, #2440
 493 028e D1E90001 		ldrd	r0, [r1]
 494 0292 8446     		mov	ip, r0
 495 0294 8CEA020C 		eor	ip, ip, r2
 496 0298 C7F880C9 		str	ip, [r7, #2432]
 497 029c 4B40     		eors	r3, r3, r1
 498 029e C7F88439 		str	r3, [r7, #2436]
 499              		.loc 1 131 17 discriminator 3
 500 02a2 07F6D823 		addw	r3, r7, #2776
 501 02a6 D3E90023 		ldrd	r2, [r3]
 502 02aa 07F51861 		add	r1, r7, #2432
 503 02ae D1E90001 		ldrd	r0, [r1]
 504 02b2 8446     		mov	ip, r0
 505 02b4 82EA0C0C 		eor	ip, r2, ip
 506 02b8 C7F848C5 		str	ip, [r7, #1352]
 507 02bc 4B40     		eors	r3, r3, r1
 508 02be C7F84C35 		str	r3, [r7, #1356]
 509 02c2 07F5A963 		add	r3, r7, #1352
 510 02c6 D3E90023 		ldrd	r2, [r3]
 511 02ca 07F52B61 		add	r1, r7, #2736
 512 02ce C1E90023 		strd	r2, [r1]
 132:fips202.c     ****             BCe = Abe^Age^Ake^Ame^Ase;
 513              		.loc 1 132 22 discriminator 3
 514 02d2 07F53763 		add	r3, r7, #2928
 515 02d6 D3E90001 		ldrd	r0, [r3]
 516 02da 07F64833 		addw	r3, r7, #2888
 517 02de D3E90023 		ldrd	r2, [r3]
 518 02e2 80EA020C 		eor	ip, r0, r2
 519 02e6 C7F878C9 		str	ip, [r7, #2424]
 520 02ea 4B40     		eors	r3, r3, r1
 521 02ec C7F87C39 		str	r3, [r7, #2428]
 522              		.loc 1 132 26 discriminator 3
 523 02f0 07F53263 		add	r3, r7, #2848
 524 02f4 D3E90023 		ldrd	r2, [r3]
 525 02f8 07F67811 		addw	r1, r7, #2424
 526 02fc D1E90001 		ldrd	r0, [r1]
 527 0300 8446     		mov	ip, r0
 528 0302 8CEA020C 		eor	ip, ip, r2
 529 0306 C7F870C9 		str	ip, [r7, #2416]
 530 030a 4B40     		eors	r3, r3, r1
 531 030c C7F87439 		str	r3, [r7, #2420]
 532              		.loc 1 132 30 discriminator 3
 533 0310 07F6F823 		addw	r3, r7, #2808
 534 0314 D3E90023 		ldrd	r2, [r3]
 535 0318 07F51761 		add	r1, r7, #2416
 536 031c D1E90001 		ldrd	r0, [r1]
 537 0320 8446     		mov	ip, r0
 538 0322 8CEA020C 		eor	ip, ip, r2
 539 0326 C7F868C9 		str	ip, [r7, #2408]
 540 032a 4B40     		eors	r3, r3, r1
 541 032c C7F86C39 		str	r3, [r7, #2412]
 542              		.loc 1 132 17 discriminator 3
 543 0330 07F52D63 		add	r3, r7, #2768
 544 0334 D3E90023 		ldrd	r2, [r3]
 545 0338 07F66811 		addw	r1, r7, #2408
 546 033c D1E90001 		ldrd	r0, [r1]
 547 0340 8446     		mov	ip, r0
 548 0342 82EA0C0C 		eor	ip, r2, ip
 549 0346 C7F840C5 		str	ip, [r7, #1344]
 550 034a 4B40     		eors	r3, r3, r1
 551 034c C7F84435 		str	r3, [r7, #1348]
 552 0350 07F5A863 		add	r3, r7, #1344
 553 0354 D3E90023 		ldrd	r2, [r3]
 554 0358 07F6A821 		addw	r1, r7, #2728
 555 035c C1E90023 		strd	r2, [r1]
 133:fips202.c     ****             BCi = Abi^Agi^Aki^Ami^Asi;
 556              		.loc 1 133 22 discriminator 3
 557 0360 07F66833 		addw	r3, r7, #2920
 558 0364 D3E90001 		ldrd	r0, [r3]
 559 0368 07F53463 		add	r3, r7, #2880
 560 036c D3E90023 		ldrd	r2, [r3]
 561 0370 80EA020C 		eor	ip, r0, r2
 562 0374 C7F860C9 		str	ip, [r7, #2400]
 563 0378 4B40     		eors	r3, r3, r1
 564 037a C7F86439 		str	r3, [r7, #2404]
 565              		.loc 1 133 26 discriminator 3
 566 037e 07F61833 		addw	r3, r7, #2840
 567 0382 D3E90023 		ldrd	r2, [r3]
 568 0386 07F51661 		add	r1, r7, #2400
 569 038a D1E90001 		ldrd	r0, [r1]
 570 038e 8446     		mov	ip, r0
 571 0390 8CEA020C 		eor	ip, ip, r2
 572 0394 C7F858C9 		str	ip, [r7, #2392]
 573 0398 4B40     		eors	r3, r3, r1
 574 039a C7F85C39 		str	r3, [r7, #2396]
 575              		.loc 1 133 30 discriminator 3
 576 039e 07F52F63 		add	r3, r7, #2800
 577 03a2 D3E90023 		ldrd	r2, [r3]
 578 03a6 07F65811 		addw	r1, r7, #2392
 579 03aa D1E90001 		ldrd	r0, [r1]
 580 03ae 8446     		mov	ip, r0
 581 03b0 8CEA020C 		eor	ip, ip, r2
 582 03b4 C7F850C9 		str	ip, [r7, #2384]
 583 03b8 4B40     		eors	r3, r3, r1
 584 03ba C7F85439 		str	r3, [r7, #2388]
 585              		.loc 1 133 17 discriminator 3
 586 03be 07F6C823 		addw	r3, r7, #2760
 587 03c2 D3E90023 		ldrd	r2, [r3]
 588 03c6 07F51561 		add	r1, r7, #2384
 589 03ca D1E90001 		ldrd	r0, [r1]
 590 03ce 8446     		mov	ip, r0
 591 03d0 82EA0C0C 		eor	ip, r2, ip
 592 03d4 C7F838C5 		str	ip, [r7, #1336]
 593 03d8 4B40     		eors	r3, r3, r1
 594 03da C7F83C35 		str	r3, [r7, #1340]
 595 03de 07F5A763 		add	r3, r7, #1336
 596 03e2 D3E90023 		ldrd	r2, [r3]
 597 03e6 07F52A61 		add	r1, r7, #2720
 598 03ea C1E90023 		strd	r2, [r1]
 134:fips202.c     ****             BCo = Abo^Ago^Ako^Amo^Aso;
 599              		.loc 1 134 22 discriminator 3
 600 03ee 07F53663 		add	r3, r7, #2912
 601 03f2 D3E90001 		ldrd	r0, [r3]
 602 03f6 07F63833 		addw	r3, r7, #2872
 603 03fa D3E90023 		ldrd	r2, [r3]
 604 03fe 80EA020C 		eor	ip, r0, r2
 605 0402 C7F848C9 		str	ip, [r7, #2376]
 606 0406 4B40     		eors	r3, r3, r1
 607 0408 C7F84C39 		str	r3, [r7, #2380]
 608              		.loc 1 134 26 discriminator 3
 609 040c 07F53163 		add	r3, r7, #2832
 610 0410 D3E90023 		ldrd	r2, [r3]
 611 0414 07F64811 		addw	r1, r7, #2376
 612 0418 D1E90001 		ldrd	r0, [r1]
 613 041c 8446     		mov	ip, r0
 614 041e 8CEA020C 		eor	ip, ip, r2
 615 0422 C7F840C9 		str	ip, [r7, #2368]
 616 0426 4B40     		eors	r3, r3, r1
 617 0428 C7F84439 		str	r3, [r7, #2372]
 618              		.loc 1 134 30 discriminator 3
 619 042c 07F6E823 		addw	r3, r7, #2792
 620 0430 D3E90023 		ldrd	r2, [r3]
 621 0434 07F51461 		add	r1, r7, #2368
 622 0438 D1E90001 		ldrd	r0, [r1]
 623 043c 8446     		mov	ip, r0
 624 043e 8CEA020C 		eor	ip, ip, r2
 625 0442 C7F838C9 		str	ip, [r7, #2360]
 626 0446 4B40     		eors	r3, r3, r1
 627 0448 C7F83C39 		str	r3, [r7, #2364]
 628              		.loc 1 134 17 discriminator 3
 629 044c 07F52C63 		add	r3, r7, #2752
 630 0450 D3E90023 		ldrd	r2, [r3]
 631 0454 07F63811 		addw	r1, r7, #2360
 632 0458 D1E90001 		ldrd	r0, [r1]
 633 045c 8446     		mov	ip, r0
 634 045e 82EA0C0C 		eor	ip, r2, ip
 635 0462 C7F830C5 		str	ip, [r7, #1328]
 636 0466 4B40     		eors	r3, r3, r1
 637 0468 C7F83435 		str	r3, [r7, #1332]
 638 046c 07F5A663 		add	r3, r7, #1328
 639 0470 D3E90023 		ldrd	r2, [r3]
 640 0474 07F69821 		addw	r1, r7, #2712
 641 0478 C1E90023 		strd	r2, [r1]
 135:fips202.c     ****             BCu = Abu^Agu^Aku^Amu^Asu;
 642              		.loc 1 135 22 discriminator 3
 643 047c 07F65833 		addw	r3, r7, #2904
 644 0480 D3E90001 		ldrd	r0, [r3]
 645 0484 07F53363 		add	r3, r7, #2864
 646 0488 D3E90023 		ldrd	r2, [r3]
 647 048c 80EA020C 		eor	ip, r0, r2
 648 0490 C7F830C9 		str	ip, [r7, #2352]
 649 0494 4B40     		eors	r3, r3, r1
 650 0496 C7F83439 		str	r3, [r7, #2356]
 651              		.loc 1 135 26 discriminator 3
 652 049a 07F60833 		addw	r3, r7, #2824
 653 049e D3E90023 		ldrd	r2, [r3]
 654 04a2 07F51361 		add	r1, r7, #2352
 655 04a6 D1E90001 		ldrd	r0, [r1]
 656 04aa 8446     		mov	ip, r0
 657 04ac 8CEA020C 		eor	ip, ip, r2
 658 04b0 C7F828C9 		str	ip, [r7, #2344]
 659 04b4 4B40     		eors	r3, r3, r1
 660 04b6 C7F82C39 		str	r3, [r7, #2348]
 661              		.loc 1 135 30 discriminator 3
 662 04ba 07F52E63 		add	r3, r7, #2784
 663 04be D3E90023 		ldrd	r2, [r3]
 664 04c2 07F62811 		addw	r1, r7, #2344
 665 04c6 D1E90001 		ldrd	r0, [r1]
 666 04ca 8446     		mov	ip, r0
 667 04cc 8CEA020C 		eor	ip, ip, r2
 668 04d0 C7F820C9 		str	ip, [r7, #2336]
 669 04d4 4B40     		eors	r3, r3, r1
 670 04d6 C7F82439 		str	r3, [r7, #2340]
 671              		.loc 1 135 17 discriminator 3
 672 04da 07F6B823 		addw	r3, r7, #2744
 673 04de D3E90023 		ldrd	r2, [r3]
 674 04e2 07F51261 		add	r1, r7, #2336
 675 04e6 D1E90001 		ldrd	r0, [r1]
 676 04ea 8446     		mov	ip, r0
 677 04ec 82EA0C0C 		eor	ip, r2, ip
 678 04f0 C7F828C5 		str	ip, [r7, #1320]
 679 04f4 4B40     		eors	r3, r3, r1
 680 04f6 C7F82C35 		str	r3, [r7, #1324]
 681 04fa 07F5A563 		add	r3, r7, #1320
 682 04fe D3E90023 		ldrd	r2, [r3]
 683 0502 07F52961 		add	r1, r7, #2704
 684 0506 C1E90023 		strd	r2, [r1]
 136:fips202.c     **** 
 137:fips202.c     ****             //thetaRhoPiChiIotaPrepareTheta(round  , A, E)
 138:fips202.c     ****             Da = BCu^ROL(BCe, 1);
 685              		.loc 1 138 22 discriminator 3
 686 050a D7F8A83A 		ldr	r3, [r7, #2728]
 687 050e DA0F     		lsrs	r2, r3, #31
 688 0510 D7F8AC3A 		ldr	r3, [r7, #2732]
 689 0514 5B00     		lsls	r3, r3, #1
 690 0516 1343     		orrs	r3, r3, r2
 691 0518 C7F81C39 		str	r3, [r7, #2332]
 692 051c D7F8AC3A 		ldr	r3, [r7, #2732]
 693 0520 DA0F     		lsrs	r2, r3, #31
 694 0522 D7F8A83A 		ldr	r3, [r7, #2728]
 695 0526 5B00     		lsls	r3, r3, #1
 696 0528 1343     		orrs	r3, r3, r2
 697 052a C7F81839 		str	r3, [r7, #2328]
 698              		.loc 1 138 16 discriminator 3
 699 052e 07F52963 		add	r3, r7, #2704
 700 0532 D3E90023 		ldrd	r2, [r3]
 701 0536 07F61811 		addw	r1, r7, #2328
 702 053a D1E90001 		ldrd	r0, [r1]
 703 053e 8446     		mov	ip, r0
 704 0540 82EA0C0C 		eor	ip, r2, ip
 705 0544 C7F820C5 		str	ip, [r7, #1312]
 706 0548 4B40     		eors	r3, r3, r1
 707 054a C7F82435 		str	r3, [r7, #1316]
 708 054e 07F5A463 		add	r3, r7, #1312
 709 0552 D3E90023 		ldrd	r2, [r3]
 710 0556 07F68821 		addw	r1, r7, #2696
 711 055a C1E90023 		strd	r2, [r1]
 139:fips202.c     ****             De = BCa^ROL(BCi, 1);
 712              		.loc 1 139 22 discriminator 3
 713 055e D7F8A03A 		ldr	r3, [r7, #2720]
 714 0562 DA0F     		lsrs	r2, r3, #31
 715 0564 D7F8A43A 		ldr	r3, [r7, #2724]
 716 0568 5B00     		lsls	r3, r3, #1
 717 056a 1343     		orrs	r3, r3, r2
 718 056c C7F81439 		str	r3, [r7, #2324]
 719 0570 D7F8A43A 		ldr	r3, [r7, #2724]
 720 0574 DA0F     		lsrs	r2, r3, #31
 721 0576 D7F8A03A 		ldr	r3, [r7, #2720]
 722 057a 5B00     		lsls	r3, r3, #1
 723 057c 1343     		orrs	r3, r3, r2
 724 057e C7F81039 		str	r3, [r7, #2320]
 725              		.loc 1 139 16 discriminator 3
 726 0582 07F52B63 		add	r3, r7, #2736
 727 0586 D3E90023 		ldrd	r2, [r3]
 728 058a 07F51161 		add	r1, r7, #2320
 729 058e D1E90001 		ldrd	r0, [r1]
 730 0592 8446     		mov	ip, r0
 731 0594 82EA0C0C 		eor	ip, r2, ip
 732 0598 C7F818C5 		str	ip, [r7, #1304]
 733 059c 4B40     		eors	r3, r3, r1
 734 059e C7F81C35 		str	r3, [r7, #1308]
 735 05a2 07F5A363 		add	r3, r7, #1304
 736 05a6 D3E90023 		ldrd	r2, [r3]
 737 05aa 07F52861 		add	r1, r7, #2688
 738 05ae C1E90023 		strd	r2, [r1]
 140:fips202.c     ****             Di = BCe^ROL(BCo, 1);
 739              		.loc 1 140 22 discriminator 3
 740 05b2 D7F8983A 		ldr	r3, [r7, #2712]
 741 05b6 DA0F     		lsrs	r2, r3, #31
 742 05b8 D7F89C3A 		ldr	r3, [r7, #2716]
 743 05bc 5B00     		lsls	r3, r3, #1
 744 05be 1343     		orrs	r3, r3, r2
 745 05c0 C7F80C39 		str	r3, [r7, #2316]
 746 05c4 D7F89C3A 		ldr	r3, [r7, #2716]
 747 05c8 DA0F     		lsrs	r2, r3, #31
 748 05ca D7F8983A 		ldr	r3, [r7, #2712]
 749 05ce 5B00     		lsls	r3, r3, #1
 750 05d0 1343     		orrs	r3, r3, r2
 751 05d2 C7F80839 		str	r3, [r7, #2312]
 752              		.loc 1 140 16 discriminator 3
 753 05d6 07F6A823 		addw	r3, r7, #2728
 754 05da D3E90023 		ldrd	r2, [r3]
 755 05de 07F60811 		addw	r1, r7, #2312
 756 05e2 D1E90001 		ldrd	r0, [r1]
 757 05e6 8446     		mov	ip, r0
 758 05e8 82EA0C0C 		eor	ip, r2, ip
 759 05ec C7F810C5 		str	ip, [r7, #1296]
 760 05f0 4B40     		eors	r3, r3, r1
 761 05f2 C7F81435 		str	r3, [r7, #1300]
 762 05f6 07F5A263 		add	r3, r7, #1296
 763 05fa D3E90023 		ldrd	r2, [r3]
 764 05fe 07F67821 		addw	r1, r7, #2680
 765 0602 C1E90023 		strd	r2, [r1]
 141:fips202.c     ****             Do = BCi^ROL(BCu, 1);
 766              		.loc 1 141 22 discriminator 3
 767 0606 D7F8903A 		ldr	r3, [r7, #2704]
 768 060a DA0F     		lsrs	r2, r3, #31
 769 060c D7F8943A 		ldr	r3, [r7, #2708]
 770 0610 5B00     		lsls	r3, r3, #1
 771 0612 1343     		orrs	r3, r3, r2
 772 0614 C7F80439 		str	r3, [r7, #2308]
 773 0618 D7F8943A 		ldr	r3, [r7, #2708]
 774 061c DA0F     		lsrs	r2, r3, #31
 775 061e D7F8903A 		ldr	r3, [r7, #2704]
 776 0622 5B00     		lsls	r3, r3, #1
 777 0624 1343     		orrs	r3, r3, r2
 778 0626 C7F80039 		str	r3, [r7, #2304]
 779              		.loc 1 141 16 discriminator 3
 780 062a 07F52A63 		add	r3, r7, #2720
 781 062e D3E90023 		ldrd	r2, [r3]
 782 0632 07F51061 		add	r1, r7, #2304
 783 0636 D1E90001 		ldrd	r0, [r1]
 784 063a 8446     		mov	ip, r0
 785 063c 82EA0C0C 		eor	ip, r2, ip
 786 0640 C7F808C5 		str	ip, [r7, #1288]
 787 0644 4B40     		eors	r3, r3, r1
 788 0646 C7F80C35 		str	r3, [r7, #1292]
 789 064a 07F5A163 		add	r3, r7, #1288
 790 064e D3E90023 		ldrd	r2, [r3]
 791 0652 07F52761 		add	r1, r7, #2672
 792 0656 C1E90023 		strd	r2, [r1]
 142:fips202.c     ****             Du = BCo^ROL(BCa, 1);
 793              		.loc 1 142 22 discriminator 3
 794 065a D7F8B03A 		ldr	r3, [r7, #2736]
 795 065e DA0F     		lsrs	r2, r3, #31
 796 0660 D7F8B43A 		ldr	r3, [r7, #2740]
 797 0664 5B00     		lsls	r3, r3, #1
 798 0666 1343     		orrs	r3, r3, r2
 799 0668 C7F8FC38 		str	r3, [r7, #2300]
 800 066c D7F8B43A 		ldr	r3, [r7, #2740]
 801 0670 DA0F     		lsrs	r2, r3, #31
 802 0672 D7F8B03A 		ldr	r3, [r7, #2736]
 803 0676 5B00     		lsls	r3, r3, #1
 804 0678 1343     		orrs	r3, r3, r2
 805 067a C7F8F838 		str	r3, [r7, #2296]
 806              		.loc 1 142 16 discriminator 3
 807 067e 07F69823 		addw	r3, r7, #2712
 808 0682 D3E90023 		ldrd	r2, [r3]
 809 0686 07F6F801 		addw	r1, r7, #2296
 810 068a D1E90001 		ldrd	r0, [r1]
 811 068e 8446     		mov	ip, r0
 812 0690 82EA0C0C 		eor	ip, r2, ip
 813 0694 C7F800C5 		str	ip, [r7, #1280]
 814 0698 4B40     		eors	r3, r3, r1
 815 069a C7F80435 		str	r3, [r7, #1284]
 816 069e 07F5A063 		add	r3, r7, #1280
 817 06a2 D3E90023 		ldrd	r2, [r3]
 818 06a6 07F66821 		addw	r1, r7, #2664
 819 06aa C1E90023 		strd	r2, [r1]
 143:fips202.c     **** 
 144:fips202.c     ****             Aba ^= Da;
 820              		.loc 1 144 17 discriminator 3
 821 06ae 07F67833 		addw	r3, r7, #2936
 822 06b2 D3E90001 		ldrd	r0, [r3]
 823 06b6 07F68823 		addw	r3, r7, #2696
 824 06ba D3E90023 		ldrd	r2, [r3]
 825 06be 80EA020C 		eor	ip, r0, r2
 826 06c2 C7F8F8C4 		str	ip, [r7, #1272]
 827 06c6 4B40     		eors	r3, r3, r1
 828 06c8 C7F8FC34 		str	r3, [r7, #1276]
 829 06cc 07F59F63 		add	r3, r7, #1272
 830 06d0 D3E90023 		ldrd	r2, [r3]
 831 06d4 07F67831 		addw	r1, r7, #2936
 832 06d8 C1E90023 		strd	r2, [r1]
 145:fips202.c     ****             BCa = Aba;
 833              		.loc 1 145 17 discriminator 3
 834 06dc 07F67833 		addw	r3, r7, #2936
 835 06e0 D3E90023 		ldrd	r2, [r3]
 836 06e4 07F52B61 		add	r1, r7, #2736
 837 06e8 C1E90023 		strd	r2, [r1]
 146:fips202.c     ****             Age ^= De;
 838              		.loc 1 146 17 discriminator 3
 839 06ec 07F64833 		addw	r3, r7, #2888
 840 06f0 D3E90001 		ldrd	r0, [r3]
 841 06f4 07F52863 		add	r3, r7, #2688
 842 06f8 D3E90023 		ldrd	r2, [r3]
 843 06fc 80EA020C 		eor	ip, r0, r2
 844 0700 C7F8F0C4 		str	ip, [r7, #1264]
 845 0704 4B40     		eors	r3, r3, r1
 846 0706 C7F8F434 		str	r3, [r7, #1268]
 847 070a 07F59E63 		add	r3, r7, #1264
 848 070e D3E90023 		ldrd	r2, [r3]
 849 0712 07F64831 		addw	r1, r7, #2888
 850 0716 C1E90023 		strd	r2, [r1]
 147:fips202.c     ****             BCe = ROL(Age, 44);
 851              		.loc 1 147 17 discriminator 3
 852 071a D7F84C3B 		ldr	r3, [r7, #2892]
 853 071e 1A03     		lsls	r2, r3, #12
 854 0720 D7F8483B 		ldr	r3, [r7, #2888]
 855 0724 1B0D     		lsrs	r3, r3, #20
 856 0726 1343     		orrs	r3, r3, r2
 857 0728 C7F8E834 		str	r3, [r7, #1256]
 858 072c D7F8483B 		ldr	r3, [r7, #2888]
 859 0730 1A03     		lsls	r2, r3, #12
 860 0732 D7F84C3B 		ldr	r3, [r7, #2892]
 861 0736 1B0D     		lsrs	r3, r3, #20
 862 0738 1343     		orrs	r3, r3, r2
 863 073a C7F8EC34 		str	r3, [r7, #1260]
 864 073e 07F59D63 		add	r3, r7, #1256
 865 0742 D3E90023 		ldrd	r2, [r3]
 866 0746 07F6A821 		addw	r1, r7, #2728
 867 074a C1E90023 		strd	r2, [r1]
 148:fips202.c     ****             Aki ^= Di;
 868              		.loc 1 148 17 discriminator 3
 869 074e 07F61833 		addw	r3, r7, #2840
 870 0752 D3E90001 		ldrd	r0, [r3]
 871 0756 07F67823 		addw	r3, r7, #2680
 872 075a D3E90023 		ldrd	r2, [r3]
 873 075e 80EA020C 		eor	ip, r0, r2
 874 0762 C7F8E0C4 		str	ip, [r7, #1248]
 875 0766 4B40     		eors	r3, r3, r1
 876 0768 C7F8E434 		str	r3, [r7, #1252]
 877 076c 07F59C63 		add	r3, r7, #1248
 878 0770 D3E90023 		ldrd	r2, [r3]
 879 0774 07F61831 		addw	r1, r7, #2840
 880 0778 C1E90023 		strd	r2, [r1]
 149:fips202.c     ****             BCi = ROL(Aki, 43);
 881              		.loc 1 149 17 discriminator 3
 882 077c D7F81C3B 		ldr	r3, [r7, #2844]
 883 0780 DA02     		lsls	r2, r3, #11
 884 0782 D7F8183B 		ldr	r3, [r7, #2840]
 885 0786 5B0D     		lsrs	r3, r3, #21
 886 0788 1343     		orrs	r3, r3, r2
 887 078a C7F8D834 		str	r3, [r7, #1240]
 888 078e D7F8183B 		ldr	r3, [r7, #2840]
 889 0792 DA02     		lsls	r2, r3, #11
 890 0794 D7F81C3B 		ldr	r3, [r7, #2844]
 891 0798 5B0D     		lsrs	r3, r3, #21
 892 079a 1343     		orrs	r3, r3, r2
 893 079c C7F8DC34 		str	r3, [r7, #1244]
 894 07a0 07F59B63 		add	r3, r7, #1240
 895 07a4 D3E90023 		ldrd	r2, [r3]
 896 07a8 07F52A61 		add	r1, r7, #2720
 897 07ac C1E90023 		strd	r2, [r1]
 150:fips202.c     ****             Amo ^= Do;
 898              		.loc 1 150 17 discriminator 3
 899 07b0 07F6E823 		addw	r3, r7, #2792
 900 07b4 D3E90001 		ldrd	r0, [r3]
 901 07b8 07F52763 		add	r3, r7, #2672
 902 07bc D3E90023 		ldrd	r2, [r3]
 903 07c0 80EA020C 		eor	ip, r0, r2
 904 07c4 C7F8D0C4 		str	ip, [r7, #1232]
 905 07c8 4B40     		eors	r3, r3, r1
 906 07ca C7F8D434 		str	r3, [r7, #1236]
 907 07ce 07F59A63 		add	r3, r7, #1232
 908 07d2 D3E90023 		ldrd	r2, [r3]
 909 07d6 07F6E821 		addw	r1, r7, #2792
 910 07da C1E90023 		strd	r2, [r1]
 151:fips202.c     ****             BCo = ROL(Amo, 21);
 911              		.loc 1 151 17 discriminator 3
 912 07de D7F8E83A 		ldr	r3, [r7, #2792]
 913 07e2 DA0A     		lsrs	r2, r3, #11
 914 07e4 D7F8EC3A 		ldr	r3, [r7, #2796]
 915 07e8 5B05     		lsls	r3, r3, #21
 916 07ea 1343     		orrs	r3, r3, r2
 917 07ec C7F8CC34 		str	r3, [r7, #1228]
 918 07f0 D7F8EC3A 		ldr	r3, [r7, #2796]
 919 07f4 DA0A     		lsrs	r2, r3, #11
 920 07f6 D7F8E83A 		ldr	r3, [r7, #2792]
 921 07fa 5B05     		lsls	r3, r3, #21
 922 07fc 1343     		orrs	r3, r3, r2
 923 07fe C7F8C834 		str	r3, [r7, #1224]
 924 0802 07F59963 		add	r3, r7, #1224
 925 0806 D3E90023 		ldrd	r2, [r3]
 926 080a 07F69821 		addw	r1, r7, #2712
 927 080e C1E90023 		strd	r2, [r1]
 152:fips202.c     ****             Asu ^= Du;
 928              		.loc 1 152 17 discriminator 3
 929 0812 07F6B823 		addw	r3, r7, #2744
 930 0816 D3E90001 		ldrd	r0, [r3]
 931 081a 07F66823 		addw	r3, r7, #2664
 932 081e D3E90023 		ldrd	r2, [r3]
 933 0822 80EA020C 		eor	ip, r0, r2
 934 0826 C7F8C0C4 		str	ip, [r7, #1216]
 935 082a 4B40     		eors	r3, r3, r1
 936 082c C7F8C434 		str	r3, [r7, #1220]
 937 0830 07F59863 		add	r3, r7, #1216
 938 0834 D3E90023 		ldrd	r2, [r3]
 939 0838 07F6B821 		addw	r1, r7, #2744
 940 083c C1E90023 		strd	r2, [r1]
 153:fips202.c     ****             BCu = ROL(Asu, 14);
 941              		.loc 1 153 17 discriminator 3
 942 0840 D7F8B83A 		ldr	r3, [r7, #2744]
 943 0844 9A0C     		lsrs	r2, r3, #18
 944 0846 D7F8BC3A 		ldr	r3, [r7, #2748]
 945 084a 9B03     		lsls	r3, r3, #14
 946 084c 1343     		orrs	r3, r3, r2
 947 084e C7F8BC34 		str	r3, [r7, #1212]
 948 0852 D7F8BC3A 		ldr	r3, [r7, #2748]
 949 0856 9A0C     		lsrs	r2, r3, #18
 950 0858 D7F8B83A 		ldr	r3, [r7, #2744]
 951 085c 9B03     		lsls	r3, r3, #14
 952 085e 1343     		orrs	r3, r3, r2
 953 0860 C7F8B834 		str	r3, [r7, #1208]
 954 0864 07F59763 		add	r3, r7, #1208
 955 0868 D3E90023 		ldrd	r2, [r3]
 956 086c 07F52961 		add	r1, r7, #2704
 957 0870 C1E90023 		strd	r2, [r1]
 154:fips202.c     ****             Eba =   BCa ^((~BCe)&  BCi );
 958              		.loc 1 154 28 discriminator 3
 959 0874 07F6A823 		addw	r3, r7, #2728
 960 0878 D3E90023 		ldrd	r2, [r3]
 961 087c D143     		mvns	r1, r2
 962 087e C7F8F018 		str	r1, [r7, #2288]
 963 0882 DB43     		mvns	r3, r3
 964 0884 C7F8F438 		str	r3, [r7, #2292]
 965              		.loc 1 154 33 discriminator 3
 966 0888 07F52A63 		add	r3, r7, #2720
 967 088c D3E90023 		ldrd	r2, [r3]
 968 0890 07F50F61 		add	r1, r7, #2288
 969 0894 D1E90001 		ldrd	r0, [r1]
 970 0898 8446     		mov	ip, r0
 971 089a 0CEA020C 		and	ip, ip, r2
 972 089e C7F8E8C8 		str	ip, [r7, #2280]
 973 08a2 0B40     		ands	r3, r3, r1
 974 08a4 C7F8EC38 		str	r3, [r7, #2284]
 975              		.loc 1 154 17 discriminator 3
 976 08a8 07F52B63 		add	r3, r7, #2736
 977 08ac D3E90023 		ldrd	r2, [r3]
 978 08b0 07F6E801 		addw	r1, r7, #2280
 979 08b4 D1E90001 		ldrd	r0, [r1]
 980 08b8 8446     		mov	ip, r0
 981 08ba 82EA0C0C 		eor	ip, r2, ip
 982 08be C7F8B0C4 		str	ip, [r7, #1200]
 983 08c2 4B40     		eors	r3, r3, r1
 984 08c4 C7F8B434 		str	r3, [r7, #1204]
 985 08c8 07F59663 		add	r3, r7, #1200
 986 08cc D3E90023 		ldrd	r2, [r3]
 987 08d0 07F52661 		add	r1, r7, #2656
 988 08d4 C1E90023 		strd	r2, [r1]
 155:fips202.c     ****             Eba ^= (uint64_t)KeccakF_RoundConstants[round];
 989              		.loc 1 155 52 discriminator 3
 990 08d8 C74A     		ldr	r2, .L11
 991 08da D7F8843B 		ldr	r3, [r7, #2948]
 992 08de DB00     		lsls	r3, r3, #3
 993 08e0 1344     		add	r3, r3, r2
 994 08e2 D3E90001 		ldrd	r0, [r3]
 995              		.loc 1 155 17 discriminator 3
 996 08e6 07F52663 		add	r3, r7, #2656
 997 08ea D3E90023 		ldrd	r2, [r3]
 998 08ee 82EA000C 		eor	ip, r2, r0
 999 08f2 C7F8A8C4 		str	ip, [r7, #1192]
 1000 08f6 4B40     		eors	r3, r3, r1
 1001 08f8 C7F8AC34 		str	r3, [r7, #1196]
 1002 08fc 07F59563 		add	r3, r7, #1192
 1003 0900 D3E90023 		ldrd	r2, [r3]
 1004 0904 07F52661 		add	r1, r7, #2656
 1005 0908 C1E90023 		strd	r2, [r1]
 156:fips202.c     ****             Ebe =   BCe ^((~BCi)&  BCo );
 1006              		.loc 1 156 28 discriminator 3
 1007 090c 07F52A63 		add	r3, r7, #2720
 1008 0910 D3E90023 		ldrd	r2, [r3]
 1009 0914 D143     		mvns	r1, r2
 1010 0916 C7F8E018 		str	r1, [r7, #2272]
 1011 091a DB43     		mvns	r3, r3
 1012 091c C7F8E438 		str	r3, [r7, #2276]
 1013              		.loc 1 156 33 discriminator 3
 1014 0920 07F69823 		addw	r3, r7, #2712
 1015 0924 D3E90023 		ldrd	r2, [r3]
 1016 0928 07F50E61 		add	r1, r7, #2272
 1017 092c D1E90001 		ldrd	r0, [r1]
 1018 0930 8446     		mov	ip, r0
 1019 0932 0CEA020C 		and	ip, ip, r2
 1020 0936 C7F8D8C8 		str	ip, [r7, #2264]
 1021 093a 0B40     		ands	r3, r3, r1
 1022 093c C7F8DC38 		str	r3, [r7, #2268]
 1023              		.loc 1 156 17 discriminator 3
 1024 0940 07F6A823 		addw	r3, r7, #2728
 1025 0944 D3E90023 		ldrd	r2, [r3]
 1026 0948 07F6D801 		addw	r1, r7, #2264
 1027 094c D1E90001 		ldrd	r0, [r1]
 1028 0950 8446     		mov	ip, r0
 1029 0952 82EA0C0C 		eor	ip, r2, ip
 1030 0956 C7F8A0C4 		str	ip, [r7, #1184]
 1031 095a 4B40     		eors	r3, r3, r1
 1032 095c C7F8A434 		str	r3, [r7, #1188]
 1033 0960 07F59463 		add	r3, r7, #1184
 1034 0964 D3E90023 		ldrd	r2, [r3]
 1035 0968 07F65821 		addw	r1, r7, #2648
 1036 096c C1E90023 		strd	r2, [r1]
 157:fips202.c     ****             Ebi =   BCi ^((~BCo)&  BCu );
 1037              		.loc 1 157 28 discriminator 3
 1038 0970 07F69823 		addw	r3, r7, #2712
 1039 0974 D3E90023 		ldrd	r2, [r3]
 1040 0978 D143     		mvns	r1, r2
 1041 097a C7F8D018 		str	r1, [r7, #2256]
 1042 097e DB43     		mvns	r3, r3
 1043 0980 C7F8D438 		str	r3, [r7, #2260]
 1044              		.loc 1 157 33 discriminator 3
 1045 0984 07F52963 		add	r3, r7, #2704
 1046 0988 D3E90023 		ldrd	r2, [r3]
 1047 098c 07F50D61 		add	r1, r7, #2256
 1048 0990 D1E90001 		ldrd	r0, [r1]
 1049 0994 8446     		mov	ip, r0
 1050 0996 0CEA020C 		and	ip, ip, r2
 1051 099a C7F8C8C8 		str	ip, [r7, #2248]
 1052 099e 0B40     		ands	r3, r3, r1
 1053 09a0 C7F8CC38 		str	r3, [r7, #2252]
 1054              		.loc 1 157 17 discriminator 3
 1055 09a4 07F52A63 		add	r3, r7, #2720
 1056 09a8 D3E90023 		ldrd	r2, [r3]
 1057 09ac 07F6C801 		addw	r1, r7, #2248
 1058 09b0 D1E90001 		ldrd	r0, [r1]
 1059 09b4 8446     		mov	ip, r0
 1060 09b6 82EA0C0C 		eor	ip, r2, ip
 1061 09ba C7F898C4 		str	ip, [r7, #1176]
 1062 09be 4B40     		eors	r3, r3, r1
 1063 09c0 C7F89C34 		str	r3, [r7, #1180]
 1064 09c4 07F59363 		add	r3, r7, #1176
 1065 09c8 D3E90023 		ldrd	r2, [r3]
 1066 09cc 07F52561 		add	r1, r7, #2640
 1067 09d0 C1E90023 		strd	r2, [r1]
 158:fips202.c     ****             Ebo =   BCo ^((~BCu)&  BCa );
 1068              		.loc 1 158 28 discriminator 3
 1069 09d4 07F52963 		add	r3, r7, #2704
 1070 09d8 D3E90023 		ldrd	r2, [r3]
 1071 09dc D143     		mvns	r1, r2
 1072 09de C7F8C018 		str	r1, [r7, #2240]
 1073 09e2 DB43     		mvns	r3, r3
 1074 09e4 C7F8C438 		str	r3, [r7, #2244]
 1075              		.loc 1 158 33 discriminator 3
 1076 09e8 07F52B63 		add	r3, r7, #2736
 1077 09ec D3E90023 		ldrd	r2, [r3]
 1078 09f0 07F50C61 		add	r1, r7, #2240
 1079 09f4 D1E90001 		ldrd	r0, [r1]
 1080 09f8 8446     		mov	ip, r0
 1081 09fa 0CEA020C 		and	ip, ip, r2
 1082 09fe C7F8B8C8 		str	ip, [r7, #2232]
 1083 0a02 0B40     		ands	r3, r3, r1
 1084 0a04 C7F8BC38 		str	r3, [r7, #2236]
 1085              		.loc 1 158 17 discriminator 3
 1086 0a08 07F69823 		addw	r3, r7, #2712
 1087 0a0c D3E90023 		ldrd	r2, [r3]
 1088 0a10 07F6B801 		addw	r1, r7, #2232
 1089 0a14 D1E90001 		ldrd	r0, [r1]
 1090 0a18 8446     		mov	ip, r0
 1091 0a1a 82EA0C0C 		eor	ip, r2, ip
 1092 0a1e C7F890C4 		str	ip, [r7, #1168]
 1093 0a22 4B40     		eors	r3, r3, r1
 1094 0a24 C7F89434 		str	r3, [r7, #1172]
 1095 0a28 07F59263 		add	r3, r7, #1168
 1096 0a2c D3E90023 		ldrd	r2, [r3]
 1097 0a30 07F64821 		addw	r1, r7, #2632
 1098 0a34 C1E90023 		strd	r2, [r1]
 159:fips202.c     ****             Ebu =   BCu ^((~BCa)&  BCe );
 1099              		.loc 1 159 28 discriminator 3
 1100 0a38 07F52B63 		add	r3, r7, #2736
 1101 0a3c D3E90023 		ldrd	r2, [r3]
 1102 0a40 D143     		mvns	r1, r2
 1103 0a42 C7F8B018 		str	r1, [r7, #2224]
 1104 0a46 DB43     		mvns	r3, r3
 1105 0a48 C7F8B438 		str	r3, [r7, #2228]
 1106              		.loc 1 159 33 discriminator 3
 1107 0a4c 07F6A823 		addw	r3, r7, #2728
 1108 0a50 D3E90023 		ldrd	r2, [r3]
 1109 0a54 07F50B61 		add	r1, r7, #2224
 1110 0a58 D1E90001 		ldrd	r0, [r1]
 1111 0a5c 8446     		mov	ip, r0
 1112 0a5e 0CEA020C 		and	ip, ip, r2
 1113 0a62 C7F8A8C8 		str	ip, [r7, #2216]
 1114 0a66 0B40     		ands	r3, r3, r1
 1115 0a68 C7F8AC38 		str	r3, [r7, #2220]
 1116              		.loc 1 159 17 discriminator 3
 1117 0a6c 07F52963 		add	r3, r7, #2704
 1118 0a70 D3E90023 		ldrd	r2, [r3]
 1119 0a74 07F6A801 		addw	r1, r7, #2216
 1120 0a78 D1E90001 		ldrd	r0, [r1]
 1121 0a7c 8446     		mov	ip, r0
 1122 0a7e 82EA0C0C 		eor	ip, r2, ip
 1123 0a82 C7F888C4 		str	ip, [r7, #1160]
 1124 0a86 4B40     		eors	r3, r3, r1
 1125 0a88 C7F88C34 		str	r3, [r7, #1164]
 1126 0a8c 07F59163 		add	r3, r7, #1160
 1127 0a90 D3E90023 		ldrd	r2, [r3]
 1128 0a94 07F52461 		add	r1, r7, #2624
 1129 0a98 C1E90023 		strd	r2, [r1]
 160:fips202.c     **** 
 161:fips202.c     ****             Abo ^= Do;
 1130              		.loc 1 161 17 discriminator 3
 1131 0a9c 07F53663 		add	r3, r7, #2912
 1132 0aa0 D3E90001 		ldrd	r0, [r3]
 1133 0aa4 07F52763 		add	r3, r7, #2672
 1134 0aa8 D3E90023 		ldrd	r2, [r3]
 1135 0aac 80EA020C 		eor	ip, r0, r2
 1136 0ab0 C7F880C4 		str	ip, [r7, #1152]
 1137 0ab4 4B40     		eors	r3, r3, r1
 1138 0ab6 C7F88434 		str	r3, [r7, #1156]
 1139 0aba 07F59063 		add	r3, r7, #1152
 1140 0abe D3E90023 		ldrd	r2, [r3]
 1141 0ac2 07F53661 		add	r1, r7, #2912
 1142 0ac6 C1E90023 		strd	r2, [r1]
 162:fips202.c     ****             BCa = ROL(Abo, 28);
 1143              		.loc 1 162 17 discriminator 3
 1144 0aca D7F8603B 		ldr	r3, [r7, #2912]
 1145 0ace 1A09     		lsrs	r2, r3, #4
 1146 0ad0 D7F8643B 		ldr	r3, [r7, #2916]
 1147 0ad4 1B07     		lsls	r3, r3, #28
 1148 0ad6 1343     		orrs	r3, r3, r2
 1149 0ad8 C7F87C34 		str	r3, [r7, #1148]
 1150 0adc D7F8643B 		ldr	r3, [r7, #2916]
 1151 0ae0 1A09     		lsrs	r2, r3, #4
 1152 0ae2 D7F8603B 		ldr	r3, [r7, #2912]
 1153 0ae6 1B07     		lsls	r3, r3, #28
 1154 0ae8 1343     		orrs	r3, r3, r2
 1155 0aea C7F87834 		str	r3, [r7, #1144]
 1156 0aee 07F58F63 		add	r3, r7, #1144
 1157 0af2 D3E90023 		ldrd	r2, [r3]
 1158 0af6 07F52B61 		add	r1, r7, #2736
 1159 0afa C1E90023 		strd	r2, [r1]
 163:fips202.c     ****             Agu ^= Du;
 1160              		.loc 1 163 17 discriminator 3
 1161 0afe 07F53363 		add	r3, r7, #2864
 1162 0b02 D3E90001 		ldrd	r0, [r3]
 1163 0b06 07F66823 		addw	r3, r7, #2664
 1164 0b0a D3E90023 		ldrd	r2, [r3]
 1165 0b0e 80EA020C 		eor	ip, r0, r2
 1166 0b12 C7F870C4 		str	ip, [r7, #1136]
 1167 0b16 4B40     		eors	r3, r3, r1
 1168 0b18 C7F87434 		str	r3, [r7, #1140]
 1169 0b1c 07F58E63 		add	r3, r7, #1136
 1170 0b20 D3E90023 		ldrd	r2, [r3]
 1171 0b24 07F53361 		add	r1, r7, #2864
 1172 0b28 C1E90023 		strd	r2, [r1]
 164:fips202.c     ****             BCe = ROL(Agu, 20);
 1173              		.loc 1 164 17 discriminator 3
 1174 0b2c D7F8303B 		ldr	r3, [r7, #2864]
 1175 0b30 1A0B     		lsrs	r2, r3, #12
 1176 0b32 D7F8343B 		ldr	r3, [r7, #2868]
 1177 0b36 1B05     		lsls	r3, r3, #20
 1178 0b38 1343     		orrs	r3, r3, r2
 1179 0b3a C7F86C34 		str	r3, [r7, #1132]
 1180 0b3e D7F8343B 		ldr	r3, [r7, #2868]
 1181 0b42 1A0B     		lsrs	r2, r3, #12
 1182 0b44 D7F8303B 		ldr	r3, [r7, #2864]
 1183 0b48 1B05     		lsls	r3, r3, #20
 1184 0b4a 1343     		orrs	r3, r3, r2
 1185 0b4c C7F86834 		str	r3, [r7, #1128]
 1186 0b50 07F58D63 		add	r3, r7, #1128
 1187 0b54 D3E90023 		ldrd	r2, [r3]
 1188 0b58 07F6A821 		addw	r1, r7, #2728
 1189 0b5c C1E90023 		strd	r2, [r1]
 165:fips202.c     ****             Aka ^= Da;
 1190              		.loc 1 165 17 discriminator 3
 1191 0b60 07F62833 		addw	r3, r7, #2856
 1192 0b64 D3E90001 		ldrd	r0, [r3]
 1193 0b68 07F68823 		addw	r3, r7, #2696
 1194 0b6c D3E90023 		ldrd	r2, [r3]
 1195 0b70 80EA020C 		eor	ip, r0, r2
 1196 0b74 C7F860C4 		str	ip, [r7, #1120]
 1197 0b78 4B40     		eors	r3, r3, r1
 1198 0b7a C7F86434 		str	r3, [r7, #1124]
 1199 0b7e 07F58C63 		add	r3, r7, #1120
 1200 0b82 D3E90023 		ldrd	r2, [r3]
 1201 0b86 07F62831 		addw	r1, r7, #2856
 1202 0b8a C1E90023 		strd	r2, [r1]
 166:fips202.c     ****             BCi = ROL(Aka,  3);
 1203              		.loc 1 166 17 discriminator 3
 1204 0b8e D7F8283B 		ldr	r3, [r7, #2856]
 1205 0b92 5A0F     		lsrs	r2, r3, #29
 1206 0b94 D7F82C3B 		ldr	r3, [r7, #2860]
 1207 0b98 DB00     		lsls	r3, r3, #3
 1208 0b9a 1343     		orrs	r3, r3, r2
 1209 0b9c C7F85C34 		str	r3, [r7, #1116]
 1210 0ba0 D7F82C3B 		ldr	r3, [r7, #2860]
 1211 0ba4 5A0F     		lsrs	r2, r3, #29
 1212 0ba6 D7F8283B 		ldr	r3, [r7, #2856]
 1213 0baa DB00     		lsls	r3, r3, #3
 1214 0bac 1343     		orrs	r3, r3, r2
 1215 0bae C7F85834 		str	r3, [r7, #1112]
 1216 0bb2 07F58B63 		add	r3, r7, #1112
 1217 0bb6 D3E90023 		ldrd	r2, [r3]
 1218 0bba 07F52A61 		add	r1, r7, #2720
 1219 0bbe C1E90023 		strd	r2, [r1]
 167:fips202.c     ****             Ame ^= De;
 1220              		.loc 1 167 17 discriminator 3
 1221 0bc2 07F6F823 		addw	r3, r7, #2808
 1222 0bc6 D3E90001 		ldrd	r0, [r3]
 1223 0bca 07F52863 		add	r3, r7, #2688
 1224 0bce D3E90023 		ldrd	r2, [r3]
 1225 0bd2 80EA020C 		eor	ip, r0, r2
 1226 0bd6 C7F850C4 		str	ip, [r7, #1104]
 1227 0bda 4B40     		eors	r3, r3, r1
 1228 0bdc C7F85434 		str	r3, [r7, #1108]
 1229 0be0 07F58A63 		add	r3, r7, #1104
 1230 0be4 D3E90023 		ldrd	r2, [r3]
 1231 0be8 07F6F821 		addw	r1, r7, #2808
 1232 0bec C1E90023 		strd	r2, [r1]
 168:fips202.c     ****             BCo = ROL(Ame, 45);
 1233              		.loc 1 168 17 discriminator 3
 1234 0bf0 D7F8FC3A 		ldr	r3, [r7, #2812]
 1235 0bf4 5A03     		lsls	r2, r3, #13
 1236 0bf6 01E0     		b	.L12
 1237              	.L13:
 1238              		.align	2
 1239              	.L11:
 1240 0bf8 00000000 		.word	KeccakF_RoundConstants
 1241              	.L12:
 1242 0bfc D7F8F83A 		ldr	r3, [r7, #2808]
 1243 0c00 DB0C     		lsrs	r3, r3, #19
 1244 0c02 1343     		orrs	r3, r3, r2
 1245 0c04 C7F84834 		str	r3, [r7, #1096]
 1246 0c08 D7F8F83A 		ldr	r3, [r7, #2808]
 1247 0c0c 5A03     		lsls	r2, r3, #13
 1248 0c0e D7F8FC3A 		ldr	r3, [r7, #2812]
 1249 0c12 DB0C     		lsrs	r3, r3, #19
 1250 0c14 1343     		orrs	r3, r3, r2
 1251 0c16 C7F84C34 		str	r3, [r7, #1100]
 1252 0c1a 07F58963 		add	r3, r7, #1096
 1253 0c1e D3E90023 		ldrd	r2, [r3]
 1254 0c22 07F69821 		addw	r1, r7, #2712
 1255 0c26 C1E90023 		strd	r2, [r1]
 169:fips202.c     ****             Asi ^= Di;
 1256              		.loc 1 169 17 discriminator 3
 1257 0c2a 07F6C823 		addw	r3, r7, #2760
 1258 0c2e D3E90001 		ldrd	r0, [r3]
 1259 0c32 07F67823 		addw	r3, r7, #2680
 1260 0c36 D3E90023 		ldrd	r2, [r3]
 1261 0c3a 80EA020C 		eor	ip, r0, r2
 1262 0c3e C7F840C4 		str	ip, [r7, #1088]
 1263 0c42 4B40     		eors	r3, r3, r1
 1264 0c44 C7F84434 		str	r3, [r7, #1092]
 1265 0c48 07F58863 		add	r3, r7, #1088
 1266 0c4c D3E90023 		ldrd	r2, [r3]
 1267 0c50 07F6C821 		addw	r1, r7, #2760
 1268 0c54 C1E90023 		strd	r2, [r1]
 170:fips202.c     ****             BCu = ROL(Asi, 61);
 1269              		.loc 1 170 17 discriminator 3
 1270 0c58 D7F8CC3A 		ldr	r3, [r7, #2764]
 1271 0c5c 5A07     		lsls	r2, r3, #29
 1272 0c5e D7F8C83A 		ldr	r3, [r7, #2760]
 1273 0c62 DB08     		lsrs	r3, r3, #3
 1274 0c64 1343     		orrs	r3, r3, r2
 1275 0c66 C7F83834 		str	r3, [r7, #1080]
 1276 0c6a D7F8C83A 		ldr	r3, [r7, #2760]
 1277 0c6e 5A07     		lsls	r2, r3, #29
 1278 0c70 D7F8CC3A 		ldr	r3, [r7, #2764]
 1279 0c74 DB08     		lsrs	r3, r3, #3
 1280 0c76 1343     		orrs	r3, r3, r2
 1281 0c78 C7F83C34 		str	r3, [r7, #1084]
 1282 0c7c 07F58763 		add	r3, r7, #1080
 1283 0c80 D3E90023 		ldrd	r2, [r3]
 1284 0c84 07F52961 		add	r1, r7, #2704
 1285 0c88 C1E90023 		strd	r2, [r1]
 171:fips202.c     ****             Ega =   BCa ^((~BCe)&  BCi );
 1286              		.loc 1 171 28 discriminator 3
 1287 0c8c 07F6A823 		addw	r3, r7, #2728
 1288 0c90 D3E90023 		ldrd	r2, [r3]
 1289 0c94 D143     		mvns	r1, r2
 1290 0c96 C7F8A018 		str	r1, [r7, #2208]
 1291 0c9a DB43     		mvns	r3, r3
 1292 0c9c C7F8A438 		str	r3, [r7, #2212]
 1293              		.loc 1 171 33 discriminator 3
 1294 0ca0 07F52A63 		add	r3, r7, #2720
 1295 0ca4 D3E90023 		ldrd	r2, [r3]
 1296 0ca8 07F50A61 		add	r1, r7, #2208
 1297 0cac D1E90001 		ldrd	r0, [r1]
 1298 0cb0 8446     		mov	ip, r0
 1299 0cb2 0CEA020C 		and	ip, ip, r2
 1300 0cb6 C7F898C8 		str	ip, [r7, #2200]
 1301 0cba 0B40     		ands	r3, r3, r1
 1302 0cbc C7F89C38 		str	r3, [r7, #2204]
 1303              		.loc 1 171 17 discriminator 3
 1304 0cc0 07F52B63 		add	r3, r7, #2736
 1305 0cc4 D3E90023 		ldrd	r2, [r3]
 1306 0cc8 07F69801 		addw	r1, r7, #2200
 1307 0ccc D1E90001 		ldrd	r0, [r1]
 1308 0cd0 8446     		mov	ip, r0
 1309 0cd2 82EA0C0C 		eor	ip, r2, ip
 1310 0cd6 C7F830C4 		str	ip, [r7, #1072]
 1311 0cda 4B40     		eors	r3, r3, r1
 1312 0cdc C7F83434 		str	r3, [r7, #1076]
 1313 0ce0 07F58663 		add	r3, r7, #1072
 1314 0ce4 D3E90023 		ldrd	r2, [r3]
 1315 0ce8 07F63821 		addw	r1, r7, #2616
 1316 0cec C1E90023 		strd	r2, [r1]
 172:fips202.c     ****             Ege =   BCe ^((~BCi)&  BCo );
 1317              		.loc 1 172 28 discriminator 3
 1318 0cf0 07F52A63 		add	r3, r7, #2720
 1319 0cf4 D3E90023 		ldrd	r2, [r3]
 1320 0cf8 D143     		mvns	r1, r2
 1321 0cfa C7F89018 		str	r1, [r7, #2192]
 1322 0cfe DB43     		mvns	r3, r3
 1323 0d00 C7F89438 		str	r3, [r7, #2196]
 1324              		.loc 1 172 33 discriminator 3
 1325 0d04 07F69823 		addw	r3, r7, #2712
 1326 0d08 D3E90023 		ldrd	r2, [r3]
 1327 0d0c 07F50961 		add	r1, r7, #2192
 1328 0d10 D1E90001 		ldrd	r0, [r1]
 1329 0d14 8446     		mov	ip, r0
 1330 0d16 0CEA020C 		and	ip, ip, r2
 1331 0d1a C7F888C8 		str	ip, [r7, #2184]
 1332 0d1e 0B40     		ands	r3, r3, r1
 1333 0d20 C7F88C38 		str	r3, [r7, #2188]
 1334              		.loc 1 172 17 discriminator 3
 1335 0d24 07F6A823 		addw	r3, r7, #2728
 1336 0d28 D3E90023 		ldrd	r2, [r3]
 1337 0d2c 07F68801 		addw	r1, r7, #2184
 1338 0d30 D1E90001 		ldrd	r0, [r1]
 1339 0d34 8446     		mov	ip, r0
 1340 0d36 82EA0C0C 		eor	ip, r2, ip
 1341 0d3a C7F828C4 		str	ip, [r7, #1064]
 1342 0d3e 4B40     		eors	r3, r3, r1
 1343 0d40 C7F82C34 		str	r3, [r7, #1068]
 1344 0d44 07F58563 		add	r3, r7, #1064
 1345 0d48 D3E90023 		ldrd	r2, [r3]
 1346 0d4c 07F52361 		add	r1, r7, #2608
 1347 0d50 C1E90023 		strd	r2, [r1]
 173:fips202.c     ****             Egi =   BCi ^((~BCo)&  BCu );
 1348              		.loc 1 173 28 discriminator 3
 1349 0d54 07F69823 		addw	r3, r7, #2712
 1350 0d58 D3E90023 		ldrd	r2, [r3]
 1351 0d5c D143     		mvns	r1, r2
 1352 0d5e C7F88018 		str	r1, [r7, #2176]
 1353 0d62 DB43     		mvns	r3, r3
 1354 0d64 C7F88438 		str	r3, [r7, #2180]
 1355              		.loc 1 173 33 discriminator 3
 1356 0d68 07F52963 		add	r3, r7, #2704
 1357 0d6c D3E90023 		ldrd	r2, [r3]
 1358 0d70 07F50861 		add	r1, r7, #2176
 1359 0d74 D1E90001 		ldrd	r0, [r1]
 1360 0d78 8446     		mov	ip, r0
 1361 0d7a 0CEA020C 		and	ip, ip, r2
 1362 0d7e C7F878C8 		str	ip, [r7, #2168]
 1363 0d82 0B40     		ands	r3, r3, r1
 1364 0d84 C7F87C38 		str	r3, [r7, #2172]
 1365              		.loc 1 173 17 discriminator 3
 1366 0d88 07F52A63 		add	r3, r7, #2720
 1367 0d8c D3E90023 		ldrd	r2, [r3]
 1368 0d90 07F67801 		addw	r1, r7, #2168
 1369 0d94 D1E90001 		ldrd	r0, [r1]
 1370 0d98 8446     		mov	ip, r0
 1371 0d9a 82EA0C0C 		eor	ip, r2, ip
 1372 0d9e C7F820C4 		str	ip, [r7, #1056]
 1373 0da2 4B40     		eors	r3, r3, r1
 1374 0da4 C7F82434 		str	r3, [r7, #1060]
 1375 0da8 07F58463 		add	r3, r7, #1056
 1376 0dac D3E90023 		ldrd	r2, [r3]
 1377 0db0 07F62821 		addw	r1, r7, #2600
 1378 0db4 C1E90023 		strd	r2, [r1]
 174:fips202.c     ****             Ego =   BCo ^((~BCu)&  BCa );
 1379              		.loc 1 174 28 discriminator 3
 1380 0db8 07F52963 		add	r3, r7, #2704
 1381 0dbc D3E90023 		ldrd	r2, [r3]
 1382 0dc0 D143     		mvns	r1, r2
 1383 0dc2 C7F87018 		str	r1, [r7, #2160]
 1384 0dc6 DB43     		mvns	r3, r3
 1385 0dc8 C7F87438 		str	r3, [r7, #2164]
 1386              		.loc 1 174 33 discriminator 3
 1387 0dcc 07F52B63 		add	r3, r7, #2736
 1388 0dd0 D3E90023 		ldrd	r2, [r3]
 1389 0dd4 07F50761 		add	r1, r7, #2160
 1390 0dd8 D1E90001 		ldrd	r0, [r1]
 1391 0ddc 8446     		mov	ip, r0
 1392 0dde 0CEA020C 		and	ip, ip, r2
 1393 0de2 C7F868C8 		str	ip, [r7, #2152]
 1394 0de6 0B40     		ands	r3, r3, r1
 1395 0de8 C7F86C38 		str	r3, [r7, #2156]
 1396              		.loc 1 174 17 discriminator 3
 1397 0dec 07F69823 		addw	r3, r7, #2712
 1398 0df0 D3E90023 		ldrd	r2, [r3]
 1399 0df4 07F66801 		addw	r1, r7, #2152
 1400 0df8 D1E90001 		ldrd	r0, [r1]
 1401 0dfc 8446     		mov	ip, r0
 1402 0dfe 82EA0C0C 		eor	ip, r2, ip
 1403 0e02 C7F818C4 		str	ip, [r7, #1048]
 1404 0e06 4B40     		eors	r3, r3, r1
 1405 0e08 C7F81C34 		str	r3, [r7, #1052]
 1406 0e0c 07F58363 		add	r3, r7, #1048
 1407 0e10 D3E90023 		ldrd	r2, [r3]
 1408 0e14 07F52261 		add	r1, r7, #2592
 1409 0e18 C1E90023 		strd	r2, [r1]
 175:fips202.c     ****             Egu =   BCu ^((~BCa)&  BCe );
 1410              		.loc 1 175 28 discriminator 3
 1411 0e1c 07F52B63 		add	r3, r7, #2736
 1412 0e20 D3E90023 		ldrd	r2, [r3]
 1413 0e24 D143     		mvns	r1, r2
 1414 0e26 C7F86018 		str	r1, [r7, #2144]
 1415 0e2a DB43     		mvns	r3, r3
 1416 0e2c C7F86438 		str	r3, [r7, #2148]
 1417              		.loc 1 175 33 discriminator 3
 1418 0e30 07F6A823 		addw	r3, r7, #2728
 1419 0e34 D3E90023 		ldrd	r2, [r3]
 1420 0e38 07F50661 		add	r1, r7, #2144
 1421 0e3c D1E90001 		ldrd	r0, [r1]
 1422 0e40 8446     		mov	ip, r0
 1423 0e42 0CEA020C 		and	ip, ip, r2
 1424 0e46 C7F858C8 		str	ip, [r7, #2136]
 1425 0e4a 0B40     		ands	r3, r3, r1
 1426 0e4c C7F85C38 		str	r3, [r7, #2140]
 1427              		.loc 1 175 17 discriminator 3
 1428 0e50 07F52963 		add	r3, r7, #2704
 1429 0e54 D3E90023 		ldrd	r2, [r3]
 1430 0e58 07F65801 		addw	r1, r7, #2136
 1431 0e5c D1E90001 		ldrd	r0, [r1]
 1432 0e60 8446     		mov	ip, r0
 1433 0e62 82EA0C0C 		eor	ip, r2, ip
 1434 0e66 C7F810C4 		str	ip, [r7, #1040]
 1435 0e6a 4B40     		eors	r3, r3, r1
 1436 0e6c C7F81434 		str	r3, [r7, #1044]
 1437 0e70 07F58263 		add	r3, r7, #1040
 1438 0e74 D3E90023 		ldrd	r2, [r3]
 1439 0e78 07F61821 		addw	r1, r7, #2584
 1440 0e7c C1E90023 		strd	r2, [r1]
 176:fips202.c     **** 
 177:fips202.c     ****             Abe ^= De;
 1441              		.loc 1 177 17 discriminator 3
 1442 0e80 07F53763 		add	r3, r7, #2928
 1443 0e84 D3E90001 		ldrd	r0, [r3]
 1444 0e88 07F52863 		add	r3, r7, #2688
 1445 0e8c D3E90023 		ldrd	r2, [r3]
 1446 0e90 80EA020C 		eor	ip, r0, r2
 1447 0e94 C7F808C4 		str	ip, [r7, #1032]
 1448 0e98 4B40     		eors	r3, r3, r1
 1449 0e9a C7F80C34 		str	r3, [r7, #1036]
 1450 0e9e 07F58163 		add	r3, r7, #1032
 1451 0ea2 D3E90023 		ldrd	r2, [r3]
 1452 0ea6 07F53761 		add	r1, r7, #2928
 1453 0eaa C1E90023 		strd	r2, [r1]
 178:fips202.c     ****             BCa = ROL(Abe,  1);
 1454              		.loc 1 178 17 discriminator 3
 1455 0eae D7F8703B 		ldr	r3, [r7, #2928]
 1456 0eb2 DA0F     		lsrs	r2, r3, #31
 1457 0eb4 D7F8743B 		ldr	r3, [r7, #2932]
 1458 0eb8 5B00     		lsls	r3, r3, #1
 1459 0eba 1343     		orrs	r3, r3, r2
 1460 0ebc C7F80434 		str	r3, [r7, #1028]
 1461 0ec0 D7F8743B 		ldr	r3, [r7, #2932]
 1462 0ec4 DA0F     		lsrs	r2, r3, #31
 1463 0ec6 D7F8703B 		ldr	r3, [r7, #2928]
 1464 0eca 5B00     		lsls	r3, r3, #1
 1465 0ecc 1343     		orrs	r3, r3, r2
 1466 0ece C7F80034 		str	r3, [r7, #1024]
 1467 0ed2 07F58063 		add	r3, r7, #1024
 1468 0ed6 D3E90023 		ldrd	r2, [r3]
 1469 0eda 07F52B61 		add	r1, r7, #2736
 1470 0ede C1E90023 		strd	r2, [r1]
 179:fips202.c     ****             Agi ^= Di;
 1471              		.loc 1 179 17 discriminator 3
 1472 0ee2 07F53463 		add	r3, r7, #2880
 1473 0ee6 D3E90001 		ldrd	r0, [r3]
 1474 0eea 07F67823 		addw	r3, r7, #2680
 1475 0eee D3E90023 		ldrd	r2, [r3]
 1476 0ef2 80EA020C 		eor	ip, r0, r2
 1477 0ef6 C7F8F8C3 		str	ip, [r7, #1016]
 1478 0efa 4B40     		eors	r3, r3, r1
 1479 0efc C7F8FC33 		str	r3, [r7, #1020]
 1480 0f00 D7E9FE23 		ldrd	r2, [r7, #1016]
 1481 0f04 07F53461 		add	r1, r7, #2880
 1482 0f08 C1E90023 		strd	r2, [r1]
 180:fips202.c     ****             BCe = ROL(Agi,  6);
 1483              		.loc 1 180 17 discriminator 3
 1484 0f0c D7F8403B 		ldr	r3, [r7, #2880]
 1485 0f10 9A0E     		lsrs	r2, r3, #26
 1486 0f12 D7F8443B 		ldr	r3, [r7, #2884]
 1487 0f16 9B01     		lsls	r3, r3, #6
 1488 0f18 1343     		orrs	r3, r3, r2
 1489 0f1a C7F8F433 		str	r3, [r7, #1012]
 1490 0f1e D7F8443B 		ldr	r3, [r7, #2884]
 1491 0f22 9A0E     		lsrs	r2, r3, #26
 1492 0f24 D7F8403B 		ldr	r3, [r7, #2880]
 1493 0f28 9B01     		lsls	r3, r3, #6
 1494 0f2a 1343     		orrs	r3, r3, r2
 1495 0f2c C7F8F033 		str	r3, [r7, #1008]
 1496 0f30 D7E9FC23 		ldrd	r2, [r7, #1008]
 1497 0f34 07F6A821 		addw	r1, r7, #2728
 1498 0f38 C1E90023 		strd	r2, [r1]
 181:fips202.c     ****             Ako ^= Do;
 1499              		.loc 1 181 17 discriminator 3
 1500 0f3c 07F53163 		add	r3, r7, #2832
 1501 0f40 D3E90001 		ldrd	r0, [r3]
 1502 0f44 07F52763 		add	r3, r7, #2672
 1503 0f48 D3E90023 		ldrd	r2, [r3]
 1504 0f4c 80EA020C 		eor	ip, r0, r2
 1505 0f50 C7F8E8C3 		str	ip, [r7, #1000]
 1506 0f54 4B40     		eors	r3, r3, r1
 1507 0f56 C7F8EC33 		str	r3, [r7, #1004]
 1508 0f5a D7E9FA23 		ldrd	r2, [r7, #1000]
 1509 0f5e 07F53161 		add	r1, r7, #2832
 1510 0f62 C1E90023 		strd	r2, [r1]
 182:fips202.c     ****             BCi = ROL(Ako, 25);
 1511              		.loc 1 182 17 discriminator 3
 1512 0f66 D7F8103B 		ldr	r3, [r7, #2832]
 1513 0f6a DA09     		lsrs	r2, r3, #7
 1514 0f6c D7F8143B 		ldr	r3, [r7, #2836]
 1515 0f70 5B06     		lsls	r3, r3, #25
 1516 0f72 1343     		orrs	r3, r3, r2
 1517 0f74 C7F8E433 		str	r3, [r7, #996]
 1518 0f78 D7F8143B 		ldr	r3, [r7, #2836]
 1519 0f7c DA09     		lsrs	r2, r3, #7
 1520 0f7e D7F8103B 		ldr	r3, [r7, #2832]
 1521 0f82 5B06     		lsls	r3, r3, #25
 1522 0f84 1343     		orrs	r3, r3, r2
 1523 0f86 C7F8E033 		str	r3, [r7, #992]
 1524 0f8a D7E9F823 		ldrd	r2, [r7, #992]
 1525 0f8e 07F52A61 		add	r1, r7, #2720
 1526 0f92 C1E90023 		strd	r2, [r1]
 183:fips202.c     ****             Amu ^= Du;
 1527              		.loc 1 183 17 discriminator 3
 1528 0f96 07F52E63 		add	r3, r7, #2784
 1529 0f9a D3E90001 		ldrd	r0, [r3]
 1530 0f9e 07F66823 		addw	r3, r7, #2664
 1531 0fa2 D3E90023 		ldrd	r2, [r3]
 1532 0fa6 80EA020C 		eor	ip, r0, r2
 1533 0faa C7F8D8C3 		str	ip, [r7, #984]
 1534 0fae 4B40     		eors	r3, r3, r1
 1535 0fb0 C7F8DC33 		str	r3, [r7, #988]
 1536 0fb4 D7E9F623 		ldrd	r2, [r7, #984]
 1537 0fb8 07F52E61 		add	r1, r7, #2784
 1538 0fbc C1E90023 		strd	r2, [r1]
 184:fips202.c     ****             BCo = ROL(Amu,  8);
 1539              		.loc 1 184 17 discriminator 3
 1540 0fc0 D7F8E03A 		ldr	r3, [r7, #2784]
 1541 0fc4 1A0E     		lsrs	r2, r3, #24
 1542 0fc6 D7F8E43A 		ldr	r3, [r7, #2788]
 1543 0fca 1B02     		lsls	r3, r3, #8
 1544 0fcc 1343     		orrs	r3, r3, r2
 1545 0fce C7F8D433 		str	r3, [r7, #980]
 1546 0fd2 D7F8E43A 		ldr	r3, [r7, #2788]
 1547 0fd6 1A0E     		lsrs	r2, r3, #24
 1548 0fd8 D7F8E03A 		ldr	r3, [r7, #2784]
 1549 0fdc 1B02     		lsls	r3, r3, #8
 1550 0fde 1343     		orrs	r3, r3, r2
 1551 0fe0 C7F8D033 		str	r3, [r7, #976]
 1552 0fe4 D7E9F423 		ldrd	r2, [r7, #976]
 1553 0fe8 07F69821 		addw	r1, r7, #2712
 1554 0fec C1E90023 		strd	r2, [r1]
 185:fips202.c     ****             Asa ^= Da;
 1555              		.loc 1 185 17 discriminator 3
 1556 0ff0 07F6D823 		addw	r3, r7, #2776
 1557 0ff4 D3E90001 		ldrd	r0, [r3]
 1558 0ff8 07F68823 		addw	r3, r7, #2696
 1559 0ffc D3E90023 		ldrd	r2, [r3]
 1560 1000 80EA020C 		eor	ip, r0, r2
 1561 1004 C7F8C8C3 		str	ip, [r7, #968]
 1562 1008 4B40     		eors	r3, r3, r1
 1563 100a C7F8CC33 		str	r3, [r7, #972]
 1564 100e D7E9F223 		ldrd	r2, [r7, #968]
 1565 1012 07F6D821 		addw	r1, r7, #2776
 1566 1016 C1E90023 		strd	r2, [r1]
 186:fips202.c     ****             BCu = ROL(Asa, 18);
 1567              		.loc 1 186 17 discriminator 3
 1568 101a D7F8D83A 		ldr	r3, [r7, #2776]
 1569 101e 9A0B     		lsrs	r2, r3, #14
 1570 1020 D7F8DC3A 		ldr	r3, [r7, #2780]
 1571 1024 9B04     		lsls	r3, r3, #18
 1572 1026 1343     		orrs	r3, r3, r2
 1573 1028 C7F8C433 		str	r3, [r7, #964]
 1574 102c D7F8DC3A 		ldr	r3, [r7, #2780]
 1575 1030 9A0B     		lsrs	r2, r3, #14
 1576 1032 D7F8D83A 		ldr	r3, [r7, #2776]
 1577 1036 9B04     		lsls	r3, r3, #18
 1578 1038 1343     		orrs	r3, r3, r2
 1579 103a C7F8C033 		str	r3, [r7, #960]
 1580 103e D7E9F023 		ldrd	r2, [r7, #960]
 1581 1042 07F52961 		add	r1, r7, #2704
 1582 1046 C1E90023 		strd	r2, [r1]
 187:fips202.c     ****             Eka =   BCa ^((~BCe)&  BCi );
 1583              		.loc 1 187 28 discriminator 3
 1584 104a 07F6A823 		addw	r3, r7, #2728
 1585 104e D3E90023 		ldrd	r2, [r3]
 1586 1052 D143     		mvns	r1, r2
 1587 1054 C7F85018 		str	r1, [r7, #2128]
 1588 1058 DB43     		mvns	r3, r3
 1589 105a C7F85438 		str	r3, [r7, #2132]
 1590              		.loc 1 187 33 discriminator 3
 1591 105e 07F52A63 		add	r3, r7, #2720
 1592 1062 D3E90023 		ldrd	r2, [r3]
 1593 1066 07F50561 		add	r1, r7, #2128
 1594 106a D1E90001 		ldrd	r0, [r1]
 1595 106e 8446     		mov	ip, r0
 1596 1070 0CEA020C 		and	ip, ip, r2
 1597 1074 C7F848C8 		str	ip, [r7, #2120]
 1598 1078 0B40     		ands	r3, r3, r1
 1599 107a C7F84C38 		str	r3, [r7, #2124]
 1600              		.loc 1 187 17 discriminator 3
 1601 107e 07F52B63 		add	r3, r7, #2736
 1602 1082 D3E90023 		ldrd	r2, [r3]
 1603 1086 07F64801 		addw	r1, r7, #2120
 1604 108a D1E90001 		ldrd	r0, [r1]
 1605 108e 8446     		mov	ip, r0
 1606 1090 82EA0C0C 		eor	ip, r2, ip
 1607 1094 C7F8B8C3 		str	ip, [r7, #952]
 1608 1098 4B40     		eors	r3, r3, r1
 1609 109a C7F8BC33 		str	r3, [r7, #956]
 1610 109e D7E9EE23 		ldrd	r2, [r7, #952]
 1611 10a2 07F52161 		add	r1, r7, #2576
 1612 10a6 C1E90023 		strd	r2, [r1]
 188:fips202.c     ****             Eke =   BCe ^((~BCi)&  BCo );
 1613              		.loc 1 188 28 discriminator 3
 1614 10aa 07F52A63 		add	r3, r7, #2720
 1615 10ae D3E90023 		ldrd	r2, [r3]
 1616 10b2 D143     		mvns	r1, r2
 1617 10b4 C7F84018 		str	r1, [r7, #2112]
 1618 10b8 DB43     		mvns	r3, r3
 1619 10ba C7F84438 		str	r3, [r7, #2116]
 1620              		.loc 1 188 33 discriminator 3
 1621 10be 07F69823 		addw	r3, r7, #2712
 1622 10c2 D3E90023 		ldrd	r2, [r3]
 1623 10c6 07F50461 		add	r1, r7, #2112
 1624 10ca D1E90001 		ldrd	r0, [r1]
 1625 10ce 8446     		mov	ip, r0
 1626 10d0 0CEA020C 		and	ip, ip, r2
 1627 10d4 C7F838C8 		str	ip, [r7, #2104]
 1628 10d8 0B40     		ands	r3, r3, r1
 1629 10da C7F83C38 		str	r3, [r7, #2108]
 1630              		.loc 1 188 17 discriminator 3
 1631 10de 07F6A823 		addw	r3, r7, #2728
 1632 10e2 D3E90023 		ldrd	r2, [r3]
 1633 10e6 07F63801 		addw	r1, r7, #2104
 1634 10ea D1E90001 		ldrd	r0, [r1]
 1635 10ee 8446     		mov	ip, r0
 1636 10f0 82EA0C0C 		eor	ip, r2, ip
 1637 10f4 C7F8B0C3 		str	ip, [r7, #944]
 1638 10f8 4B40     		eors	r3, r3, r1
 1639 10fa C7F8B433 		str	r3, [r7, #948]
 1640 10fe D7E9EC23 		ldrd	r2, [r7, #944]
 1641 1102 07F60821 		addw	r1, r7, #2568
 1642 1106 C1E90023 		strd	r2, [r1]
 189:fips202.c     ****             Eki =   BCi ^((~BCo)&  BCu );
 1643              		.loc 1 189 28 discriminator 3
 1644 110a 07F69823 		addw	r3, r7, #2712
 1645 110e D3E90023 		ldrd	r2, [r3]
 1646 1112 D143     		mvns	r1, r2
 1647 1114 C7F83018 		str	r1, [r7, #2096]
 1648 1118 DB43     		mvns	r3, r3
 1649 111a C7F83438 		str	r3, [r7, #2100]
 1650              		.loc 1 189 33 discriminator 3
 1651 111e 07F52963 		add	r3, r7, #2704
 1652 1122 D3E90023 		ldrd	r2, [r3]
 1653 1126 07F50361 		add	r1, r7, #2096
 1654 112a D1E90001 		ldrd	r0, [r1]
 1655 112e 8446     		mov	ip, r0
 1656 1130 0CEA020C 		and	ip, ip, r2
 1657 1134 C7F828C8 		str	ip, [r7, #2088]
 1658 1138 0B40     		ands	r3, r3, r1
 1659 113a C7F82C38 		str	r3, [r7, #2092]
 1660              		.loc 1 189 17 discriminator 3
 1661 113e 07F52A63 		add	r3, r7, #2720
 1662 1142 D3E90023 		ldrd	r2, [r3]
 1663 1146 07F62801 		addw	r1, r7, #2088
 1664 114a D1E90001 		ldrd	r0, [r1]
 1665 114e 8446     		mov	ip, r0
 1666 1150 82EA0C0C 		eor	ip, r2, ip
 1667 1154 C7F8A8C3 		str	ip, [r7, #936]
 1668 1158 4B40     		eors	r3, r3, r1
 1669 115a C7F8AC33 		str	r3, [r7, #940]
 1670 115e D7E9EA23 		ldrd	r2, [r7, #936]
 1671 1162 07F52061 		add	r1, r7, #2560
 1672 1166 C1E90023 		strd	r2, [r1]
 190:fips202.c     ****             Eko =   BCo ^((~BCu)&  BCa );
 1673              		.loc 1 190 28 discriminator 3
 1674 116a 07F52963 		add	r3, r7, #2704
 1675 116e D3E90023 		ldrd	r2, [r3]
 1676 1172 D143     		mvns	r1, r2
 1677 1174 C7F82018 		str	r1, [r7, #2080]
 1678 1178 DB43     		mvns	r3, r3
 1679 117a C7F82438 		str	r3, [r7, #2084]
 1680              		.loc 1 190 33 discriminator 3
 1681 117e 07F52B63 		add	r3, r7, #2736
 1682 1182 D3E90023 		ldrd	r2, [r3]
 1683 1186 07F50261 		add	r1, r7, #2080
 1684 118a D1E90001 		ldrd	r0, [r1]
 1685 118e 8446     		mov	ip, r0
 1686 1190 0CEA020C 		and	ip, ip, r2
 1687 1194 C7F818C8 		str	ip, [r7, #2072]
 1688 1198 0B40     		ands	r3, r3, r1
 1689 119a C7F81C38 		str	r3, [r7, #2076]
 1690              		.loc 1 190 17 discriminator 3
 1691 119e 07F69823 		addw	r3, r7, #2712
 1692 11a2 D3E90023 		ldrd	r2, [r3]
 1693 11a6 07F61801 		addw	r1, r7, #2072
 1694 11aa D1E90001 		ldrd	r0, [r1]
 1695 11ae 8446     		mov	ip, r0
 1696 11b0 82EA0C0C 		eor	ip, r2, ip
 1697 11b4 C7F8A0C3 		str	ip, [r7, #928]
 1698 11b8 4B40     		eors	r3, r3, r1
 1699 11ba C7F8A433 		str	r3, [r7, #932]
 1700 11be D7E9E823 		ldrd	r2, [r7, #928]
 1701 11c2 07F6F811 		addw	r1, r7, #2552
 1702 11c6 C1E90023 		strd	r2, [r1]
 191:fips202.c     ****             Eku =   BCu ^((~BCa)&  BCe );
 1703              		.loc 1 191 28 discriminator 3
 1704 11ca 07F52B63 		add	r3, r7, #2736
 1705 11ce D3E90023 		ldrd	r2, [r3]
 1706 11d2 D143     		mvns	r1, r2
 1707 11d4 C7F81018 		str	r1, [r7, #2064]
 1708 11d8 DB43     		mvns	r3, r3
 1709 11da C7F81438 		str	r3, [r7, #2068]
 1710              		.loc 1 191 33 discriminator 3
 1711 11de 07F6A823 		addw	r3, r7, #2728
 1712 11e2 D3E90023 		ldrd	r2, [r3]
 1713 11e6 07F50161 		add	r1, r7, #2064
 1714 11ea D1E90001 		ldrd	r0, [r1]
 1715 11ee 8446     		mov	ip, r0
 1716 11f0 0CEA020C 		and	ip, ip, r2
 1717 11f4 C7F808C8 		str	ip, [r7, #2056]
 1718 11f8 0B40     		ands	r3, r3, r1
 1719 11fa C7F80C38 		str	r3, [r7, #2060]
 1720              		.loc 1 191 17 discriminator 3
 1721 11fe 07F52963 		add	r3, r7, #2704
 1722 1202 D3E90023 		ldrd	r2, [r3]
 1723 1206 07F60801 		addw	r1, r7, #2056
 1724 120a D1E90001 		ldrd	r0, [r1]
 1725 120e 8446     		mov	ip, r0
 1726 1210 82EA0C0C 		eor	ip, r2, ip
 1727 1214 C7F898C3 		str	ip, [r7, #920]
 1728 1218 4B40     		eors	r3, r3, r1
 1729 121a C7F89C33 		str	r3, [r7, #924]
 1730 121e D7E9E623 		ldrd	r2, [r7, #920]
 1731 1222 07F51F61 		add	r1, r7, #2544
 1732 1226 C1E90023 		strd	r2, [r1]
 192:fips202.c     **** 
 193:fips202.c     ****             Abu ^= Du;
 1733              		.loc 1 193 17 discriminator 3
 1734 122a 07F65833 		addw	r3, r7, #2904
 1735 122e D3E90001 		ldrd	r0, [r3]
 1736 1232 07F66823 		addw	r3, r7, #2664
 1737 1236 D3E90023 		ldrd	r2, [r3]
 1738 123a 80EA020C 		eor	ip, r0, r2
 1739 123e C7F890C3 		str	ip, [r7, #912]
 1740 1242 4B40     		eors	r3, r3, r1
 1741 1244 C7F89433 		str	r3, [r7, #916]
 1742 1248 D7E9E423 		ldrd	r2, [r7, #912]
 1743 124c 07F65831 		addw	r1, r7, #2904
 1744 1250 C1E90023 		strd	r2, [r1]
 194:fips202.c     ****             BCa = ROL(Abu, 27);
 1745              		.loc 1 194 17 discriminator 3
 1746 1254 D7F8583B 		ldr	r3, [r7, #2904]
 1747 1258 5A09     		lsrs	r2, r3, #5
 1748 125a D7F85C3B 		ldr	r3, [r7, #2908]
 1749 125e DB06     		lsls	r3, r3, #27
 1750 1260 1343     		orrs	r3, r3, r2
 1751 1262 C7F88C33 		str	r3, [r7, #908]
 1752 1266 D7F85C3B 		ldr	r3, [r7, #2908]
 1753 126a 5A09     		lsrs	r2, r3, #5
 1754 126c D7F8583B 		ldr	r3, [r7, #2904]
 1755 1270 DB06     		lsls	r3, r3, #27
 1756 1272 1343     		orrs	r3, r3, r2
 1757 1274 C7F88833 		str	r3, [r7, #904]
 1758 1278 D7E9E223 		ldrd	r2, [r7, #904]
 1759 127c 07F52B61 		add	r1, r7, #2736
 1760 1280 C1E90023 		strd	r2, [r1]
 195:fips202.c     ****             Aga ^= Da;
 1761              		.loc 1 195 17 discriminator 3
 1762 1284 07F53563 		add	r3, r7, #2896
 1763 1288 D3E90001 		ldrd	r0, [r3]
 1764 128c 07F68823 		addw	r3, r7, #2696
 1765 1290 D3E90023 		ldrd	r2, [r3]
 1766 1294 80EA020C 		eor	ip, r0, r2
 1767 1298 C7F880C3 		str	ip, [r7, #896]
 1768 129c 4B40     		eors	r3, r3, r1
 1769 129e C7F88433 		str	r3, [r7, #900]
 1770 12a2 D7E9E023 		ldrd	r2, [r7, #896]
 1771 12a6 07F53561 		add	r1, r7, #2896
 1772 12aa C1E90023 		strd	r2, [r1]
 196:fips202.c     ****             BCe = ROL(Aga, 36);
 1773              		.loc 1 196 17 discriminator 3
 1774 12ae D7F8543B 		ldr	r3, [r7, #2900]
 1775 12b2 1A01     		lsls	r2, r3, #4
 1776 12b4 D7F8503B 		ldr	r3, [r7, #2896]
 1777 12b8 1B0F     		lsrs	r3, r3, #28
 1778 12ba 1343     		orrs	r3, r3, r2
 1779 12bc C7F87833 		str	r3, [r7, #888]
 1780 12c0 D7F8503B 		ldr	r3, [r7, #2896]
 1781 12c4 1A01     		lsls	r2, r3, #4
 1782 12c6 D7F8543B 		ldr	r3, [r7, #2900]
 1783 12ca 1B0F     		lsrs	r3, r3, #28
 1784 12cc 1343     		orrs	r3, r3, r2
 1785 12ce C7F87C33 		str	r3, [r7, #892]
 1786 12d2 D7E9DE23 		ldrd	r2, [r7, #888]
 1787 12d6 07F6A821 		addw	r1, r7, #2728
 1788 12da C1E90023 		strd	r2, [r1]
 197:fips202.c     ****             Ake ^= De;
 1789              		.loc 1 197 17 discriminator 3
 1790 12de 07F53263 		add	r3, r7, #2848
 1791 12e2 D3E90001 		ldrd	r0, [r3]
 1792 12e6 07F52863 		add	r3, r7, #2688
 1793 12ea D3E90023 		ldrd	r2, [r3]
 1794 12ee 80EA020C 		eor	ip, r0, r2
 1795 12f2 C7F870C3 		str	ip, [r7, #880]
 1796 12f6 4B40     		eors	r3, r3, r1
 1797 12f8 C7F87433 		str	r3, [r7, #884]
 1798 12fc D7E9DC23 		ldrd	r2, [r7, #880]
 1799 1300 07F53261 		add	r1, r7, #2848
 1800 1304 C1E90023 		strd	r2, [r1]
 198:fips202.c     ****             BCi = ROL(Ake, 10);
 1801              		.loc 1 198 17 discriminator 3
 1802 1308 D7F8203B 		ldr	r3, [r7, #2848]
 1803 130c 9A0D     		lsrs	r2, r3, #22
 1804 130e D7F8243B 		ldr	r3, [r7, #2852]
 1805 1312 9B02     		lsls	r3, r3, #10
 1806 1314 1343     		orrs	r3, r3, r2
 1807 1316 C7F86C33 		str	r3, [r7, #876]
 1808 131a D7F8243B 		ldr	r3, [r7, #2852]
 1809 131e 9A0D     		lsrs	r2, r3, #22
 1810 1320 D7F8203B 		ldr	r3, [r7, #2848]
 1811 1324 9B02     		lsls	r3, r3, #10
 1812 1326 1343     		orrs	r3, r3, r2
 1813 1328 C7F86833 		str	r3, [r7, #872]
 1814 132c D7E9DA23 		ldrd	r2, [r7, #872]
 1815 1330 07F52A61 		add	r1, r7, #2720
 1816 1334 C1E90023 		strd	r2, [r1]
 199:fips202.c     ****             Ami ^= Di;
 1817              		.loc 1 199 17 discriminator 3
 1818 1338 07F52F63 		add	r3, r7, #2800
 1819 133c D3E90001 		ldrd	r0, [r3]
 1820 1340 07F67823 		addw	r3, r7, #2680
 1821 1344 D3E90023 		ldrd	r2, [r3]
 1822 1348 80EA020C 		eor	ip, r0, r2
 1823 134c C7F860C3 		str	ip, [r7, #864]
 1824 1350 4B40     		eors	r3, r3, r1
 1825 1352 C7F86433 		str	r3, [r7, #868]
 1826 1356 D7E9D823 		ldrd	r2, [r7, #864]
 1827 135a 07F52F61 		add	r1, r7, #2800
 1828 135e C1E90023 		strd	r2, [r1]
 200:fips202.c     ****             BCo = ROL(Ami, 15);
 1829              		.loc 1 200 17 discriminator 3
 1830 1362 D7F8F03A 		ldr	r3, [r7, #2800]
 1831 1366 5A0C     		lsrs	r2, r3, #17
 1832 1368 D7F8F43A 		ldr	r3, [r7, #2804]
 1833 136c DB03     		lsls	r3, r3, #15
 1834 136e 1343     		orrs	r3, r3, r2
 1835 1370 C7F85C33 		str	r3, [r7, #860]
 1836 1374 D7F8F43A 		ldr	r3, [r7, #2804]
 1837 1378 5A0C     		lsrs	r2, r3, #17
 1838 137a D7F8F03A 		ldr	r3, [r7, #2800]
 1839 137e DB03     		lsls	r3, r3, #15
 1840 1380 1343     		orrs	r3, r3, r2
 1841 1382 C7F85833 		str	r3, [r7, #856]
 1842 1386 D7E9D623 		ldrd	r2, [r7, #856]
 1843 138a 07F69821 		addw	r1, r7, #2712
 1844 138e C1E90023 		strd	r2, [r1]
 201:fips202.c     ****             Aso ^= Do;
 1845              		.loc 1 201 17 discriminator 3
 1846 1392 07F52C63 		add	r3, r7, #2752
 1847 1396 D3E90001 		ldrd	r0, [r3]
 1848 139a 07F52763 		add	r3, r7, #2672
 1849 139e D3E90023 		ldrd	r2, [r3]
 1850 13a2 80EA020C 		eor	ip, r0, r2
 1851 13a6 C7F850C3 		str	ip, [r7, #848]
 1852 13aa 4B40     		eors	r3, r3, r1
 1853 13ac C7F85433 		str	r3, [r7, #852]
 1854 13b0 D7E9D423 		ldrd	r2, [r7, #848]
 1855 13b4 07F52C61 		add	r1, r7, #2752
 1856 13b8 C1E90023 		strd	r2, [r1]
 202:fips202.c     ****             BCu = ROL(Aso, 56);
 1857              		.loc 1 202 17 discriminator 3
 1858 13bc D7F8C43A 		ldr	r3, [r7, #2756]
 1859 13c0 1A06     		lsls	r2, r3, #24
 1860 13c2 D7F8C03A 		ldr	r3, [r7, #2752]
 1861 13c6 1B0A     		lsrs	r3, r3, #8
 1862 13c8 1343     		orrs	r3, r3, r2
 1863 13ca C7F84833 		str	r3, [r7, #840]
 1864 13ce D7F8C03A 		ldr	r3, [r7, #2752]
 1865 13d2 1A06     		lsls	r2, r3, #24
 1866 13d4 D7F8C43A 		ldr	r3, [r7, #2756]
 1867 13d8 1B0A     		lsrs	r3, r3, #8
 1868 13da 1343     		orrs	r3, r3, r2
 1869 13dc C7F84C33 		str	r3, [r7, #844]
 1870 13e0 D7E9D223 		ldrd	r2, [r7, #840]
 1871 13e4 07F52961 		add	r1, r7, #2704
 1872 13e8 C1E90023 		strd	r2, [r1]
 203:fips202.c     ****             Ema =   BCa ^((~BCe)&  BCi );
 1873              		.loc 1 203 28 discriminator 3
 1874 13ec 07F6A823 		addw	r3, r7, #2728
 1875 13f0 D3E90023 		ldrd	r2, [r3]
 1876 13f4 D143     		mvns	r1, r2
 1877 13f6 C7F80018 		str	r1, [r7, #2048]
 1878 13fa DB43     		mvns	r3, r3
 1879 13fc C7F80438 		str	r3, [r7, #2052]
 1880              		.loc 1 203 33 discriminator 3
 1881 1400 07F52A63 		add	r3, r7, #2720
 1882 1404 D3E90023 		ldrd	r2, [r3]
 1883 1408 07F50061 		add	r1, r7, #2048
 1884 140c D1E90001 		ldrd	r0, [r1]
 1885 1410 8446     		mov	ip, r0
 1886 1412 0CEA020C 		and	ip, ip, r2
 1887 1416 C7F8F8C7 		str	ip, [r7, #2040]
 1888 141a 0B40     		ands	r3, r3, r1
 1889 141c C7F8FC37 		str	r3, [r7, #2044]
 1890              		.loc 1 203 17 discriminator 3
 1891 1420 07F52B63 		add	r3, r7, #2736
 1892 1424 D3E90023 		ldrd	r2, [r3]
 1893 1428 07F5FF61 		add	r1, r7, #2040
 1894 142c D1E90001 		ldrd	r0, [r1]
 1895 1430 8446     		mov	ip, r0
 1896 1432 82EA0C0C 		eor	ip, r2, ip
 1897 1436 C7F840C3 		str	ip, [r7, #832]
 1898 143a 4B40     		eors	r3, r3, r1
 1899 143c C7F84433 		str	r3, [r7, #836]
 1900 1440 D7E9D023 		ldrd	r2, [r7, #832]
 1901 1444 07F6E811 		addw	r1, r7, #2536
 1902 1448 C1E90023 		strd	r2, [r1]
 204:fips202.c     ****             Eme =   BCe ^((~BCi)&  BCo );
 1903              		.loc 1 204 28 discriminator 3
 1904 144c 07F52A63 		add	r3, r7, #2720
 1905 1450 D3E90023 		ldrd	r2, [r3]
 1906 1454 D143     		mvns	r1, r2
 1907 1456 C7F8F017 		str	r1, [r7, #2032]
 1908 145a DB43     		mvns	r3, r3
 1909 145c C7F8F437 		str	r3, [r7, #2036]
 1910              		.loc 1 204 33 discriminator 3
 1911 1460 07F69823 		addw	r3, r7, #2712
 1912 1464 D3E90023 		ldrd	r2, [r3]
 1913 1468 07F5FE61 		add	r1, r7, #2032
 1914 146c D1E90001 		ldrd	r0, [r1]
 1915 1470 8446     		mov	ip, r0
 1916 1472 0CEA020C 		and	ip, ip, r2
 1917 1476 C7F8E8C7 		str	ip, [r7, #2024]
 1918 147a 0B40     		ands	r3, r3, r1
 1919 147c C7F8EC37 		str	r3, [r7, #2028]
 1920              		.loc 1 204 17 discriminator 3
 1921 1480 07F6A823 		addw	r3, r7, #2728
 1922 1484 D3E90023 		ldrd	r2, [r3]
 1923 1488 07F5FD61 		add	r1, r7, #2024
 1924 148c D1E90001 		ldrd	r0, [r1]
 1925 1490 8446     		mov	ip, r0
 1926 1492 82EA0C0C 		eor	ip, r2, ip
 1927 1496 C7F838C3 		str	ip, [r7, #824]
 1928 149a 4B40     		eors	r3, r3, r1
 1929 149c C7F83C33 		str	r3, [r7, #828]
 1930 14a0 D7E9CE23 		ldrd	r2, [r7, #824]
 1931 14a4 07F51E61 		add	r1, r7, #2528
 1932 14a8 C1E90023 		strd	r2, [r1]
 205:fips202.c     ****             Emi =   BCi ^((~BCo)&  BCu );
 1933              		.loc 1 205 28 discriminator 3
 1934 14ac 07F69823 		addw	r3, r7, #2712
 1935 14b0 D3E90023 		ldrd	r2, [r3]
 1936 14b4 D143     		mvns	r1, r2
 1937 14b6 C7F8E017 		str	r1, [r7, #2016]
 1938 14ba DB43     		mvns	r3, r3
 1939 14bc C7F8E437 		str	r3, [r7, #2020]
 1940              		.loc 1 205 33 discriminator 3
 1941 14c0 07F52963 		add	r3, r7, #2704
 1942 14c4 D3E90023 		ldrd	r2, [r3]
 1943 14c8 07F5FC61 		add	r1, r7, #2016
 1944 14cc D1E90001 		ldrd	r0, [r1]
 1945 14d0 8446     		mov	ip, r0
 1946 14d2 0CEA020C 		and	ip, ip, r2
 1947 14d6 C7F8D8C7 		str	ip, [r7, #2008]
 1948 14da 0B40     		ands	r3, r3, r1
 1949 14dc C7F8DC37 		str	r3, [r7, #2012]
 1950              		.loc 1 205 17 discriminator 3
 1951 14e0 07F52A63 		add	r3, r7, #2720
 1952 14e4 D3E90023 		ldrd	r2, [r3]
 1953 14e8 07F5FB61 		add	r1, r7, #2008
 1954 14ec D1E90001 		ldrd	r0, [r1]
 1955 14f0 8446     		mov	ip, r0
 1956 14f2 82EA0C0C 		eor	ip, r2, ip
 1957 14f6 C7F830C3 		str	ip, [r7, #816]
 1958 14fa 4B40     		eors	r3, r3, r1
 1959 14fc C7F83433 		str	r3, [r7, #820]
 1960 1500 D7E9CC23 		ldrd	r2, [r7, #816]
 1961 1504 07F6D811 		addw	r1, r7, #2520
 1962 1508 C1E90023 		strd	r2, [r1]
 206:fips202.c     ****             Emo =   BCo ^((~BCu)&  BCa );
 1963              		.loc 1 206 28 discriminator 3
 1964 150c 07F52963 		add	r3, r7, #2704
 1965 1510 D3E90023 		ldrd	r2, [r3]
 1966 1514 D143     		mvns	r1, r2
 1967 1516 C7F8D017 		str	r1, [r7, #2000]
 1968 151a DB43     		mvns	r3, r3
 1969 151c C7F8D437 		str	r3, [r7, #2004]
 1970              		.loc 1 206 33 discriminator 3
 1971 1520 07F52B63 		add	r3, r7, #2736
 1972 1524 D3E90023 		ldrd	r2, [r3]
 1973 1528 07F5FA61 		add	r1, r7, #2000
 1974 152c D1E90001 		ldrd	r0, [r1]
 1975 1530 8446     		mov	ip, r0
 1976 1532 0CEA020C 		and	ip, ip, r2
 1977 1536 C7F8C8C7 		str	ip, [r7, #1992]
 1978 153a 0B40     		ands	r3, r3, r1
 1979 153c C7F8CC37 		str	r3, [r7, #1996]
 1980              		.loc 1 206 17 discriminator 3
 1981 1540 07F69823 		addw	r3, r7, #2712
 1982 1544 D3E90023 		ldrd	r2, [r3]
 1983 1548 07F5F961 		add	r1, r7, #1992
 1984 154c D1E90001 		ldrd	r0, [r1]
 1985 1550 8446     		mov	ip, r0
 1986 1552 82EA0C0C 		eor	ip, r2, ip
 1987 1556 C7F828C3 		str	ip, [r7, #808]
 1988 155a 4B40     		eors	r3, r3, r1
 1989 155c C7F82C33 		str	r3, [r7, #812]
 1990 1560 D7E9CA23 		ldrd	r2, [r7, #808]
 1991 1564 07F51D61 		add	r1, r7, #2512
 1992 1568 C1E90023 		strd	r2, [r1]
 207:fips202.c     ****             Emu =   BCu ^((~BCa)&  BCe );
 1993              		.loc 1 207 28 discriminator 3
 1994 156c 07F52B63 		add	r3, r7, #2736
 1995 1570 D3E90023 		ldrd	r2, [r3]
 1996 1574 D143     		mvns	r1, r2
 1997 1576 C7F8C017 		str	r1, [r7, #1984]
 1998 157a DB43     		mvns	r3, r3
 1999 157c C7F8C437 		str	r3, [r7, #1988]
 2000              		.loc 1 207 33 discriminator 3
 2001 1580 07F6A823 		addw	r3, r7, #2728
 2002 1584 D3E90023 		ldrd	r2, [r3]
 2003 1588 07F5F861 		add	r1, r7, #1984
 2004 158c D1E90001 		ldrd	r0, [r1]
 2005 1590 8446     		mov	ip, r0
 2006 1592 0CEA020C 		and	ip, ip, r2
 2007 1596 C7F8B8C7 		str	ip, [r7, #1976]
 2008 159a 0B40     		ands	r3, r3, r1
 2009 159c C7F8BC37 		str	r3, [r7, #1980]
 2010              		.loc 1 207 17 discriminator 3
 2011 15a0 07F52963 		add	r3, r7, #2704
 2012 15a4 D3E90023 		ldrd	r2, [r3]
 2013 15a8 07F5F761 		add	r1, r7, #1976
 2014 15ac D1E90001 		ldrd	r0, [r1]
 2015 15b0 8446     		mov	ip, r0
 2016 15b2 82EA0C0C 		eor	ip, r2, ip
 2017 15b6 C7F820C3 		str	ip, [r7, #800]
 2018 15ba 4B40     		eors	r3, r3, r1
 2019 15bc C7F82433 		str	r3, [r7, #804]
 2020 15c0 D7E9C823 		ldrd	r2, [r7, #800]
 2021 15c4 07F6C811 		addw	r1, r7, #2504
 2022 15c8 C1E90023 		strd	r2, [r1]
 208:fips202.c     **** 
 209:fips202.c     ****             Abi ^= Di;
 2023              		.loc 1 209 17 discriminator 3
 2024 15cc 07F66833 		addw	r3, r7, #2920
 2025 15d0 D3E90001 		ldrd	r0, [r3]
 2026 15d4 07F67823 		addw	r3, r7, #2680
 2027 15d8 D3E90023 		ldrd	r2, [r3]
 2028 15dc 80EA020C 		eor	ip, r0, r2
 2029 15e0 C7F818C3 		str	ip, [r7, #792]
 2030 15e4 4B40     		eors	r3, r3, r1
 2031 15e6 C7F81C33 		str	r3, [r7, #796]
 2032 15ea D7E9C623 		ldrd	r2, [r7, #792]
 2033 15ee 07F66831 		addw	r1, r7, #2920
 2034 15f2 C1E90023 		strd	r2, [r1]
 210:fips202.c     ****             BCa = ROL(Abi, 62);
 2035              		.loc 1 210 17 discriminator 3
 2036 15f6 D7F86C3B 		ldr	r3, [r7, #2924]
 2037 15fa 9A07     		lsls	r2, r3, #30
 2038 15fc D7F8683B 		ldr	r3, [r7, #2920]
 2039 1600 9B08     		lsrs	r3, r3, #2
 2040 1602 1343     		orrs	r3, r3, r2
 2041 1604 C7F81033 		str	r3, [r7, #784]
 2042 1608 D7F8683B 		ldr	r3, [r7, #2920]
 2043 160c 9A07     		lsls	r2, r3, #30
 2044 160e D7F86C3B 		ldr	r3, [r7, #2924]
 2045 1612 9B08     		lsrs	r3, r3, #2
 2046 1614 1343     		orrs	r3, r3, r2
 2047 1616 C7F81433 		str	r3, [r7, #788]
 2048 161a D7E9C423 		ldrd	r2, [r7, #784]
 2049 161e 07F52B61 		add	r1, r7, #2736
 2050 1622 C1E90023 		strd	r2, [r1]
 211:fips202.c     ****             Ago ^= Do;
 2051              		.loc 1 211 17 discriminator 3
 2052 1626 07F63833 		addw	r3, r7, #2872
 2053 162a D3E90001 		ldrd	r0, [r3]
 2054 162e 07F52763 		add	r3, r7, #2672
 2055 1632 D3E90023 		ldrd	r2, [r3]
 2056 1636 80EA020C 		eor	ip, r0, r2
 2057 163a C7F808C3 		str	ip, [r7, #776]
 2058 163e 4B40     		eors	r3, r3, r1
 2059 1640 C7F80C33 		str	r3, [r7, #780]
 2060 1644 D7E9C223 		ldrd	r2, [r7, #776]
 2061 1648 07F63831 		addw	r1, r7, #2872
 2062 164c C1E90023 		strd	r2, [r1]
 212:fips202.c     ****             BCe = ROL(Ago, 55);
 2063              		.loc 1 212 17 discriminator 3
 2064 1650 D7F83C3B 		ldr	r3, [r7, #2876]
 2065 1654 DA05     		lsls	r2, r3, #23
 2066 1656 D7F8383B 		ldr	r3, [r7, #2872]
 2067 165a 5B0A     		lsrs	r3, r3, #9
 2068 165c 1343     		orrs	r3, r3, r2
 2069 165e C7F80033 		str	r3, [r7, #768]
 2070 1662 D7F8383B 		ldr	r3, [r7, #2872]
 2071 1666 DA05     		lsls	r2, r3, #23
 2072 1668 D7F83C3B 		ldr	r3, [r7, #2876]
 2073 166c 5B0A     		lsrs	r3, r3, #9
 2074 166e 1343     		orrs	r3, r3, r2
 2075 1670 C7F80433 		str	r3, [r7, #772]
 2076 1674 D7E9C023 		ldrd	r2, [r7, #768]
 2077 1678 07F6A821 		addw	r1, r7, #2728
 2078 167c C1E90023 		strd	r2, [r1]
 213:fips202.c     ****             Aku ^= Du;
 2079              		.loc 1 213 17 discriminator 3
 2080 1680 07F60833 		addw	r3, r7, #2824
 2081 1684 D3E90001 		ldrd	r0, [r3]
 2082 1688 07F66823 		addw	r3, r7, #2664
 2083 168c D3E90023 		ldrd	r2, [r3]
 2084 1690 80EA020C 		eor	ip, r0, r2
 2085 1694 C7F8F8C2 		str	ip, [r7, #760]
 2086 1698 4B40     		eors	r3, r3, r1
 2087 169a C7F8FC32 		str	r3, [r7, #764]
 2088 169e D7E9BE23 		ldrd	r2, [r7, #760]
 2089 16a2 07F60831 		addw	r1, r7, #2824
 2090 16a6 C1E90023 		strd	r2, [r1]
 214:fips202.c     ****             BCi = ROL(Aku, 39);
 2091              		.loc 1 214 17 discriminator 3
 2092 16aa D7F80C3B 		ldr	r3, [r7, #2828]
 2093 16ae DA01     		lsls	r2, r3, #7
 2094 16b0 D7F8083B 		ldr	r3, [r7, #2824]
 2095 16b4 5B0E     		lsrs	r3, r3, #25
 2096 16b6 1343     		orrs	r3, r3, r2
 2097 16b8 C7F8F032 		str	r3, [r7, #752]
 2098 16bc D7F8083B 		ldr	r3, [r7, #2824]
 2099 16c0 DA01     		lsls	r2, r3, #7
 2100 16c2 D7F80C3B 		ldr	r3, [r7, #2828]
 2101 16c6 5B0E     		lsrs	r3, r3, #25
 2102 16c8 1343     		orrs	r3, r3, r2
 2103 16ca C7F8F432 		str	r3, [r7, #756]
 2104 16ce D7E9BC23 		ldrd	r2, [r7, #752]
 2105 16d2 07F52A61 		add	r1, r7, #2720
 2106 16d6 C1E90023 		strd	r2, [r1]
 215:fips202.c     ****             Ama ^= Da;
 2107              		.loc 1 215 17 discriminator 3
 2108 16da 07F53063 		add	r3, r7, #2816
 2109 16de D3E90001 		ldrd	r0, [r3]
 2110 16e2 07F68823 		addw	r3, r7, #2696
 2111 16e6 D3E90023 		ldrd	r2, [r3]
 2112 16ea 80EA020C 		eor	ip, r0, r2
 2113 16ee C7F8E8C2 		str	ip, [r7, #744]
 2114 16f2 4B40     		eors	r3, r3, r1
 2115 16f4 C7F8EC32 		str	r3, [r7, #748]
 2116 16f8 D7E9BA23 		ldrd	r2, [r7, #744]
 2117 16fc 07F53061 		add	r1, r7, #2816
 2118 1700 C1E90023 		strd	r2, [r1]
 216:fips202.c     ****             BCo = ROL(Ama, 41);
 2119              		.loc 1 216 17 discriminator 3
 2120 1704 D7F8043B 		ldr	r3, [r7, #2820]
 2121 1708 5A02     		lsls	r2, r3, #9
 2122 170a D7F8003B 		ldr	r3, [r7, #2816]
 2123 170e DB0D     		lsrs	r3, r3, #23
 2124 1710 1343     		orrs	r3, r3, r2
 2125 1712 C7F8E032 		str	r3, [r7, #736]
 2126 1716 D7F8003B 		ldr	r3, [r7, #2816]
 2127 171a 5A02     		lsls	r2, r3, #9
 2128 171c D7F8043B 		ldr	r3, [r7, #2820]
 2129 1720 DB0D     		lsrs	r3, r3, #23
 2130 1722 1343     		orrs	r3, r3, r2
 2131 1724 C7F8E432 		str	r3, [r7, #740]
 2132 1728 D7E9B823 		ldrd	r2, [r7, #736]
 2133 172c 07F69821 		addw	r1, r7, #2712
 2134 1730 C1E90023 		strd	r2, [r1]
 217:fips202.c     ****             Ase ^= De;
 2135              		.loc 1 217 17 discriminator 3
 2136 1734 07F52D63 		add	r3, r7, #2768
 2137 1738 D3E90001 		ldrd	r0, [r3]
 2138 173c 07F52863 		add	r3, r7, #2688
 2139 1740 D3E90023 		ldrd	r2, [r3]
 2140 1744 80EA020C 		eor	ip, r0, r2
 2141 1748 C7F8D8C2 		str	ip, [r7, #728]
 2142 174c 4B40     		eors	r3, r3, r1
 2143 174e C7F8DC32 		str	r3, [r7, #732]
 2144 1752 D7E9B623 		ldrd	r2, [r7, #728]
 2145 1756 07F52D61 		add	r1, r7, #2768
 2146 175a C1E90023 		strd	r2, [r1]
 218:fips202.c     ****             BCu = ROL(Ase,  2);
 2147              		.loc 1 218 17 discriminator 3
 2148 175e D7F8D03A 		ldr	r3, [r7, #2768]
 2149 1762 9A0F     		lsrs	r2, r3, #30
 2150 1764 D7F8D43A 		ldr	r3, [r7, #2772]
 2151 1768 9B00     		lsls	r3, r3, #2
 2152 176a 1343     		orrs	r3, r3, r2
 2153 176c C7F8D432 		str	r3, [r7, #724]
 2154 1770 D7F8D43A 		ldr	r3, [r7, #2772]
 2155 1774 9A0F     		lsrs	r2, r3, #30
 2156 1776 D7F8D03A 		ldr	r3, [r7, #2768]
 2157 177a 9B00     		lsls	r3, r3, #2
 2158 177c 1343     		orrs	r3, r3, r2
 2159 177e C7F8D032 		str	r3, [r7, #720]
 2160 1782 D7E9B423 		ldrd	r2, [r7, #720]
 2161 1786 07F52961 		add	r1, r7, #2704
 2162 178a C1E90023 		strd	r2, [r1]
 219:fips202.c     ****             Esa =   BCa ^((~BCe)&  BCi );
 2163              		.loc 1 219 28 discriminator 3
 2164 178e 07F6A823 		addw	r3, r7, #2728
 2165 1792 D3E90023 		ldrd	r2, [r3]
 2166 1796 D143     		mvns	r1, r2
 2167 1798 C7F8B017 		str	r1, [r7, #1968]
 2168 179c DB43     		mvns	r3, r3
 2169 179e C7F8B437 		str	r3, [r7, #1972]
 2170              		.loc 1 219 33 discriminator 3
 2171 17a2 07F52A63 		add	r3, r7, #2720
 2172 17a6 D3E90023 		ldrd	r2, [r3]
 2173 17aa 07F5F661 		add	r1, r7, #1968
 2174 17ae D1E90001 		ldrd	r0, [r1]
 2175 17b2 8446     		mov	ip, r0
 2176 17b4 0CEA020C 		and	ip, ip, r2
 2177 17b8 C7F8A8C7 		str	ip, [r7, #1960]
 2178 17bc 0B40     		ands	r3, r3, r1
 2179 17be C7F8AC37 		str	r3, [r7, #1964]
 2180              		.loc 1 219 17 discriminator 3
 2181 17c2 07F52B63 		add	r3, r7, #2736
 2182 17c6 D3E90023 		ldrd	r2, [r3]
 2183 17ca 07F5F561 		add	r1, r7, #1960
 2184 17ce D1E90001 		ldrd	r0, [r1]
 2185 17d2 8446     		mov	ip, r0
 2186 17d4 82EA0C0C 		eor	ip, r2, ip
 2187 17d8 C7F8C8C2 		str	ip, [r7, #712]
 2188 17dc 4B40     		eors	r3, r3, r1
 2189 17de C7F8CC32 		str	r3, [r7, #716]
 2190 17e2 D7E9B223 		ldrd	r2, [r7, #712]
 2191 17e6 07F51C61 		add	r1, r7, #2496
 2192 17ea C1E90023 		strd	r2, [r1]
 220:fips202.c     ****             Ese =   BCe ^((~BCi)&  BCo );
 2193              		.loc 1 220 28 discriminator 3
 2194 17ee 07F52A63 		add	r3, r7, #2720
 2195 17f2 D3E90023 		ldrd	r2, [r3]
 2196 17f6 D143     		mvns	r1, r2
 2197 17f8 C7F8A017 		str	r1, [r7, #1952]
 2198 17fc DB43     		mvns	r3, r3
 2199 17fe C7F8A437 		str	r3, [r7, #1956]
 2200              		.loc 1 220 33 discriminator 3
 2201 1802 07F69823 		addw	r3, r7, #2712
 2202 1806 D3E90023 		ldrd	r2, [r3]
 2203 180a 07F5F461 		add	r1, r7, #1952
 2204 180e D1E90001 		ldrd	r0, [r1]
 2205 1812 8446     		mov	ip, r0
 2206 1814 0CEA020C 		and	ip, ip, r2
 2207 1818 C7F898C7 		str	ip, [r7, #1944]
 2208 181c 0B40     		ands	r3, r3, r1
 2209 181e C7F89C37 		str	r3, [r7, #1948]
 2210              		.loc 1 220 17 discriminator 3
 2211 1822 07F6A823 		addw	r3, r7, #2728
 2212 1826 D3E90023 		ldrd	r2, [r3]
 2213 182a 07F5F361 		add	r1, r7, #1944
 2214 182e D1E90001 		ldrd	r0, [r1]
 2215 1832 8446     		mov	ip, r0
 2216 1834 82EA0C0C 		eor	ip, r2, ip
 2217 1838 C7F8C0C2 		str	ip, [r7, #704]
 2218 183c 4B40     		eors	r3, r3, r1
 2219 183e C7F8C432 		str	r3, [r7, #708]
 2220 1842 D7E9B023 		ldrd	r2, [r7, #704]
 2221 1846 07F6B811 		addw	r1, r7, #2488
 2222 184a C1E90023 		strd	r2, [r1]
 221:fips202.c     ****             Esi =   BCi ^((~BCo)&  BCu );
 2223              		.loc 1 221 28 discriminator 3
 2224 184e 07F69823 		addw	r3, r7, #2712
 2225 1852 D3E90023 		ldrd	r2, [r3]
 2226 1856 D143     		mvns	r1, r2
 2227 1858 C7F89017 		str	r1, [r7, #1936]
 2228 185c DB43     		mvns	r3, r3
 2229 185e C7F89437 		str	r3, [r7, #1940]
 2230              		.loc 1 221 33 discriminator 3
 2231 1862 07F52963 		add	r3, r7, #2704
 2232 1866 D3E90023 		ldrd	r2, [r3]
 2233 186a 07F5F261 		add	r1, r7, #1936
 2234 186e D1E90001 		ldrd	r0, [r1]
 2235 1872 8446     		mov	ip, r0
 2236 1874 0CEA020C 		and	ip, ip, r2
 2237 1878 C7F888C7 		str	ip, [r7, #1928]
 2238 187c 0B40     		ands	r3, r3, r1
 2239 187e C7F88C37 		str	r3, [r7, #1932]
 2240              		.loc 1 221 17 discriminator 3
 2241 1882 07F52A63 		add	r3, r7, #2720
 2242 1886 D3E90023 		ldrd	r2, [r3]
 2243 188a 07F5F161 		add	r1, r7, #1928
 2244 188e D1E90001 		ldrd	r0, [r1]
 2245 1892 8446     		mov	ip, r0
 2246 1894 82EA0C0C 		eor	ip, r2, ip
 2247 1898 C7F8B8C2 		str	ip, [r7, #696]
 2248 189c 4B40     		eors	r3, r3, r1
 2249 189e C7F8BC32 		str	r3, [r7, #700]
 2250 18a2 D7E9AE23 		ldrd	r2, [r7, #696]
 2251 18a6 07F51B61 		add	r1, r7, #2480
 2252 18aa C1E90023 		strd	r2, [r1]
 222:fips202.c     ****             Eso =   BCo ^((~BCu)&  BCa );
 2253              		.loc 1 222 28 discriminator 3
 2254 18ae 07F52963 		add	r3, r7, #2704
 2255 18b2 D3E90023 		ldrd	r2, [r3]
 2256 18b6 D143     		mvns	r1, r2
 2257 18b8 C7F88017 		str	r1, [r7, #1920]
 2258 18bc DB43     		mvns	r3, r3
 2259 18be C7F88437 		str	r3, [r7, #1924]
 2260              		.loc 1 222 33 discriminator 3
 2261 18c2 07F52B63 		add	r3, r7, #2736
 2262 18c6 D3E90023 		ldrd	r2, [r3]
 2263 18ca 07F5F061 		add	r1, r7, #1920
 2264 18ce D1E90001 		ldrd	r0, [r1]
 2265 18d2 8446     		mov	ip, r0
 2266 18d4 0CEA020C 		and	ip, ip, r2
 2267 18d8 C7F878C7 		str	ip, [r7, #1912]
 2268 18dc 0B40     		ands	r3, r3, r1
 2269 18de C7F87C37 		str	r3, [r7, #1916]
 2270              		.loc 1 222 17 discriminator 3
 2271 18e2 07F69823 		addw	r3, r7, #2712
 2272 18e6 D3E90023 		ldrd	r2, [r3]
 2273 18ea 07F5EF61 		add	r1, r7, #1912
 2274 18ee D1E90001 		ldrd	r0, [r1]
 2275 18f2 8446     		mov	ip, r0
 2276 18f4 82EA0C0C 		eor	ip, r2, ip
 2277 18f8 C7F8B0C2 		str	ip, [r7, #688]
 2278 18fc 4B40     		eors	r3, r3, r1
 2279 18fe C7F8B432 		str	r3, [r7, #692]
 2280 1902 D7E9AC23 		ldrd	r2, [r7, #688]
 2281 1906 07F6A811 		addw	r1, r7, #2472
 2282 190a C1E90023 		strd	r2, [r1]
 223:fips202.c     ****             Esu =   BCu ^((~BCa)&  BCe );
 2283              		.loc 1 223 28 discriminator 3
 2284 190e 07F52B63 		add	r3, r7, #2736
 2285 1912 D3E90023 		ldrd	r2, [r3]
 2286 1916 D143     		mvns	r1, r2
 2287 1918 C7F87017 		str	r1, [r7, #1904]
 2288 191c DB43     		mvns	r3, r3
 2289 191e C7F87437 		str	r3, [r7, #1908]
 2290              		.loc 1 223 33 discriminator 3
 2291 1922 07F6A823 		addw	r3, r7, #2728
 2292 1926 D3E90023 		ldrd	r2, [r3]
 2293 192a 07F5EE61 		add	r1, r7, #1904
 2294 192e D1E90001 		ldrd	r0, [r1]
 2295 1932 8446     		mov	ip, r0
 2296 1934 0CEA020C 		and	ip, ip, r2
 2297 1938 C7F868C7 		str	ip, [r7, #1896]
 2298 193c 0B40     		ands	r3, r3, r1
 2299 193e C7F86C37 		str	r3, [r7, #1900]
 2300              		.loc 1 223 17 discriminator 3
 2301 1942 07F52963 		add	r3, r7, #2704
 2302 1946 D3E90023 		ldrd	r2, [r3]
 2303 194a 07F5ED61 		add	r1, r7, #1896
 2304 194e D1E90001 		ldrd	r0, [r1]
 2305 1952 8446     		mov	ip, r0
 2306 1954 82EA0C0C 		eor	ip, r2, ip
 2307 1958 C7F8A8C2 		str	ip, [r7, #680]
 2308 195c 4B40     		eors	r3, r3, r1
 2309 195e C7F8AC32 		str	r3, [r7, #684]
 2310 1962 D7E9AA23 		ldrd	r2, [r7, #680]
 2311 1966 07F51A61 		add	r1, r7, #2464
 2312 196a C1E90023 		strd	r2, [r1]
 224:fips202.c     **** 
 225:fips202.c     ****             //    prepareTheta
 226:fips202.c     ****             BCa = Eba^Ega^Eka^Ema^Esa;
 2313              		.loc 1 226 22 discriminator 3
 2314 196e 07F52663 		add	r3, r7, #2656
 2315 1972 D3E90001 		ldrd	r0, [r3]
 2316 1976 07F63823 		addw	r3, r7, #2616
 2317 197a D3E90023 		ldrd	r2, [r3]
 2318 197e 80EA020C 		eor	ip, r0, r2
 2319 1982 C7F860C7 		str	ip, [r7, #1888]
 2320 1986 4B40     		eors	r3, r3, r1
 2321 1988 C7F86437 		str	r3, [r7, #1892]
 2322              		.loc 1 226 26 discriminator 3
 2323 198c 07F52163 		add	r3, r7, #2576
 2324 1990 D3E90023 		ldrd	r2, [r3]
 2325 1994 07F5EC61 		add	r1, r7, #1888
 2326 1998 D1E90001 		ldrd	r0, [r1]
 2327 199c 8446     		mov	ip, r0
 2328 199e 8CEA020C 		eor	ip, ip, r2
 2329 19a2 C7F858C7 		str	ip, [r7, #1880]
 2330 19a6 4B40     		eors	r3, r3, r1
 2331 19a8 C7F85C37 		str	r3, [r7, #1884]
 2332              		.loc 1 226 30 discriminator 3
 2333 19ac 07F6E813 		addw	r3, r7, #2536
 2334 19b0 D3E90023 		ldrd	r2, [r3]
 2335 19b4 07F5EB61 		add	r1, r7, #1880
 2336 19b8 D1E90001 		ldrd	r0, [r1]
 2337 19bc 8446     		mov	ip, r0
 2338 19be 8CEA020C 		eor	ip, ip, r2
 2339 19c2 C7F850C7 		str	ip, [r7, #1872]
 2340 19c6 4B40     		eors	r3, r3, r1
 2341 19c8 C7F85437 		str	r3, [r7, #1876]
 2342              		.loc 1 226 17 discriminator 3
 2343 19cc 07F51C63 		add	r3, r7, #2496
 2344 19d0 D3E90023 		ldrd	r2, [r3]
 2345 19d4 07F5EA61 		add	r1, r7, #1872
 2346 19d8 D1E90001 		ldrd	r0, [r1]
 2347 19dc 8446     		mov	ip, r0
 2348 19de 82EA0C0C 		eor	ip, r2, ip
 2349 19e2 C7F8A0C2 		str	ip, [r7, #672]
 2350 19e6 4B40     		eors	r3, r3, r1
 2351 19e8 C7F8A432 		str	r3, [r7, #676]
 2352 19ec D7E9A823 		ldrd	r2, [r7, #672]
 2353 19f0 07F52B61 		add	r1, r7, #2736
 2354 19f4 C1E90023 		strd	r2, [r1]
 227:fips202.c     ****             BCe = Ebe^Ege^Eke^Eme^Ese;
 2355              		.loc 1 227 22 discriminator 3
 2356 19f8 07F65823 		addw	r3, r7, #2648
 2357 19fc D3E90001 		ldrd	r0, [r3]
 2358 1a00 07F52363 		add	r3, r7, #2608
 2359 1a04 D3E90023 		ldrd	r2, [r3]
 2360 1a08 80EA020C 		eor	ip, r0, r2
 2361 1a0c C7F848C7 		str	ip, [r7, #1864]
 2362 1a10 4B40     		eors	r3, r3, r1
 2363 1a12 C7F84C37 		str	r3, [r7, #1868]
 2364              		.loc 1 227 26 discriminator 3
 2365 1a16 07F60823 		addw	r3, r7, #2568
 2366 1a1a D3E90023 		ldrd	r2, [r3]
 2367 1a1e 07F5E961 		add	r1, r7, #1864
 2368 1a22 D1E90001 		ldrd	r0, [r1]
 2369 1a26 8446     		mov	ip, r0
 2370 1a28 8CEA020C 		eor	ip, ip, r2
 2371 1a2c C7F840C7 		str	ip, [r7, #1856]
 2372 1a30 4B40     		eors	r3, r3, r1
 2373 1a32 C7F84437 		str	r3, [r7, #1860]
 2374              		.loc 1 227 30 discriminator 3
 2375 1a36 07F51E63 		add	r3, r7, #2528
 2376 1a3a D3E90023 		ldrd	r2, [r3]
 2377 1a3e 07F5E861 		add	r1, r7, #1856
 2378 1a42 D1E90001 		ldrd	r0, [r1]
 2379 1a46 8446     		mov	ip, r0
 2380 1a48 8CEA020C 		eor	ip, ip, r2
 2381 1a4c C7F838C7 		str	ip, [r7, #1848]
 2382 1a50 4B40     		eors	r3, r3, r1
 2383 1a52 C7F83C37 		str	r3, [r7, #1852]
 2384              		.loc 1 227 17 discriminator 3
 2385 1a56 07F6B813 		addw	r3, r7, #2488
 2386 1a5a D3E90023 		ldrd	r2, [r3]
 2387 1a5e 07F5E761 		add	r1, r7, #1848
 2388 1a62 D1E90001 		ldrd	r0, [r1]
 2389 1a66 8446     		mov	ip, r0
 2390 1a68 82EA0C0C 		eor	ip, r2, ip
 2391 1a6c C7F898C2 		str	ip, [r7, #664]
 2392 1a70 4B40     		eors	r3, r3, r1
 2393 1a72 C7F89C32 		str	r3, [r7, #668]
 2394 1a76 D7E9A623 		ldrd	r2, [r7, #664]
 2395 1a7a 07F6A821 		addw	r1, r7, #2728
 2396 1a7e C1E90023 		strd	r2, [r1]
 228:fips202.c     ****             BCi = Ebi^Egi^Eki^Emi^Esi;
 2397              		.loc 1 228 22 discriminator 3
 2398 1a82 07F52563 		add	r3, r7, #2640
 2399 1a86 D3E90001 		ldrd	r0, [r3]
 2400 1a8a 07F62823 		addw	r3, r7, #2600
 2401 1a8e D3E90023 		ldrd	r2, [r3]
 2402 1a92 80EA020C 		eor	ip, r0, r2
 2403 1a96 C7F830C7 		str	ip, [r7, #1840]
 2404 1a9a 4B40     		eors	r3, r3, r1
 2405 1a9c C7F83437 		str	r3, [r7, #1844]
 2406              		.loc 1 228 26 discriminator 3
 2407 1aa0 07F52063 		add	r3, r7, #2560
 2408 1aa4 D3E90023 		ldrd	r2, [r3]
 2409 1aa8 07F5E661 		add	r1, r7, #1840
 2410 1aac D1E90001 		ldrd	r0, [r1]
 2411 1ab0 8446     		mov	ip, r0
 2412 1ab2 8CEA020C 		eor	ip, ip, r2
 2413 1ab6 C7F828C7 		str	ip, [r7, #1832]
 2414 1aba 4B40     		eors	r3, r3, r1
 2415 1abc C7F82C37 		str	r3, [r7, #1836]
 2416              		.loc 1 228 30 discriminator 3
 2417 1ac0 07F6D813 		addw	r3, r7, #2520
 2418 1ac4 D3E90023 		ldrd	r2, [r3]
 2419 1ac8 07F5E561 		add	r1, r7, #1832
 2420 1acc D1E90001 		ldrd	r0, [r1]
 2421 1ad0 8446     		mov	ip, r0
 2422 1ad2 8CEA020C 		eor	ip, ip, r2
 2423 1ad6 C7F820C7 		str	ip, [r7, #1824]
 2424 1ada 4B40     		eors	r3, r3, r1
 2425 1adc C7F82437 		str	r3, [r7, #1828]
 2426              		.loc 1 228 17 discriminator 3
 2427 1ae0 07F51B63 		add	r3, r7, #2480
 2428 1ae4 D3E90023 		ldrd	r2, [r3]
 2429 1ae8 07F5E461 		add	r1, r7, #1824
 2430 1aec D1E90001 		ldrd	r0, [r1]
 2431 1af0 8446     		mov	ip, r0
 2432 1af2 82EA0C0C 		eor	ip, r2, ip
 2433 1af6 C7F890C2 		str	ip, [r7, #656]
 2434 1afa 4B40     		eors	r3, r3, r1
 2435 1afc C7F89432 		str	r3, [r7, #660]
 2436 1b00 D7E9A423 		ldrd	r2, [r7, #656]
 2437 1b04 07F52A61 		add	r1, r7, #2720
 2438 1b08 C1E90023 		strd	r2, [r1]
 229:fips202.c     ****             BCo = Ebo^Ego^Eko^Emo^Eso;
 2439              		.loc 1 229 22 discriminator 3
 2440 1b0c 07F64823 		addw	r3, r7, #2632
 2441 1b10 D3E90001 		ldrd	r0, [r3]
 2442 1b14 07F52263 		add	r3, r7, #2592
 2443 1b18 D3E90023 		ldrd	r2, [r3]
 2444 1b1c 80EA020C 		eor	ip, r0, r2
 2445 1b20 C7F818C7 		str	ip, [r7, #1816]
 2446 1b24 4B40     		eors	r3, r3, r1
 2447 1b26 C7F81C37 		str	r3, [r7, #1820]
 2448              		.loc 1 229 26 discriminator 3
 2449 1b2a 07F6F813 		addw	r3, r7, #2552
 2450 1b2e D3E90023 		ldrd	r2, [r3]
 2451 1b32 07F5E361 		add	r1, r7, #1816
 2452 1b36 D1E90001 		ldrd	r0, [r1]
 2453 1b3a 8446     		mov	ip, r0
 2454 1b3c 8CEA020C 		eor	ip, ip, r2
 2455 1b40 C7F810C7 		str	ip, [r7, #1808]
 2456 1b44 4B40     		eors	r3, r3, r1
 2457 1b46 C7F81437 		str	r3, [r7, #1812]
 2458              		.loc 1 229 30 discriminator 3
 2459 1b4a 07F51D63 		add	r3, r7, #2512
 2460 1b4e D3E90023 		ldrd	r2, [r3]
 2461 1b52 07F5E261 		add	r1, r7, #1808
 2462 1b56 D1E90001 		ldrd	r0, [r1]
 2463 1b5a 8446     		mov	ip, r0
 2464 1b5c 8CEA020C 		eor	ip, ip, r2
 2465 1b60 C7F808C7 		str	ip, [r7, #1800]
 2466 1b64 4B40     		eors	r3, r3, r1
 2467 1b66 C7F80C37 		str	r3, [r7, #1804]
 2468              		.loc 1 229 17 discriminator 3
 2469 1b6a 07F6A813 		addw	r3, r7, #2472
 2470 1b6e D3E90023 		ldrd	r2, [r3]
 2471 1b72 07F5E161 		add	r1, r7, #1800
 2472 1b76 D1E90001 		ldrd	r0, [r1]
 2473 1b7a 8446     		mov	ip, r0
 2474 1b7c 82EA0C0C 		eor	ip, r2, ip
 2475 1b80 C7F888C2 		str	ip, [r7, #648]
 2476 1b84 4B40     		eors	r3, r3, r1
 2477 1b86 C7F88C32 		str	r3, [r7, #652]
 2478 1b8a D7E9A223 		ldrd	r2, [r7, #648]
 2479 1b8e 07F69821 		addw	r1, r7, #2712
 2480 1b92 C1E90023 		strd	r2, [r1]
 230:fips202.c     ****             BCu = Ebu^Egu^Eku^Emu^Esu;
 2481              		.loc 1 230 22 discriminator 3
 2482 1b96 07F52463 		add	r3, r7, #2624
 2483 1b9a D3E90001 		ldrd	r0, [r3]
 2484 1b9e 07F61823 		addw	r3, r7, #2584
 2485 1ba2 D3E90023 		ldrd	r2, [r3]
 2486 1ba6 80EA020C 		eor	ip, r0, r2
 2487 1baa C7F800C7 		str	ip, [r7, #1792]
 2488 1bae 4B40     		eors	r3, r3, r1
 2489 1bb0 C7F80437 		str	r3, [r7, #1796]
 2490              		.loc 1 230 26 discriminator 3
 2491 1bb4 07F51F63 		add	r3, r7, #2544
 2492 1bb8 D3E90023 		ldrd	r2, [r3]
 2493 1bbc 07F5E061 		add	r1, r7, #1792
 2494 1bc0 D1E90001 		ldrd	r0, [r1]
 2495 1bc4 8446     		mov	ip, r0
 2496 1bc6 8CEA020C 		eor	ip, ip, r2
 2497 1bca C7F8F8C6 		str	ip, [r7, #1784]
 2498 1bce 4B40     		eors	r3, r3, r1
 2499 1bd0 C7F8FC36 		str	r3, [r7, #1788]
 2500              		.loc 1 230 30 discriminator 3
 2501 1bd4 07F6C813 		addw	r3, r7, #2504
 2502 1bd8 D3E90023 		ldrd	r2, [r3]
 2503 1bdc 07F5DF61 		add	r1, r7, #1784
 2504 1be0 D1E90001 		ldrd	r0, [r1]
 2505 1be4 8446     		mov	ip, r0
 2506 1be6 8CEA020C 		eor	ip, ip, r2
 2507 1bea C7F8F0C6 		str	ip, [r7, #1776]
 2508 1bee 4B40     		eors	r3, r3, r1
 2509 1bf0 C7F8F436 		str	r3, [r7, #1780]
 2510              		.loc 1 230 17 discriminator 3
 2511 1bf4 07F51A63 		add	r3, r7, #2464
 2512 1bf8 D3E90023 		ldrd	r2, [r3]
 2513 1bfc 07F5DE61 		add	r1, r7, #1776
 2514 1c00 D1E90001 		ldrd	r0, [r1]
 2515 1c04 8446     		mov	ip, r0
 2516 1c06 82EA0C0C 		eor	ip, r2, ip
 2517 1c0a C7F880C2 		str	ip, [r7, #640]
 2518 1c0e 4B40     		eors	r3, r3, r1
 2519 1c10 C7F88432 		str	r3, [r7, #644]
 2520 1c14 D7E9A023 		ldrd	r2, [r7, #640]
 2521 1c18 07F52961 		add	r1, r7, #2704
 2522 1c1c C1E90023 		strd	r2, [r1]
 231:fips202.c     **** 
 232:fips202.c     ****             //thetaRhoPiChiIotaPrepareTheta(round+1, E, A)
 233:fips202.c     ****             Da = BCu^ROL(BCe, 1);
 2523              		.loc 1 233 22 discriminator 3
 2524 1c20 D7F8A83A 		ldr	r3, [r7, #2728]
 2525 1c24 DA0F     		lsrs	r2, r3, #31
 2526 1c26 D7F8AC3A 		ldr	r3, [r7, #2732]
 2527 1c2a 5B00     		lsls	r3, r3, #1
 2528 1c2c 1343     		orrs	r3, r3, r2
 2529 1c2e C7F8EC36 		str	r3, [r7, #1772]
 2530 1c32 D7F8AC3A 		ldr	r3, [r7, #2732]
 2531 1c36 DA0F     		lsrs	r2, r3, #31
 2532 1c38 D7F8A83A 		ldr	r3, [r7, #2728]
 2533 1c3c 5B00     		lsls	r3, r3, #1
 2534 1c3e 1343     		orrs	r3, r3, r2
 2535 1c40 C7F8E836 		str	r3, [r7, #1768]
 2536              		.loc 1 233 16 discriminator 3
 2537 1c44 07F52963 		add	r3, r7, #2704
 2538 1c48 D3E90023 		ldrd	r2, [r3]
 2539 1c4c 07F5DD61 		add	r1, r7, #1768
 2540 1c50 D1E90001 		ldrd	r0, [r1]
 2541 1c54 8446     		mov	ip, r0
 2542 1c56 82EA0C0C 		eor	ip, r2, ip
 2543 1c5a C7F878C2 		str	ip, [r7, #632]
 2544 1c5e 4B40     		eors	r3, r3, r1
 2545 1c60 C7F87C32 		str	r3, [r7, #636]
 2546 1c64 D7E99E23 		ldrd	r2, [r7, #632]
 2547 1c68 07F68821 		addw	r1, r7, #2696
 2548 1c6c C1E90023 		strd	r2, [r1]
 234:fips202.c     ****             De = BCa^ROL(BCi, 1);
 2549              		.loc 1 234 22 discriminator 3
 2550 1c70 D7F8A03A 		ldr	r3, [r7, #2720]
 2551 1c74 DA0F     		lsrs	r2, r3, #31
 2552 1c76 D7F8A43A 		ldr	r3, [r7, #2724]
 2553 1c7a 5B00     		lsls	r3, r3, #1
 2554 1c7c 1343     		orrs	r3, r3, r2
 2555 1c7e C7F8E436 		str	r3, [r7, #1764]
 2556 1c82 D7F8A43A 		ldr	r3, [r7, #2724]
 2557 1c86 DA0F     		lsrs	r2, r3, #31
 2558 1c88 D7F8A03A 		ldr	r3, [r7, #2720]
 2559 1c8c 5B00     		lsls	r3, r3, #1
 2560 1c8e 1343     		orrs	r3, r3, r2
 2561 1c90 C7F8E036 		str	r3, [r7, #1760]
 2562              		.loc 1 234 16 discriminator 3
 2563 1c94 07F52B63 		add	r3, r7, #2736
 2564 1c98 D3E90023 		ldrd	r2, [r3]
 2565 1c9c 07F5DC61 		add	r1, r7, #1760
 2566 1ca0 D1E90001 		ldrd	r0, [r1]
 2567 1ca4 8446     		mov	ip, r0
 2568 1ca6 82EA0C0C 		eor	ip, r2, ip
 2569 1caa C7F870C2 		str	ip, [r7, #624]
 2570 1cae 4B40     		eors	r3, r3, r1
 2571 1cb0 C7F87432 		str	r3, [r7, #628]
 2572 1cb4 D7E99C23 		ldrd	r2, [r7, #624]
 2573 1cb8 07F52861 		add	r1, r7, #2688
 2574 1cbc C1E90023 		strd	r2, [r1]
 235:fips202.c     ****             Di = BCe^ROL(BCo, 1);
 2575              		.loc 1 235 22 discriminator 3
 2576 1cc0 D7F8983A 		ldr	r3, [r7, #2712]
 2577 1cc4 DA0F     		lsrs	r2, r3, #31
 2578 1cc6 D7F89C3A 		ldr	r3, [r7, #2716]
 2579 1cca 5B00     		lsls	r3, r3, #1
 2580 1ccc 1343     		orrs	r3, r3, r2
 2581 1cce C7F8DC36 		str	r3, [r7, #1756]
 2582 1cd2 D7F89C3A 		ldr	r3, [r7, #2716]
 2583 1cd6 DA0F     		lsrs	r2, r3, #31
 2584 1cd8 D7F8983A 		ldr	r3, [r7, #2712]
 2585 1cdc 5B00     		lsls	r3, r3, #1
 2586 1cde 1343     		orrs	r3, r3, r2
 2587 1ce0 C7F8D836 		str	r3, [r7, #1752]
 2588              		.loc 1 235 16 discriminator 3
 2589 1ce4 07F6A823 		addw	r3, r7, #2728
 2590 1ce8 D3E90023 		ldrd	r2, [r3]
 2591 1cec 07F5DB61 		add	r1, r7, #1752
 2592 1cf0 D1E90001 		ldrd	r0, [r1]
 2593 1cf4 8446     		mov	ip, r0
 2594 1cf6 82EA0C0C 		eor	ip, r2, ip
 2595 1cfa C7F868C2 		str	ip, [r7, #616]
 2596 1cfe 4B40     		eors	r3, r3, r1
 2597 1d00 C7F86C32 		str	r3, [r7, #620]
 2598 1d04 D7E99A23 		ldrd	r2, [r7, #616]
 2599 1d08 07F67821 		addw	r1, r7, #2680
 2600 1d0c C1E90023 		strd	r2, [r1]
 236:fips202.c     ****             Do = BCi^ROL(BCu, 1);
 2601              		.loc 1 236 22 discriminator 3
 2602 1d10 D7F8903A 		ldr	r3, [r7, #2704]
 2603 1d14 DA0F     		lsrs	r2, r3, #31
 2604 1d16 D7F8943A 		ldr	r3, [r7, #2708]
 2605 1d1a 5B00     		lsls	r3, r3, #1
 2606 1d1c 1343     		orrs	r3, r3, r2
 2607 1d1e C7F8D436 		str	r3, [r7, #1748]
 2608 1d22 D7F8943A 		ldr	r3, [r7, #2708]
 2609 1d26 DA0F     		lsrs	r2, r3, #31
 2610 1d28 D7F8903A 		ldr	r3, [r7, #2704]
 2611 1d2c 5B00     		lsls	r3, r3, #1
 2612 1d2e 1343     		orrs	r3, r3, r2
 2613 1d30 C7F8D036 		str	r3, [r7, #1744]
 2614              		.loc 1 236 16 discriminator 3
 2615 1d34 07F52A63 		add	r3, r7, #2720
 2616 1d38 D3E90023 		ldrd	r2, [r3]
 2617 1d3c 07F5DA61 		add	r1, r7, #1744
 2618 1d40 D1E90001 		ldrd	r0, [r1]
 2619 1d44 8446     		mov	ip, r0
 2620 1d46 82EA0C0C 		eor	ip, r2, ip
 2621 1d4a C7F860C2 		str	ip, [r7, #608]
 2622 1d4e 4B40     		eors	r3, r3, r1
 2623 1d50 C7F86432 		str	r3, [r7, #612]
 2624 1d54 D7E99823 		ldrd	r2, [r7, #608]
 2625 1d58 07F52761 		add	r1, r7, #2672
 2626 1d5c C1E90023 		strd	r2, [r1]
 237:fips202.c     ****             Du = BCo^ROL(BCa, 1);
 2627              		.loc 1 237 22 discriminator 3
 2628 1d60 D7F8B03A 		ldr	r3, [r7, #2736]
 2629 1d64 DA0F     		lsrs	r2, r3, #31
 2630 1d66 D7F8B43A 		ldr	r3, [r7, #2740]
 2631 1d6a 5B00     		lsls	r3, r3, #1
 2632 1d6c 1343     		orrs	r3, r3, r2
 2633 1d6e C7F8CC36 		str	r3, [r7, #1740]
 2634 1d72 D7F8B43A 		ldr	r3, [r7, #2740]
 2635 1d76 DA0F     		lsrs	r2, r3, #31
 2636 1d78 D7F8B03A 		ldr	r3, [r7, #2736]
 2637 1d7c 5B00     		lsls	r3, r3, #1
 2638 1d7e 1343     		orrs	r3, r3, r2
 2639 1d80 C7F8C836 		str	r3, [r7, #1736]
 2640              		.loc 1 237 16 discriminator 3
 2641 1d84 07F69823 		addw	r3, r7, #2712
 2642 1d88 D3E90023 		ldrd	r2, [r3]
 2643 1d8c 07F5D961 		add	r1, r7, #1736
 2644 1d90 D1E90001 		ldrd	r0, [r1]
 2645 1d94 8446     		mov	ip, r0
 2646 1d96 82EA0C0C 		eor	ip, r2, ip
 2647 1d9a C7F858C2 		str	ip, [r7, #600]
 2648 1d9e 4B40     		eors	r3, r3, r1
 2649 1da0 C7F85C32 		str	r3, [r7, #604]
 2650 1da4 D7E99623 		ldrd	r2, [r7, #600]
 2651 1da8 07F66821 		addw	r1, r7, #2664
 2652 1dac C1E90023 		strd	r2, [r1]
 238:fips202.c     **** 
 239:fips202.c     ****             Eba ^= Da;
 2653              		.loc 1 239 17 discriminator 3
 2654 1db0 07F52663 		add	r3, r7, #2656
 2655 1db4 D3E90001 		ldrd	r0, [r3]
 2656 1db8 07F68823 		addw	r3, r7, #2696
 2657 1dbc D3E90023 		ldrd	r2, [r3]
 2658 1dc0 80EA020C 		eor	ip, r0, r2
 2659 1dc4 C7F850C2 		str	ip, [r7, #592]
 2660 1dc8 4B40     		eors	r3, r3, r1
 2661 1dca C7F85432 		str	r3, [r7, #596]
 2662 1dce D7E99423 		ldrd	r2, [r7, #592]
 2663 1dd2 07F52661 		add	r1, r7, #2656
 2664 1dd6 C1E90023 		strd	r2, [r1]
 240:fips202.c     ****             BCa = Eba;
 2665              		.loc 1 240 17 discriminator 3
 2666 1dda 07F52663 		add	r3, r7, #2656
 2667 1dde D3E90023 		ldrd	r2, [r3]
 2668 1de2 07F52B61 		add	r1, r7, #2736
 2669 1de6 C1E90023 		strd	r2, [r1]
 241:fips202.c     ****             Ege ^= De;
 2670              		.loc 1 241 17 discriminator 3
 2671 1dea 07F52363 		add	r3, r7, #2608
 2672 1dee D3E90001 		ldrd	r0, [r3]
 2673 1df2 07F52863 		add	r3, r7, #2688
 2674 1df6 D3E90023 		ldrd	r2, [r3]
 2675 1dfa 80EA020C 		eor	ip, r0, r2
 2676 1dfe C7F848C2 		str	ip, [r7, #584]
 2677 1e02 4B40     		eors	r3, r3, r1
 2678 1e04 C7F84C32 		str	r3, [r7, #588]
 2679 1e08 D7E99223 		ldrd	r2, [r7, #584]
 2680 1e0c 07F52361 		add	r1, r7, #2608
 2681 1e10 C1E90023 		strd	r2, [r1]
 242:fips202.c     ****             BCe = ROL(Ege, 44);
 2682              		.loc 1 242 17 discriminator 3
 2683 1e14 07F68833 		addw	r3, r7, #2952
 2684 1e18 A3F5AA70 		sub	r0, r3, #340
 2685 1e1c 07F68833 		addw	r3, r7, #2952
 2686 1e20 A3F5AC71 		sub	r1, r3, #344
 2687 1e24 0368     		ldr	r3, [r0]
 2688 1e26 1A03     		lsls	r2, r3, #12
 2689 1e28 0B68     		ldr	r3, [r1]
 2690 1e2a 1B0D     		lsrs	r3, r3, #20
 2691 1e2c 1343     		orrs	r3, r3, r2
 2692 1e2e C7F84032 		str	r3, [r7, #576]
 2693 1e32 0B68     		ldr	r3, [r1]
 2694 1e34 1A03     		lsls	r2, r3, #12
 2695 1e36 0368     		ldr	r3, [r0]
 2696 1e38 1B0D     		lsrs	r3, r3, #20
 2697 1e3a 1343     		orrs	r3, r3, r2
 2698 1e3c C7F84432 		str	r3, [r7, #580]
 2699 1e40 D7E99023 		ldrd	r2, [r7, #576]
 2700 1e44 07F6A821 		addw	r1, r7, #2728
 2701 1e48 C1E90023 		strd	r2, [r1]
 243:fips202.c     ****             Eki ^= Di;
 2702              		.loc 1 243 17 discriminator 3
 2703 1e4c 07F52063 		add	r3, r7, #2560
 2704 1e50 D3E90001 		ldrd	r0, [r3]
 2705 1e54 07F67823 		addw	r3, r7, #2680
 2706 1e58 D3E90023 		ldrd	r2, [r3]
 2707 1e5c 80EA020C 		eor	ip, r0, r2
 2708 1e60 C7F838C2 		str	ip, [r7, #568]
 2709 1e64 4B40     		eors	r3, r3, r1
 2710 1e66 C7F83C32 		str	r3, [r7, #572]
 2711 1e6a D7E98E23 		ldrd	r2, [r7, #568]
 2712 1e6e 07F52061 		add	r1, r7, #2560
 2713 1e72 C1E90023 		strd	r2, [r1]
 244:fips202.c     ****             BCi = ROL(Eki, 43);
 2714              		.loc 1 244 17 discriminator 3
 2715 1e76 07F68833 		addw	r3, r7, #2952
 2716 1e7a A3F5C270 		sub	r0, r3, #388
 2717 1e7e 07F68833 		addw	r3, r7, #2952
 2718 1e82 A3F5C471 		sub	r1, r3, #392
 2719 1e86 0368     		ldr	r3, [r0]
 2720 1e88 DA02     		lsls	r2, r3, #11
 2721 1e8a 0B68     		ldr	r3, [r1]
 2722 1e8c 5B0D     		lsrs	r3, r3, #21
 2723 1e8e 1343     		orrs	r3, r3, r2
 2724 1e90 C7F83032 		str	r3, [r7, #560]
 2725 1e94 0B68     		ldr	r3, [r1]
 2726 1e96 DA02     		lsls	r2, r3, #11
 2727 1e98 0368     		ldr	r3, [r0]
 2728 1e9a 5B0D     		lsrs	r3, r3, #21
 2729 1e9c 1343     		orrs	r3, r3, r2
 2730 1e9e C7F83432 		str	r3, [r7, #564]
 2731 1ea2 D7E98C23 		ldrd	r2, [r7, #560]
 2732 1ea6 07F52A61 		add	r1, r7, #2720
 2733 1eaa C1E90023 		strd	r2, [r1]
 245:fips202.c     ****             Emo ^= Do;
 2734              		.loc 1 245 17 discriminator 3
 2735 1eae 07F51D63 		add	r3, r7, #2512
 2736 1eb2 D3E90001 		ldrd	r0, [r3]
 2737 1eb6 07F52763 		add	r3, r7, #2672
 2738 1eba D3E90023 		ldrd	r2, [r3]
 2739 1ebe 80EA020C 		eor	ip, r0, r2
 2740 1ec2 C7F828C2 		str	ip, [r7, #552]
 2741 1ec6 4B40     		eors	r3, r3, r1
 2742 1ec8 C7F82C32 		str	r3, [r7, #556]
 2743 1ecc D7E98A23 		ldrd	r2, [r7, #552]
 2744 1ed0 07F51D61 		add	r1, r7, #2512
 2745 1ed4 C1E90023 		strd	r2, [r1]
 246:fips202.c     ****             BCo = ROL(Emo, 21);
 2746              		.loc 1 246 17 discriminator 3
 2747 1ed8 07F68833 		addw	r3, r7, #2952
 2748 1edc A3F5DC70 		sub	r0, r3, #440
 2749 1ee0 07F68833 		addw	r3, r7, #2952
 2750 1ee4 A3F5DA71 		sub	r1, r3, #436
 2751 1ee8 0368     		ldr	r3, [r0]
 2752 1eea DA0A     		lsrs	r2, r3, #11
 2753 1eec 0B68     		ldr	r3, [r1]
 2754 1eee 5B05     		lsls	r3, r3, #21
 2755 1ef0 1343     		orrs	r3, r3, r2
 2756 1ef2 C7F82432 		str	r3, [r7, #548]
 2757 1ef6 0B68     		ldr	r3, [r1]
 2758 1ef8 DA0A     		lsrs	r2, r3, #11
 2759 1efa 0368     		ldr	r3, [r0]
 2760 1efc 5B05     		lsls	r3, r3, #21
 2761 1efe 1343     		orrs	r3, r3, r2
 2762 1f00 C7F82032 		str	r3, [r7, #544]
 2763 1f04 D7E98823 		ldrd	r2, [r7, #544]
 2764 1f08 07F69821 		addw	r1, r7, #2712
 2765 1f0c C1E90023 		strd	r2, [r1]
 247:fips202.c     ****             Esu ^= Du;
 2766              		.loc 1 247 17 discriminator 3
 2767 1f10 07F51A63 		add	r3, r7, #2464
 2768 1f14 D3E90001 		ldrd	r0, [r3]
 2769 1f18 07F66823 		addw	r3, r7, #2664
 2770 1f1c D3E90023 		ldrd	r2, [r3]
 2771 1f20 80EA020C 		eor	ip, r0, r2
 2772 1f24 C7F818C2 		str	ip, [r7, #536]
 2773 1f28 4B40     		eors	r3, r3, r1
 2774 1f2a C7F81C32 		str	r3, [r7, #540]
 2775 1f2e D7E98623 		ldrd	r2, [r7, #536]
 2776 1f32 07F51A61 		add	r1, r7, #2464
 2777 1f36 C1E90023 		strd	r2, [r1]
 248:fips202.c     ****             BCu = ROL(Esu, 14);
 2778              		.loc 1 248 17 discriminator 3
 2779 1f3a 07F68833 		addw	r3, r7, #2952
 2780 1f3e A3F5F470 		sub	r0, r3, #488
 2781 1f42 07F68833 		addw	r3, r7, #2952
 2782 1f46 A3F5F271 		sub	r1, r3, #484
 2783 1f4a 0368     		ldr	r3, [r0]
 2784 1f4c 9A0C     		lsrs	r2, r3, #18
 2785 1f4e 0B68     		ldr	r3, [r1]
 2786 1f50 9B03     		lsls	r3, r3, #14
 2787 1f52 1343     		orrs	r3, r3, r2
 2788 1f54 C7F81432 		str	r3, [r7, #532]
 2789 1f58 0B68     		ldr	r3, [r1]
 2790 1f5a 9A0C     		lsrs	r2, r3, #18
 2791 1f5c 0368     		ldr	r3, [r0]
 2792 1f5e 9B03     		lsls	r3, r3, #14
 2793 1f60 1343     		orrs	r3, r3, r2
 2794 1f62 C7F81032 		str	r3, [r7, #528]
 2795 1f66 D7E98423 		ldrd	r2, [r7, #528]
 2796 1f6a 07F52961 		add	r1, r7, #2704
 2797 1f6e C1E90023 		strd	r2, [r1]
 249:fips202.c     ****             Aba =   BCa ^((~BCe)&  BCi );
 2798              		.loc 1 249 28 discriminator 3
 2799 1f72 07F6A823 		addw	r3, r7, #2728
 2800 1f76 D3E90023 		ldrd	r2, [r3]
 2801 1f7a D143     		mvns	r1, r2
 2802 1f7c C7F8C016 		str	r1, [r7, #1728]
 2803 1f80 DB43     		mvns	r3, r3
 2804 1f82 C7F8C436 		str	r3, [r7, #1732]
 2805              		.loc 1 249 33 discriminator 3
 2806 1f86 07F52A63 		add	r3, r7, #2720
 2807 1f8a D3E90023 		ldrd	r2, [r3]
 2808 1f8e 07F5D861 		add	r1, r7, #1728
 2809 1f92 D1E90001 		ldrd	r0, [r1]
 2810 1f96 8446     		mov	ip, r0
 2811 1f98 0CEA020C 		and	ip, ip, r2
 2812 1f9c C7F8B8C6 		str	ip, [r7, #1720]
 2813 1fa0 0B40     		ands	r3, r3, r1
 2814 1fa2 C7F8BC36 		str	r3, [r7, #1724]
 2815              		.loc 1 249 17 discriminator 3
 2816 1fa6 07F52B63 		add	r3, r7, #2736
 2817 1faa D3E90023 		ldrd	r2, [r3]
 2818 1fae 07F5D761 		add	r1, r7, #1720
 2819 1fb2 D1E90001 		ldrd	r0, [r1]
 2820 1fb6 8446     		mov	ip, r0
 2821 1fb8 82EA0C0C 		eor	ip, r2, ip
 2822 1fbc C7F808C2 		str	ip, [r7, #520]
 2823 1fc0 4B40     		eors	r3, r3, r1
 2824 1fc2 C7F80C32 		str	r3, [r7, #524]
 2825 1fc6 D7E98223 		ldrd	r2, [r7, #520]
 2826 1fca 07F67831 		addw	r1, r7, #2936
 2827 1fce C1E90023 		strd	r2, [r1]
 250:fips202.c     ****             Aba ^= (uint64_t)KeccakF_RoundConstants[round+1];
 2828              		.loc 1 250 58 discriminator 3
 2829 1fd2 D7F8843B 		ldr	r3, [r7, #2948]
 2830 1fd6 0133     		adds	r3, r3, #1
 2831              		.loc 1 250 52 discriminator 3
 2832 1fd8 C14A     		ldr	r2, .L14
 2833 1fda DB00     		lsls	r3, r3, #3
 2834 1fdc 1344     		add	r3, r3, r2
 2835 1fde D3E90001 		ldrd	r0, [r3]
 2836              		.loc 1 250 17 discriminator 3
 2837 1fe2 07F67833 		addw	r3, r7, #2936
 2838 1fe6 D3E90023 		ldrd	r2, [r3]
 2839 1fea 82EA000C 		eor	ip, r2, r0
 2840 1fee C7F800C2 		str	ip, [r7, #512]
 2841 1ff2 4B40     		eors	r3, r3, r1
 2842 1ff4 C7F80432 		str	r3, [r7, #516]
 2843 1ff8 D7E98023 		ldrd	r2, [r7, #512]
 2844 1ffc 07F67831 		addw	r1, r7, #2936
 2845 2000 C1E90023 		strd	r2, [r1]
 251:fips202.c     ****             Abe =   BCe ^((~BCi)&  BCo );
 2846              		.loc 1 251 28 discriminator 3
 2847 2004 07F52A63 		add	r3, r7, #2720
 2848 2008 D3E90023 		ldrd	r2, [r3]
 2849 200c D143     		mvns	r1, r2
 2850 200e C7F8B016 		str	r1, [r7, #1712]
 2851 2012 DB43     		mvns	r3, r3
 2852 2014 C7F8B436 		str	r3, [r7, #1716]
 2853              		.loc 1 251 33 discriminator 3
 2854 2018 07F69823 		addw	r3, r7, #2712
 2855 201c D3E90023 		ldrd	r2, [r3]
 2856 2020 07F5D661 		add	r1, r7, #1712
 2857 2024 D1E90001 		ldrd	r0, [r1]
 2858 2028 8446     		mov	ip, r0
 2859 202a 0CEA020C 		and	ip, ip, r2
 2860 202e C7F8A8C6 		str	ip, [r7, #1704]
 2861 2032 0B40     		ands	r3, r3, r1
 2862 2034 C7F8AC36 		str	r3, [r7, #1708]
 2863              		.loc 1 251 17 discriminator 3
 2864 2038 07F6A823 		addw	r3, r7, #2728
 2865 203c D3E90023 		ldrd	r2, [r3]
 2866 2040 07F5D561 		add	r1, r7, #1704
 2867 2044 D1E90001 		ldrd	r0, [r1]
 2868 2048 8446     		mov	ip, r0
 2869 204a 82EA0C0C 		eor	ip, r2, ip
 2870 204e C7F8F8C1 		str	ip, [r7, #504]
 2871 2052 4B40     		eors	r3, r3, r1
 2872 2054 C7F8FC31 		str	r3, [r7, #508]
 2873 2058 D7E97E23 		ldrd	r2, [r7, #504]
 2874 205c 07F53761 		add	r1, r7, #2928
 2875 2060 C1E90023 		strd	r2, [r1]
 252:fips202.c     ****             Abi =   BCi ^((~BCo)&  BCu );
 2876              		.loc 1 252 28 discriminator 3
 2877 2064 07F69823 		addw	r3, r7, #2712
 2878 2068 D3E90023 		ldrd	r2, [r3]
 2879 206c D143     		mvns	r1, r2
 2880 206e C7F8A016 		str	r1, [r7, #1696]
 2881 2072 DB43     		mvns	r3, r3
 2882 2074 C7F8A436 		str	r3, [r7, #1700]
 2883              		.loc 1 252 33 discriminator 3
 2884 2078 07F52963 		add	r3, r7, #2704
 2885 207c D3E90023 		ldrd	r2, [r3]
 2886 2080 07F5D461 		add	r1, r7, #1696
 2887 2084 D1E90001 		ldrd	r0, [r1]
 2888 2088 8446     		mov	ip, r0
 2889 208a 0CEA020C 		and	ip, ip, r2
 2890 208e C7F898C6 		str	ip, [r7, #1688]
 2891 2092 0B40     		ands	r3, r3, r1
 2892 2094 C7F89C36 		str	r3, [r7, #1692]
 2893              		.loc 1 252 17 discriminator 3
 2894 2098 07F52A63 		add	r3, r7, #2720
 2895 209c D3E90023 		ldrd	r2, [r3]
 2896 20a0 07F5D361 		add	r1, r7, #1688
 2897 20a4 D1E90001 		ldrd	r0, [r1]
 2898 20a8 8446     		mov	ip, r0
 2899 20aa 82EA0C0C 		eor	ip, r2, ip
 2900 20ae C7F8F0C1 		str	ip, [r7, #496]
 2901 20b2 4B40     		eors	r3, r3, r1
 2902 20b4 C7F8F431 		str	r3, [r7, #500]
 2903 20b8 D7E97C23 		ldrd	r2, [r7, #496]
 2904 20bc 07F66831 		addw	r1, r7, #2920
 2905 20c0 C1E90023 		strd	r2, [r1]
 253:fips202.c     ****             Abo =   BCo ^((~BCu)&  BCa );
 2906              		.loc 1 253 28 discriminator 3
 2907 20c4 07F52963 		add	r3, r7, #2704
 2908 20c8 D3E90023 		ldrd	r2, [r3]
 2909 20cc D143     		mvns	r1, r2
 2910 20ce C7F89016 		str	r1, [r7, #1680]
 2911 20d2 DB43     		mvns	r3, r3
 2912 20d4 C7F89436 		str	r3, [r7, #1684]
 2913              		.loc 1 253 33 discriminator 3
 2914 20d8 07F52B63 		add	r3, r7, #2736
 2915 20dc D3E90023 		ldrd	r2, [r3]
 2916 20e0 07F5D261 		add	r1, r7, #1680
 2917 20e4 D1E90001 		ldrd	r0, [r1]
 2918 20e8 8446     		mov	ip, r0
 2919 20ea 0CEA020C 		and	ip, ip, r2
 2920 20ee C7F888C6 		str	ip, [r7, #1672]
 2921 20f2 0B40     		ands	r3, r3, r1
 2922 20f4 C7F88C36 		str	r3, [r7, #1676]
 2923              		.loc 1 253 17 discriminator 3
 2924 20f8 07F69823 		addw	r3, r7, #2712
 2925 20fc D3E90023 		ldrd	r2, [r3]
 2926 2100 07F5D161 		add	r1, r7, #1672
 2927 2104 D1E90001 		ldrd	r0, [r1]
 2928 2108 8446     		mov	ip, r0
 2929 210a 82EA0C0C 		eor	ip, r2, ip
 2930 210e C7F8E8C1 		str	ip, [r7, #488]
 2931 2112 4B40     		eors	r3, r3, r1
 2932 2114 C7F8EC31 		str	r3, [r7, #492]
 2933 2118 D7E97A23 		ldrd	r2, [r7, #488]
 2934 211c 07F53661 		add	r1, r7, #2912
 2935 2120 C1E90023 		strd	r2, [r1]
 254:fips202.c     ****             Abu =   BCu ^((~BCa)&  BCe );
 2936              		.loc 1 254 28 discriminator 3
 2937 2124 07F52B63 		add	r3, r7, #2736
 2938 2128 D3E90023 		ldrd	r2, [r3]
 2939 212c D143     		mvns	r1, r2
 2940 212e C7F88016 		str	r1, [r7, #1664]
 2941 2132 DB43     		mvns	r3, r3
 2942 2134 C7F88436 		str	r3, [r7, #1668]
 2943              		.loc 1 254 33 discriminator 3
 2944 2138 07F6A823 		addw	r3, r7, #2728
 2945 213c D3E90023 		ldrd	r2, [r3]
 2946 2140 07F5D061 		add	r1, r7, #1664
 2947 2144 D1E90001 		ldrd	r0, [r1]
 2948 2148 8446     		mov	ip, r0
 2949 214a 0CEA020C 		and	ip, ip, r2
 2950 214e C7F878C6 		str	ip, [r7, #1656]
 2951 2152 0B40     		ands	r3, r3, r1
 2952 2154 C7F87C36 		str	r3, [r7, #1660]
 2953              		.loc 1 254 17 discriminator 3
 2954 2158 07F52963 		add	r3, r7, #2704
 2955 215c D3E90023 		ldrd	r2, [r3]
 2956 2160 07F5CF61 		add	r1, r7, #1656
 2957 2164 D1E90001 		ldrd	r0, [r1]
 2958 2168 8446     		mov	ip, r0
 2959 216a 82EA0C0C 		eor	ip, r2, ip
 2960 216e C7F8E0C1 		str	ip, [r7, #480]
 2961 2172 4B40     		eors	r3, r3, r1
 2962 2174 C7F8E431 		str	r3, [r7, #484]
 2963 2178 D7E97823 		ldrd	r2, [r7, #480]
 2964 217c 07F65831 		addw	r1, r7, #2904
 2965 2180 C1E90023 		strd	r2, [r1]
 255:fips202.c     **** 
 256:fips202.c     ****             Ebo ^= Do;
 2966              		.loc 1 256 17 discriminator 3
 2967 2184 07F64823 		addw	r3, r7, #2632
 2968 2188 D3E90001 		ldrd	r0, [r3]
 2969 218c 07F52763 		add	r3, r7, #2672
 2970 2190 D3E90023 		ldrd	r2, [r3]
 2971 2194 80EA020C 		eor	ip, r0, r2
 2972 2198 C7F8D8C1 		str	ip, [r7, #472]
 2973 219c 4B40     		eors	r3, r3, r1
 2974 219e C7F8DC31 		str	r3, [r7, #476]
 2975 21a2 D7E97623 		ldrd	r2, [r7, #472]
 2976 21a6 07F64821 		addw	r1, r7, #2632
 2977 21aa C1E90023 		strd	r2, [r1]
 257:fips202.c     ****             BCa = ROL(Ebo, 28);
 2978              		.loc 1 257 17 discriminator 3
 2979 21ae 07F68833 		addw	r3, r7, #2952
 2980 21b2 A3F5A070 		sub	r0, r3, #320
 2981 21b6 07F68833 		addw	r3, r7, #2952
 2982 21ba A3F59E71 		sub	r1, r3, #316
 2983 21be 0368     		ldr	r3, [r0]
 2984 21c0 1A09     		lsrs	r2, r3, #4
 2985 21c2 0B68     		ldr	r3, [r1]
 2986 21c4 1B07     		lsls	r3, r3, #28
 2987 21c6 1343     		orrs	r3, r3, r2
 2988 21c8 C7F8D431 		str	r3, [r7, #468]
 2989 21cc 0B68     		ldr	r3, [r1]
 2990 21ce 1A09     		lsrs	r2, r3, #4
 2991 21d0 0368     		ldr	r3, [r0]
 2992 21d2 1B07     		lsls	r3, r3, #28
 2993 21d4 1343     		orrs	r3, r3, r2
 2994 21d6 C7F8D031 		str	r3, [r7, #464]
 2995 21da D7E97423 		ldrd	r2, [r7, #464]
 2996 21de 07F52B61 		add	r1, r7, #2736
 2997 21e2 C1E90023 		strd	r2, [r1]
 258:fips202.c     ****             Egu ^= Du;
 2998              		.loc 1 258 17 discriminator 3
 2999 21e6 07F61823 		addw	r3, r7, #2584
 3000 21ea D3E90001 		ldrd	r0, [r3]
 3001 21ee 07F66823 		addw	r3, r7, #2664
 3002 21f2 D3E90023 		ldrd	r2, [r3]
 3003 21f6 80EA020C 		eor	ip, r0, r2
 3004 21fa C7F8C8C1 		str	ip, [r7, #456]
 3005 21fe 4B40     		eors	r3, r3, r1
 3006 2200 C7F8CC31 		str	r3, [r7, #460]
 3007 2204 D7E97223 		ldrd	r2, [r7, #456]
 3008 2208 07F61821 		addw	r1, r7, #2584
 3009 220c C1E90023 		strd	r2, [r1]
 259:fips202.c     ****             BCe = ROL(Egu, 20);
 3010              		.loc 1 259 17 discriminator 3
 3011 2210 07F68833 		addw	r3, r7, #2952
 3012 2214 A3F5B870 		sub	r0, r3, #368
 3013 2218 07F68833 		addw	r3, r7, #2952
 3014 221c A3F5B671 		sub	r1, r3, #364
 3015 2220 0368     		ldr	r3, [r0]
 3016 2222 1A0B     		lsrs	r2, r3, #12
 3017 2224 0B68     		ldr	r3, [r1]
 3018 2226 1B05     		lsls	r3, r3, #20
 3019 2228 1343     		orrs	r3, r3, r2
 3020 222a C7F8C431 		str	r3, [r7, #452]
 3021 222e 0B68     		ldr	r3, [r1]
 3022 2230 1A0B     		lsrs	r2, r3, #12
 3023 2232 0368     		ldr	r3, [r0]
 3024 2234 1B05     		lsls	r3, r3, #20
 3025 2236 1343     		orrs	r3, r3, r2
 3026 2238 C7F8C031 		str	r3, [r7, #448]
 3027 223c D7E97023 		ldrd	r2, [r7, #448]
 3028 2240 07F6A821 		addw	r1, r7, #2728
 3029 2244 C1E90023 		strd	r2, [r1]
 260:fips202.c     ****             Eka ^= Da;
 3030              		.loc 1 260 17 discriminator 3
 3031 2248 07F52163 		add	r3, r7, #2576
 3032 224c D3E90001 		ldrd	r0, [r3]
 3033 2250 07F68823 		addw	r3, r7, #2696
 3034 2254 D3E90023 		ldrd	r2, [r3]
 3035 2258 80EA020C 		eor	ip, r0, r2
 3036 225c C7F8B8C1 		str	ip, [r7, #440]
 3037 2260 4B40     		eors	r3, r3, r1
 3038 2262 C7F8BC31 		str	r3, [r7, #444]
 3039 2266 D7E96E23 		ldrd	r2, [r7, #440]
 3040 226a 07F52161 		add	r1, r7, #2576
 3041 226e C1E90023 		strd	r2, [r1]
 261:fips202.c     ****             BCi = ROL(Eka, 3);
 3042              		.loc 1 261 17 discriminator 3
 3043 2272 07F68833 		addw	r3, r7, #2952
 3044 2276 A3F5BC70 		sub	r0, r3, #376
 3045 227a 07F68833 		addw	r3, r7, #2952
 3046 227e A3F5BA71 		sub	r1, r3, #372
 3047 2282 0368     		ldr	r3, [r0]
 3048 2284 5A0F     		lsrs	r2, r3, #29
 3049 2286 0B68     		ldr	r3, [r1]
 3050 2288 DB00     		lsls	r3, r3, #3
 3051 228a 1343     		orrs	r3, r3, r2
 3052 228c C7F8B431 		str	r3, [r7, #436]
 3053 2290 0B68     		ldr	r3, [r1]
 3054 2292 5A0F     		lsrs	r2, r3, #29
 3055 2294 0368     		ldr	r3, [r0]
 3056 2296 DB00     		lsls	r3, r3, #3
 3057 2298 1343     		orrs	r3, r3, r2
 3058 229a C7F8B031 		str	r3, [r7, #432]
 3059 229e D7E96C23 		ldrd	r2, [r7, #432]
 3060 22a2 07F52A61 		add	r1, r7, #2720
 3061 22a6 C1E90023 		strd	r2, [r1]
 262:fips202.c     ****             Eme ^= De;
 3062              		.loc 1 262 17 discriminator 3
 3063 22aa 07F51E63 		add	r3, r7, #2528
 3064 22ae D3E90001 		ldrd	r0, [r3]
 3065 22b2 07F52863 		add	r3, r7, #2688
 3066 22b6 D3E90023 		ldrd	r2, [r3]
 3067 22ba 80EA020C 		eor	ip, r0, r2
 3068 22be C7F8A8C1 		str	ip, [r7, #424]
 3069 22c2 4B40     		eors	r3, r3, r1
 3070 22c4 C7F8AC31 		str	r3, [r7, #428]
 3071 22c8 D7E96A23 		ldrd	r2, [r7, #424]
 3072 22cc 07F51E61 		add	r1, r7, #2528
 3073 22d0 C1E90023 		strd	r2, [r1]
 263:fips202.c     ****             BCo = ROL(Eme, 45);
 3074              		.loc 1 263 17 discriminator 3
 3075 22d4 07F68833 		addw	r3, r7, #2952
 3076 22d8 A3F5D270 		sub	r0, r3, #420
 3077 22dc 02E0     		b	.L15
 3078              	.L16:
 3079 22de 00BF     		.align	2
 3080              	.L14:
 3081 22e0 00000000 		.word	KeccakF_RoundConstants
 3082              	.L15:
 3083 22e4 07F68833 		addw	r3, r7, #2952
 3084 22e8 A3F5D471 		sub	r1, r3, #424
 3085 22ec 0368     		ldr	r3, [r0]
 3086 22ee 5A03     		lsls	r2, r3, #13
 3087 22f0 0B68     		ldr	r3, [r1]
 3088 22f2 DB0C     		lsrs	r3, r3, #19
 3089 22f4 1343     		orrs	r3, r3, r2
 3090 22f6 C7F8A031 		str	r3, [r7, #416]
 3091 22fa 0B68     		ldr	r3, [r1]
 3092 22fc 5A03     		lsls	r2, r3, #13
 3093 22fe 0368     		ldr	r3, [r0]
 3094 2300 DB0C     		lsrs	r3, r3, #19
 3095 2302 1343     		orrs	r3, r3, r2
 3096 2304 C7F8A431 		str	r3, [r7, #420]
 3097 2308 D7E96823 		ldrd	r2, [r7, #416]
 3098 230c 07F69821 		addw	r1, r7, #2712
 3099 2310 C1E90023 		strd	r2, [r1]
 264:fips202.c     ****             Esi ^= Di;
 3100              		.loc 1 264 17 discriminator 3
 3101 2314 07F51B63 		add	r3, r7, #2480
 3102 2318 D3E90001 		ldrd	r0, [r3]
 3103 231c 07F67823 		addw	r3, r7, #2680
 3104 2320 D3E90023 		ldrd	r2, [r3]
 3105 2324 80EA020C 		eor	ip, r0, r2
 3106 2328 C7F898C1 		str	ip, [r7, #408]
 3107 232c 4B40     		eors	r3, r3, r1
 3108 232e C7F89C31 		str	r3, [r7, #412]
 3109 2332 D7E96623 		ldrd	r2, [r7, #408]
 3110 2336 07F51B61 		add	r1, r7, #2480
 3111 233a C1E90023 		strd	r2, [r1]
 265:fips202.c     ****             BCu = ROL(Esi, 61);
 3112              		.loc 1 265 17 discriminator 3
 3113 233e 07F68833 		addw	r3, r7, #2952
 3114 2342 A3F5EA70 		sub	r0, r3, #468
 3115 2346 07F68833 		addw	r3, r7, #2952
 3116 234a A3F5EC71 		sub	r1, r3, #472
 3117 234e 0368     		ldr	r3, [r0]
 3118 2350 5A07     		lsls	r2, r3, #29
 3119 2352 0B68     		ldr	r3, [r1]
 3120 2354 DB08     		lsrs	r3, r3, #3
 3121 2356 1343     		orrs	r3, r3, r2
 3122 2358 C7F89031 		str	r3, [r7, #400]
 3123 235c 0B68     		ldr	r3, [r1]
 3124 235e 5A07     		lsls	r2, r3, #29
 3125 2360 0368     		ldr	r3, [r0]
 3126 2362 DB08     		lsrs	r3, r3, #3
 3127 2364 1343     		orrs	r3, r3, r2
 3128 2366 C7F89431 		str	r3, [r7, #404]
 3129 236a D7E96423 		ldrd	r2, [r7, #400]
 3130 236e 07F52961 		add	r1, r7, #2704
 3131 2372 C1E90023 		strd	r2, [r1]
 266:fips202.c     ****             Aga =   BCa ^((~BCe)&  BCi );
 3132              		.loc 1 266 28 discriminator 3
 3133 2376 07F6A823 		addw	r3, r7, #2728
 3134 237a D3E90023 		ldrd	r2, [r3]
 3135 237e D143     		mvns	r1, r2
 3136 2380 C7F87016 		str	r1, [r7, #1648]
 3137 2384 DB43     		mvns	r3, r3
 3138 2386 C7F87436 		str	r3, [r7, #1652]
 3139              		.loc 1 266 33 discriminator 3
 3140 238a 07F52A63 		add	r3, r7, #2720
 3141 238e D3E90023 		ldrd	r2, [r3]
 3142 2392 07F5CE61 		add	r1, r7, #1648
 3143 2396 D1E90001 		ldrd	r0, [r1]
 3144 239a 8446     		mov	ip, r0
 3145 239c 0CEA020C 		and	ip, ip, r2
 3146 23a0 C7F868C6 		str	ip, [r7, #1640]
 3147 23a4 0B40     		ands	r3, r3, r1
 3148 23a6 C7F86C36 		str	r3, [r7, #1644]
 3149              		.loc 1 266 17 discriminator 3
 3150 23aa 07F52B63 		add	r3, r7, #2736
 3151 23ae D3E90023 		ldrd	r2, [r3]
 3152 23b2 07F5CD61 		add	r1, r7, #1640
 3153 23b6 D1E90001 		ldrd	r0, [r1]
 3154 23ba 8446     		mov	ip, r0
 3155 23bc 82EA0C0C 		eor	ip, r2, ip
 3156 23c0 C7F888C1 		str	ip, [r7, #392]
 3157 23c4 4B40     		eors	r3, r3, r1
 3158 23c6 C7F88C31 		str	r3, [r7, #396]
 3159 23ca D7E96223 		ldrd	r2, [r7, #392]
 3160 23ce 07F53561 		add	r1, r7, #2896
 3161 23d2 C1E90023 		strd	r2, [r1]
 267:fips202.c     ****             Age =   BCe ^((~BCi)&  BCo );
 3162              		.loc 1 267 28 discriminator 3
 3163 23d6 07F52A63 		add	r3, r7, #2720
 3164 23da D3E90023 		ldrd	r2, [r3]
 3165 23de D143     		mvns	r1, r2
 3166 23e0 C7F86016 		str	r1, [r7, #1632]
 3167 23e4 DB43     		mvns	r3, r3
 3168 23e6 C7F86436 		str	r3, [r7, #1636]
 3169              		.loc 1 267 33 discriminator 3
 3170 23ea 07F69823 		addw	r3, r7, #2712
 3171 23ee D3E90023 		ldrd	r2, [r3]
 3172 23f2 07F5CC61 		add	r1, r7, #1632
 3173 23f6 D1E90001 		ldrd	r0, [r1]
 3174 23fa 8446     		mov	ip, r0
 3175 23fc 0CEA020C 		and	ip, ip, r2
 3176 2400 C7F858C6 		str	ip, [r7, #1624]
 3177 2404 0B40     		ands	r3, r3, r1
 3178 2406 C7F85C36 		str	r3, [r7, #1628]
 3179              		.loc 1 267 17 discriminator 3
 3180 240a 07F6A823 		addw	r3, r7, #2728
 3181 240e D3E90023 		ldrd	r2, [r3]
 3182 2412 07F5CB61 		add	r1, r7, #1624
 3183 2416 D1E90001 		ldrd	r0, [r1]
 3184 241a 8446     		mov	ip, r0
 3185 241c 82EA0C0C 		eor	ip, r2, ip
 3186 2420 C7F880C1 		str	ip, [r7, #384]
 3187 2424 4B40     		eors	r3, r3, r1
 3188 2426 C7F88431 		str	r3, [r7, #388]
 3189 242a D7E96023 		ldrd	r2, [r7, #384]
 3190 242e 07F64831 		addw	r1, r7, #2888
 3191 2432 C1E90023 		strd	r2, [r1]
 268:fips202.c     ****             Agi =   BCi ^((~BCo)&  BCu );
 3192              		.loc 1 268 28 discriminator 3
 3193 2436 07F69823 		addw	r3, r7, #2712
 3194 243a D3E90023 		ldrd	r2, [r3]
 3195 243e D143     		mvns	r1, r2
 3196 2440 C7F85016 		str	r1, [r7, #1616]
 3197 2444 DB43     		mvns	r3, r3
 3198 2446 C7F85436 		str	r3, [r7, #1620]
 3199              		.loc 1 268 33 discriminator 3
 3200 244a 07F52963 		add	r3, r7, #2704
 3201 244e D3E90023 		ldrd	r2, [r3]
 3202 2452 07F5CA61 		add	r1, r7, #1616
 3203 2456 D1E90001 		ldrd	r0, [r1]
 3204 245a 8446     		mov	ip, r0
 3205 245c 0CEA020C 		and	ip, ip, r2
 3206 2460 C7F848C6 		str	ip, [r7, #1608]
 3207 2464 0B40     		ands	r3, r3, r1
 3208 2466 C7F84C36 		str	r3, [r7, #1612]
 3209              		.loc 1 268 17 discriminator 3
 3210 246a 07F52A63 		add	r3, r7, #2720
 3211 246e D3E90023 		ldrd	r2, [r3]
 3212 2472 07F5C961 		add	r1, r7, #1608
 3213 2476 D1E90001 		ldrd	r0, [r1]
 3214 247a 8446     		mov	ip, r0
 3215 247c 82EA0C0C 		eor	ip, r2, ip
 3216 2480 C7F878C1 		str	ip, [r7, #376]
 3217 2484 4B40     		eors	r3, r3, r1
 3218 2486 C7F87C31 		str	r3, [r7, #380]
 3219 248a D7E95E23 		ldrd	r2, [r7, #376]
 3220 248e 07F53461 		add	r1, r7, #2880
 3221 2492 C1E90023 		strd	r2, [r1]
 269:fips202.c     ****             Ago =   BCo ^((~BCu)&  BCa );
 3222              		.loc 1 269 28 discriminator 3
 3223 2496 07F52963 		add	r3, r7, #2704
 3224 249a D3E90023 		ldrd	r2, [r3]
 3225 249e D143     		mvns	r1, r2
 3226 24a0 C7F84016 		str	r1, [r7, #1600]
 3227 24a4 DB43     		mvns	r3, r3
 3228 24a6 C7F84436 		str	r3, [r7, #1604]
 3229              		.loc 1 269 33 discriminator 3
 3230 24aa 07F52B63 		add	r3, r7, #2736
 3231 24ae D3E90023 		ldrd	r2, [r3]
 3232 24b2 07F5C861 		add	r1, r7, #1600
 3233 24b6 D1E90001 		ldrd	r0, [r1]
 3234 24ba 8446     		mov	ip, r0
 3235 24bc 0CEA020C 		and	ip, ip, r2
 3236 24c0 C7F838C6 		str	ip, [r7, #1592]
 3237 24c4 0B40     		ands	r3, r3, r1
 3238 24c6 C7F83C36 		str	r3, [r7, #1596]
 3239              		.loc 1 269 17 discriminator 3
 3240 24ca 07F69823 		addw	r3, r7, #2712
 3241 24ce D3E90023 		ldrd	r2, [r3]
 3242 24d2 07F5C761 		add	r1, r7, #1592
 3243 24d6 D1E90001 		ldrd	r0, [r1]
 3244 24da 8446     		mov	ip, r0
 3245 24dc 82EA0C0C 		eor	ip, r2, ip
 3246 24e0 C7F870C1 		str	ip, [r7, #368]
 3247 24e4 4B40     		eors	r3, r3, r1
 3248 24e6 C7F87431 		str	r3, [r7, #372]
 3249 24ea D7E95C23 		ldrd	r2, [r7, #368]
 3250 24ee 07F63831 		addw	r1, r7, #2872
 3251 24f2 C1E90023 		strd	r2, [r1]
 270:fips202.c     ****             Agu =   BCu ^((~BCa)&  BCe );
 3252              		.loc 1 270 28 discriminator 3
 3253 24f6 07F52B63 		add	r3, r7, #2736
 3254 24fa D3E90023 		ldrd	r2, [r3]
 3255 24fe D143     		mvns	r1, r2
 3256 2500 C7F83016 		str	r1, [r7, #1584]
 3257 2504 DB43     		mvns	r3, r3
 3258 2506 C7F83436 		str	r3, [r7, #1588]
 3259              		.loc 1 270 33 discriminator 3
 3260 250a 07F6A823 		addw	r3, r7, #2728
 3261 250e D3E90023 		ldrd	r2, [r3]
 3262 2512 07F5C661 		add	r1, r7, #1584
 3263 2516 D1E90001 		ldrd	r0, [r1]
 3264 251a 8446     		mov	ip, r0
 3265 251c 0CEA020C 		and	ip, ip, r2
 3266 2520 C7F828C6 		str	ip, [r7, #1576]
 3267 2524 0B40     		ands	r3, r3, r1
 3268 2526 C7F82C36 		str	r3, [r7, #1580]
 3269              		.loc 1 270 17 discriminator 3
 3270 252a 07F52963 		add	r3, r7, #2704
 3271 252e D3E90023 		ldrd	r2, [r3]
 3272 2532 07F5C561 		add	r1, r7, #1576
 3273 2536 D1E90001 		ldrd	r0, [r1]
 3274 253a 8446     		mov	ip, r0
 3275 253c 82EA0C0C 		eor	ip, r2, ip
 3276 2540 C7F868C1 		str	ip, [r7, #360]
 3277 2544 4B40     		eors	r3, r3, r1
 3278 2546 C7F86C31 		str	r3, [r7, #364]
 3279 254a D7E95A23 		ldrd	r2, [r7, #360]
 3280 254e 07F53361 		add	r1, r7, #2864
 3281 2552 C1E90023 		strd	r2, [r1]
 271:fips202.c     **** 
 272:fips202.c     ****             Ebe ^= De;
 3282              		.loc 1 272 17 discriminator 3
 3283 2556 07F65823 		addw	r3, r7, #2648
 3284 255a D3E90001 		ldrd	r0, [r3]
 3285 255e 07F52863 		add	r3, r7, #2688
 3286 2562 D3E90023 		ldrd	r2, [r3]
 3287 2566 80EA020C 		eor	ip, r0, r2
 3288 256a C7F860C1 		str	ip, [r7, #352]
 3289 256e 4B40     		eors	r3, r3, r1
 3290 2570 C7F86431 		str	r3, [r7, #356]
 3291 2574 D7E95823 		ldrd	r2, [r7, #352]
 3292 2578 07F65821 		addw	r1, r7, #2648
 3293 257c C1E90023 		strd	r2, [r1]
 273:fips202.c     ****             BCa = ROL(Ebe, 1);
 3294              		.loc 1 273 17 discriminator 3
 3295 2580 07F68833 		addw	r3, r7, #2952
 3296 2584 A3F59870 		sub	r0, r3, #304
 3297 2588 07F68833 		addw	r3, r7, #2952
 3298 258c A3F59671 		sub	r1, r3, #300
 3299 2590 0368     		ldr	r3, [r0]
 3300 2592 DA0F     		lsrs	r2, r3, #31
 3301 2594 0B68     		ldr	r3, [r1]
 3302 2596 5B00     		lsls	r3, r3, #1
 3303 2598 1343     		orrs	r3, r3, r2
 3304 259a C7F85C31 		str	r3, [r7, #348]
 3305 259e 0B68     		ldr	r3, [r1]
 3306 25a0 DA0F     		lsrs	r2, r3, #31
 3307 25a2 0368     		ldr	r3, [r0]
 3308 25a4 5B00     		lsls	r3, r3, #1
 3309 25a6 1343     		orrs	r3, r3, r2
 3310 25a8 C7F85831 		str	r3, [r7, #344]
 3311 25ac D7E95623 		ldrd	r2, [r7, #344]
 3312 25b0 07F52B61 		add	r1, r7, #2736
 3313 25b4 C1E90023 		strd	r2, [r1]
 274:fips202.c     ****             Egi ^= Di;
 3314              		.loc 1 274 17 discriminator 3
 3315 25b8 07F62823 		addw	r3, r7, #2600
 3316 25bc D3E90001 		ldrd	r0, [r3]
 3317 25c0 07F67823 		addw	r3, r7, #2680
 3318 25c4 D3E90023 		ldrd	r2, [r3]
 3319 25c8 80EA020C 		eor	ip, r0, r2
 3320 25cc C7F850C1 		str	ip, [r7, #336]
 3321 25d0 4B40     		eors	r3, r3, r1
 3322 25d2 C7F85431 		str	r3, [r7, #340]
 3323 25d6 D7E95423 		ldrd	r2, [r7, #336]
 3324 25da 07F62821 		addw	r1, r7, #2600
 3325 25de C1E90023 		strd	r2, [r1]
 275:fips202.c     ****             BCe = ROL(Egi, 6);
 3326              		.loc 1 275 17 discriminator 3
 3327 25e2 07F68833 		addw	r3, r7, #2952
 3328 25e6 A3F5B070 		sub	r0, r3, #352
 3329 25ea 07F68833 		addw	r3, r7, #2952
 3330 25ee A3F5AE71 		sub	r1, r3, #348
 3331 25f2 0368     		ldr	r3, [r0]
 3332 25f4 9A0E     		lsrs	r2, r3, #26
 3333 25f6 0B68     		ldr	r3, [r1]
 3334 25f8 9B01     		lsls	r3, r3, #6
 3335 25fa 1343     		orrs	r3, r3, r2
 3336 25fc C7F84C31 		str	r3, [r7, #332]
 3337 2600 0B68     		ldr	r3, [r1]
 3338 2602 9A0E     		lsrs	r2, r3, #26
 3339 2604 0368     		ldr	r3, [r0]
 3340 2606 9B01     		lsls	r3, r3, #6
 3341 2608 1343     		orrs	r3, r3, r2
 3342 260a C7F84831 		str	r3, [r7, #328]
 3343 260e D7E95223 		ldrd	r2, [r7, #328]
 3344 2612 07F6A821 		addw	r1, r7, #2728
 3345 2616 C1E90023 		strd	r2, [r1]
 276:fips202.c     ****             Eko ^= Do;
 3346              		.loc 1 276 17 discriminator 3
 3347 261a 07F6F813 		addw	r3, r7, #2552
 3348 261e D3E90001 		ldrd	r0, [r3]
 3349 2622 07F52763 		add	r3, r7, #2672
 3350 2626 D3E90023 		ldrd	r2, [r3]
 3351 262a 80EA020C 		eor	ip, r0, r2
 3352 262e C7F840C1 		str	ip, [r7, #320]
 3353 2632 4B40     		eors	r3, r3, r1
 3354 2634 C7F84431 		str	r3, [r7, #324]
 3355 2638 D7E95023 		ldrd	r2, [r7, #320]
 3356 263c 07F6F811 		addw	r1, r7, #2552
 3357 2640 C1E90023 		strd	r2, [r1]
 277:fips202.c     ****             BCi = ROL(Eko, 25);
 3358              		.loc 1 277 17 discriminator 3
 3359 2644 07F68833 		addw	r3, r7, #2952
 3360 2648 A3F5C870 		sub	r0, r3, #400
 3361 264c 07F68833 		addw	r3, r7, #2952
 3362 2650 A3F5C671 		sub	r1, r3, #396
 3363 2654 0368     		ldr	r3, [r0]
 3364 2656 DA09     		lsrs	r2, r3, #7
 3365 2658 0B68     		ldr	r3, [r1]
 3366 265a 5B06     		lsls	r3, r3, #25
 3367 265c 1343     		orrs	r3, r3, r2
 3368 265e C7F83C31 		str	r3, [r7, #316]
 3369 2662 0B68     		ldr	r3, [r1]
 3370 2664 DA09     		lsrs	r2, r3, #7
 3371 2666 0368     		ldr	r3, [r0]
 3372 2668 5B06     		lsls	r3, r3, #25
 3373 266a 1343     		orrs	r3, r3, r2
 3374 266c C7F83831 		str	r3, [r7, #312]
 3375 2670 D7E94E23 		ldrd	r2, [r7, #312]
 3376 2674 07F52A61 		add	r1, r7, #2720
 3377 2678 C1E90023 		strd	r2, [r1]
 278:fips202.c     ****             Emu ^= Du;
 3378              		.loc 1 278 17 discriminator 3
 3379 267c 07F6C813 		addw	r3, r7, #2504
 3380 2680 D3E90001 		ldrd	r0, [r3]
 3381 2684 07F66823 		addw	r3, r7, #2664
 3382 2688 D3E90023 		ldrd	r2, [r3]
 3383 268c 80EA020C 		eor	ip, r0, r2
 3384 2690 C7F830C1 		str	ip, [r7, #304]
 3385 2694 4B40     		eors	r3, r3, r1
 3386 2696 C7F83431 		str	r3, [r7, #308]
 3387 269a D7E94C23 		ldrd	r2, [r7, #304]
 3388 269e 07F6C811 		addw	r1, r7, #2504
 3389 26a2 C1E90023 		strd	r2, [r1]
 279:fips202.c     ****             BCo = ROL(Emu, 8);
 3390              		.loc 1 279 17 discriminator 3
 3391 26a6 07F68833 		addw	r3, r7, #2952
 3392 26aa A3F5E070 		sub	r0, r3, #448
 3393 26ae 07F68833 		addw	r3, r7, #2952
 3394 26b2 A3F5DE71 		sub	r1, r3, #444
 3395 26b6 0368     		ldr	r3, [r0]
 3396 26b8 1A0E     		lsrs	r2, r3, #24
 3397 26ba 0B68     		ldr	r3, [r1]
 3398 26bc 1B02     		lsls	r3, r3, #8
 3399 26be 1343     		orrs	r3, r3, r2
 3400 26c0 C7F82C31 		str	r3, [r7, #300]
 3401 26c4 0B68     		ldr	r3, [r1]
 3402 26c6 1A0E     		lsrs	r2, r3, #24
 3403 26c8 0368     		ldr	r3, [r0]
 3404 26ca 1B02     		lsls	r3, r3, #8
 3405 26cc 1343     		orrs	r3, r3, r2
 3406 26ce C7F82831 		str	r3, [r7, #296]
 3407 26d2 D7E94A23 		ldrd	r2, [r7, #296]
 3408 26d6 07F69821 		addw	r1, r7, #2712
 3409 26da C1E90023 		strd	r2, [r1]
 280:fips202.c     ****             Esa ^= Da;
 3410              		.loc 1 280 17 discriminator 3
 3411 26de 07F51C63 		add	r3, r7, #2496
 3412 26e2 D3E90001 		ldrd	r0, [r3]
 3413 26e6 07F68823 		addw	r3, r7, #2696
 3414 26ea D3E90023 		ldrd	r2, [r3]
 3415 26ee 80EA020C 		eor	ip, r0, r2
 3416 26f2 C7F820C1 		str	ip, [r7, #288]
 3417 26f6 4B40     		eors	r3, r3, r1
 3418 26f8 C7F82431 		str	r3, [r7, #292]
 3419 26fc D7E94823 		ldrd	r2, [r7, #288]
 3420 2700 07F51C61 		add	r1, r7, #2496
 3421 2704 C1E90023 		strd	r2, [r1]
 281:fips202.c     ****             BCu = ROL(Esa, 18);
 3422              		.loc 1 281 17 discriminator 3
 3423 2708 07F68833 		addw	r3, r7, #2952
 3424 270c A3F5E470 		sub	r0, r3, #456
 3425 2710 07F68833 		addw	r3, r7, #2952
 3426 2714 A3F5E271 		sub	r1, r3, #452
 3427 2718 0368     		ldr	r3, [r0]
 3428 271a 9A0B     		lsrs	r2, r3, #14
 3429 271c 0B68     		ldr	r3, [r1]
 3430 271e 9B04     		lsls	r3, r3, #18
 3431 2720 1343     		orrs	r3, r3, r2
 3432 2722 C7F81C31 		str	r3, [r7, #284]
 3433 2726 0B68     		ldr	r3, [r1]
 3434 2728 9A0B     		lsrs	r2, r3, #14
 3435 272a 0368     		ldr	r3, [r0]
 3436 272c 9B04     		lsls	r3, r3, #18
 3437 272e 1343     		orrs	r3, r3, r2
 3438 2730 C7F81831 		str	r3, [r7, #280]
 3439 2734 D7E94623 		ldrd	r2, [r7, #280]
 3440 2738 07F52961 		add	r1, r7, #2704
 3441 273c C1E90023 		strd	r2, [r1]
 282:fips202.c     ****             Aka =   BCa ^((~BCe)&  BCi );
 3442              		.loc 1 282 28 discriminator 3
 3443 2740 07F6A823 		addw	r3, r7, #2728
 3444 2744 D3E90023 		ldrd	r2, [r3]
 3445 2748 D143     		mvns	r1, r2
 3446 274a C7F82016 		str	r1, [r7, #1568]
 3447 274e DB43     		mvns	r3, r3
 3448 2750 C7F82436 		str	r3, [r7, #1572]
 3449              		.loc 1 282 33 discriminator 3
 3450 2754 07F52A63 		add	r3, r7, #2720
 3451 2758 D3E90023 		ldrd	r2, [r3]
 3452 275c 07F5C461 		add	r1, r7, #1568
 3453 2760 D1E90001 		ldrd	r0, [r1]
 3454 2764 8446     		mov	ip, r0
 3455 2766 0CEA020C 		and	ip, ip, r2
 3456 276a C7F818C6 		str	ip, [r7, #1560]
 3457 276e 0B40     		ands	r3, r3, r1
 3458 2770 C7F81C36 		str	r3, [r7, #1564]
 3459              		.loc 1 282 17 discriminator 3
 3460 2774 07F52B63 		add	r3, r7, #2736
 3461 2778 D3E90023 		ldrd	r2, [r3]
 3462 277c 07F5C361 		add	r1, r7, #1560
 3463 2780 D1E90001 		ldrd	r0, [r1]
 3464 2784 8446     		mov	ip, r0
 3465 2786 82EA0C0C 		eor	ip, r2, ip
 3466 278a C7F810C1 		str	ip, [r7, #272]
 3467 278e 4B40     		eors	r3, r3, r1
 3468 2790 C7F81431 		str	r3, [r7, #276]
 3469 2794 D7E94423 		ldrd	r2, [r7, #272]
 3470 2798 07F62831 		addw	r1, r7, #2856
 3471 279c C1E90023 		strd	r2, [r1]
 283:fips202.c     ****             Ake =   BCe ^((~BCi)&  BCo );
 3472              		.loc 1 283 28 discriminator 3
 3473 27a0 07F52A63 		add	r3, r7, #2720
 3474 27a4 D3E90023 		ldrd	r2, [r3]
 3475 27a8 D143     		mvns	r1, r2
 3476 27aa C7F81016 		str	r1, [r7, #1552]
 3477 27ae DB43     		mvns	r3, r3
 3478 27b0 C7F81436 		str	r3, [r7, #1556]
 3479              		.loc 1 283 33 discriminator 3
 3480 27b4 07F69823 		addw	r3, r7, #2712
 3481 27b8 D3E90023 		ldrd	r2, [r3]
 3482 27bc 07F5C261 		add	r1, r7, #1552
 3483 27c0 D1E90001 		ldrd	r0, [r1]
 3484 27c4 8446     		mov	ip, r0
 3485 27c6 0CEA020C 		and	ip, ip, r2
 3486 27ca C7F808C6 		str	ip, [r7, #1544]
 3487 27ce 0B40     		ands	r3, r3, r1
 3488 27d0 C7F80C36 		str	r3, [r7, #1548]
 3489              		.loc 1 283 17 discriminator 3
 3490 27d4 07F6A823 		addw	r3, r7, #2728
 3491 27d8 D3E90023 		ldrd	r2, [r3]
 3492 27dc 07F5C161 		add	r1, r7, #1544
 3493 27e0 D1E90001 		ldrd	r0, [r1]
 3494 27e4 8446     		mov	ip, r0
 3495 27e6 82EA0C0C 		eor	ip, r2, ip
 3496 27ea C7F808C1 		str	ip, [r7, #264]
 3497 27ee 4B40     		eors	r3, r3, r1
 3498 27f0 C7F80C31 		str	r3, [r7, #268]
 3499 27f4 D7E94223 		ldrd	r2, [r7, #264]
 3500 27f8 07F53261 		add	r1, r7, #2848
 3501 27fc C1E90023 		strd	r2, [r1]
 284:fips202.c     ****             Aki =   BCi ^((~BCo)&  BCu );
 3502              		.loc 1 284 28 discriminator 3
 3503 2800 07F69823 		addw	r3, r7, #2712
 3504 2804 D3E90023 		ldrd	r2, [r3]
 3505 2808 D143     		mvns	r1, r2
 3506 280a C7F80016 		str	r1, [r7, #1536]
 3507 280e DB43     		mvns	r3, r3
 3508 2810 C7F80436 		str	r3, [r7, #1540]
 3509              		.loc 1 284 33 discriminator 3
 3510 2814 07F52963 		add	r3, r7, #2704
 3511 2818 D3E90023 		ldrd	r2, [r3]
 3512 281c 07F5C061 		add	r1, r7, #1536
 3513 2820 D1E90001 		ldrd	r0, [r1]
 3514 2824 8446     		mov	ip, r0
 3515 2826 0CEA020C 		and	ip, ip, r2
 3516 282a C7F8F8C5 		str	ip, [r7, #1528]
 3517 282e 0B40     		ands	r3, r3, r1
 3518 2830 C7F8FC35 		str	r3, [r7, #1532]
 3519              		.loc 1 284 17 discriminator 3
 3520 2834 07F52A63 		add	r3, r7, #2720
 3521 2838 D3E90023 		ldrd	r2, [r3]
 3522 283c 07F5BF61 		add	r1, r7, #1528
 3523 2840 D1E90001 		ldrd	r0, [r1]
 3524 2844 8446     		mov	ip, r0
 3525 2846 82EA0C0C 		eor	ip, r2, ip
 3526 284a C7F800C1 		str	ip, [r7, #256]
 3527 284e 4B40     		eors	r3, r3, r1
 3528 2850 C7F80431 		str	r3, [r7, #260]
 3529 2854 D7E94023 		ldrd	r2, [r7, #256]
 3530 2858 07F61831 		addw	r1, r7, #2840
 3531 285c C1E90023 		strd	r2, [r1]
 285:fips202.c     ****             Ako =   BCo ^((~BCu)&  BCa );
 3532              		.loc 1 285 28 discriminator 3
 3533 2860 07F52963 		add	r3, r7, #2704
 3534 2864 D3E90023 		ldrd	r2, [r3]
 3535 2868 D143     		mvns	r1, r2
 3536 286a C7F8F015 		str	r1, [r7, #1520]
 3537 286e DB43     		mvns	r3, r3
 3538 2870 C7F8F435 		str	r3, [r7, #1524]
 3539              		.loc 1 285 33 discriminator 3
 3540 2874 07F52B63 		add	r3, r7, #2736
 3541 2878 D3E90023 		ldrd	r2, [r3]
 3542 287c 07F5BE61 		add	r1, r7, #1520
 3543 2880 D1E90001 		ldrd	r0, [r1]
 3544 2884 8446     		mov	ip, r0
 3545 2886 0CEA020C 		and	ip, ip, r2
 3546 288a C7F8E8C5 		str	ip, [r7, #1512]
 3547 288e 0B40     		ands	r3, r3, r1
 3548 2890 C7F8EC35 		str	r3, [r7, #1516]
 3549              		.loc 1 285 17 discriminator 3
 3550 2894 07F69823 		addw	r3, r7, #2712
 3551 2898 D3E90023 		ldrd	r2, [r3]
 3552 289c 07F5BD61 		add	r1, r7, #1512
 3553 28a0 D1E90001 		ldrd	r0, [r1]
 3554 28a4 8446     		mov	ip, r0
 3555 28a6 82EA0C0C 		eor	ip, r2, ip
 3556 28aa C7F8F8C0 		str	ip, [r7, #248]
 3557 28ae 4B40     		eors	r3, r3, r1
 3558 28b0 C7F8FC30 		str	r3, [r7, #252]
 3559 28b4 D7E93E23 		ldrd	r2, [r7, #248]
 3560 28b8 07F53161 		add	r1, r7, #2832
 3561 28bc C1E90023 		strd	r2, [r1]
 286:fips202.c     ****             Aku =   BCu ^((~BCa)&  BCe );
 3562              		.loc 1 286 28 discriminator 3
 3563 28c0 07F52B63 		add	r3, r7, #2736
 3564 28c4 D3E90023 		ldrd	r2, [r3]
 3565 28c8 D143     		mvns	r1, r2
 3566 28ca C7F8E015 		str	r1, [r7, #1504]
 3567 28ce DB43     		mvns	r3, r3
 3568 28d0 C7F8E435 		str	r3, [r7, #1508]
 3569              		.loc 1 286 33 discriminator 3
 3570 28d4 07F6A823 		addw	r3, r7, #2728
 3571 28d8 D3E90023 		ldrd	r2, [r3]
 3572 28dc 07F5BC61 		add	r1, r7, #1504
 3573 28e0 D1E90001 		ldrd	r0, [r1]
 3574 28e4 8446     		mov	ip, r0
 3575 28e6 0CEA020C 		and	ip, ip, r2
 3576 28ea C7F8D8C5 		str	ip, [r7, #1496]
 3577 28ee 0B40     		ands	r3, r3, r1
 3578 28f0 C7F8DC35 		str	r3, [r7, #1500]
 3579              		.loc 1 286 17 discriminator 3
 3580 28f4 07F52963 		add	r3, r7, #2704
 3581 28f8 D3E90023 		ldrd	r2, [r3]
 3582 28fc 07F5BB61 		add	r1, r7, #1496
 3583 2900 D1E90001 		ldrd	r0, [r1]
 3584 2904 8446     		mov	ip, r0
 3585 2906 82EA0C0C 		eor	ip, r2, ip
 3586 290a C7F8F0C0 		str	ip, [r7, #240]
 3587 290e 4B40     		eors	r3, r3, r1
 3588 2910 C7F8F430 		str	r3, [r7, #244]
 3589 2914 D7E93C23 		ldrd	r2, [r7, #240]
 3590 2918 07F60831 		addw	r1, r7, #2824
 3591 291c C1E90023 		strd	r2, [r1]
 287:fips202.c     **** 
 288:fips202.c     ****             Ebu ^= Du;
 3592              		.loc 1 288 17 discriminator 3
 3593 2920 07F52463 		add	r3, r7, #2624
 3594 2924 D3E90001 		ldrd	r0, [r3]
 3595 2928 07F66823 		addw	r3, r7, #2664
 3596 292c D3E90023 		ldrd	r2, [r3]
 3597 2930 80EA020C 		eor	ip, r0, r2
 3598 2934 C7F8E8C0 		str	ip, [r7, #232]
 3599 2938 4B40     		eors	r3, r3, r1
 3600 293a C7F8EC30 		str	r3, [r7, #236]
 3601 293e D7E93A23 		ldrd	r2, [r7, #232]
 3602 2942 07F52461 		add	r1, r7, #2624
 3603 2946 C1E90023 		strd	r2, [r1]
 289:fips202.c     ****             BCa = ROL(Ebu, 27);
 3604              		.loc 1 289 17 discriminator 3
 3605 294a 07F68833 		addw	r3, r7, #2952
 3606 294e A3F5A470 		sub	r0, r3, #328
 3607 2952 07F68833 		addw	r3, r7, #2952
 3608 2956 A3F5A271 		sub	r1, r3, #324
 3609 295a 0368     		ldr	r3, [r0]
 3610 295c 5A09     		lsrs	r2, r3, #5
 3611 295e 0B68     		ldr	r3, [r1]
 3612 2960 DB06     		lsls	r3, r3, #27
 3613 2962 1343     		orrs	r3, r3, r2
 3614 2964 C7F8E430 		str	r3, [r7, #228]
 3615 2968 0B68     		ldr	r3, [r1]
 3616 296a 5A09     		lsrs	r2, r3, #5
 3617 296c 0368     		ldr	r3, [r0]
 3618 296e DB06     		lsls	r3, r3, #27
 3619 2970 1343     		orrs	r3, r3, r2
 3620 2972 C7F8E030 		str	r3, [r7, #224]
 3621 2976 D7E93823 		ldrd	r2, [r7, #224]
 3622 297a 07F52B61 		add	r1, r7, #2736
 3623 297e C1E90023 		strd	r2, [r1]
 290:fips202.c     ****             Ega ^= Da;
 3624              		.loc 1 290 17 discriminator 3
 3625 2982 07F63823 		addw	r3, r7, #2616
 3626 2986 D3E90001 		ldrd	r0, [r3]
 3627 298a 07F68823 		addw	r3, r7, #2696
 3628 298e D3E90023 		ldrd	r2, [r3]
 3629 2992 80EA020C 		eor	ip, r0, r2
 3630 2996 C7F8D8C0 		str	ip, [r7, #216]
 3631 299a 4B40     		eors	r3, r3, r1
 3632 299c C7F8DC30 		str	r3, [r7, #220]
 3633 29a0 D7E93623 		ldrd	r2, [r7, #216]
 3634 29a4 07F63821 		addw	r1, r7, #2616
 3635 29a8 C1E90023 		strd	r2, [r1]
 291:fips202.c     ****             BCe = ROL(Ega, 36);
 3636              		.loc 1 291 17 discriminator 3
 3637 29ac 07F68833 		addw	r3, r7, #2952
 3638 29b0 A3F5A670 		sub	r0, r3, #332
 3639 29b4 07F68833 		addw	r3, r7, #2952
 3640 29b8 A3F5A871 		sub	r1, r3, #336
 3641 29bc 0368     		ldr	r3, [r0]
 3642 29be 1A01     		lsls	r2, r3, #4
 3643 29c0 0B68     		ldr	r3, [r1]
 3644 29c2 1B0F     		lsrs	r3, r3, #28
 3645 29c4 1343     		orrs	r3, r3, r2
 3646 29c6 C7F8D030 		str	r3, [r7, #208]
 3647 29ca 0B68     		ldr	r3, [r1]
 3648 29cc 1A01     		lsls	r2, r3, #4
 3649 29ce 0368     		ldr	r3, [r0]
 3650 29d0 1B0F     		lsrs	r3, r3, #28
 3651 29d2 1343     		orrs	r3, r3, r2
 3652 29d4 C7F8D430 		str	r3, [r7, #212]
 3653 29d8 D7E93423 		ldrd	r2, [r7, #208]
 3654 29dc 07F6A821 		addw	r1, r7, #2728
 3655 29e0 C1E90023 		strd	r2, [r1]
 292:fips202.c     ****             Eke ^= De;
 3656              		.loc 1 292 17 discriminator 3
 3657 29e4 07F60823 		addw	r3, r7, #2568
 3658 29e8 D3E90001 		ldrd	r0, [r3]
 3659 29ec 07F52863 		add	r3, r7, #2688
 3660 29f0 D3E90023 		ldrd	r2, [r3]
 3661 29f4 80EA020C 		eor	ip, r0, r2
 3662 29f8 C7F8C8C0 		str	ip, [r7, #200]
 3663 29fc 4B40     		eors	r3, r3, r1
 3664 29fe C7F8CC30 		str	r3, [r7, #204]
 3665 2a02 D7E93223 		ldrd	r2, [r7, #200]
 3666 2a06 07F60821 		addw	r1, r7, #2568
 3667 2a0a C1E90023 		strd	r2, [r1]
 293:fips202.c     ****             BCi = ROL(Eke, 10);
 3668              		.loc 1 293 17 discriminator 3
 3669 2a0e 07F68833 		addw	r3, r7, #2952
 3670 2a12 A3F5C070 		sub	r0, r3, #384
 3671 2a16 07F68833 		addw	r3, r7, #2952
 3672 2a1a A3F5BE71 		sub	r1, r3, #380
 3673 2a1e 0368     		ldr	r3, [r0]
 3674 2a20 9A0D     		lsrs	r2, r3, #22
 3675 2a22 0B68     		ldr	r3, [r1]
 3676 2a24 9B02     		lsls	r3, r3, #10
 3677 2a26 1343     		orrs	r3, r3, r2
 3678 2a28 C7F8C430 		str	r3, [r7, #196]
 3679 2a2c 0B68     		ldr	r3, [r1]
 3680 2a2e 9A0D     		lsrs	r2, r3, #22
 3681 2a30 0368     		ldr	r3, [r0]
 3682 2a32 9B02     		lsls	r3, r3, #10
 3683 2a34 1343     		orrs	r3, r3, r2
 3684 2a36 C7F8C030 		str	r3, [r7, #192]
 3685 2a3a D7E93023 		ldrd	r2, [r7, #192]
 3686 2a3e 07F52A61 		add	r1, r7, #2720
 3687 2a42 C1E90023 		strd	r2, [r1]
 294:fips202.c     ****             Emi ^= Di;
 3688              		.loc 1 294 17 discriminator 3
 3689 2a46 07F6D813 		addw	r3, r7, #2520
 3690 2a4a D3E90001 		ldrd	r0, [r3]
 3691 2a4e 07F67823 		addw	r3, r7, #2680
 3692 2a52 D3E90023 		ldrd	r2, [r3]
 3693 2a56 80EA020C 		eor	ip, r0, r2
 3694 2a5a C7F8B8C0 		str	ip, [r7, #184]
 3695 2a5e 4B40     		eors	r3, r3, r1
 3696 2a60 C7F8BC30 		str	r3, [r7, #188]
 3697 2a64 D7E92E23 		ldrd	r2, [r7, #184]
 3698 2a68 07F6D811 		addw	r1, r7, #2520
 3699 2a6c C1E90023 		strd	r2, [r1]
 295:fips202.c     ****             BCo = ROL(Emi, 15);
 3700              		.loc 1 295 17 discriminator 3
 3701 2a70 07F68833 		addw	r3, r7, #2952
 3702 2a74 A3F5D870 		sub	r0, r3, #432
 3703 2a78 07F68833 		addw	r3, r7, #2952
 3704 2a7c A3F5D671 		sub	r1, r3, #428
 3705 2a80 0368     		ldr	r3, [r0]
 3706 2a82 5A0C     		lsrs	r2, r3, #17
 3707 2a84 0B68     		ldr	r3, [r1]
 3708 2a86 DB03     		lsls	r3, r3, #15
 3709 2a88 1343     		orrs	r3, r3, r2
 3710 2a8a C7F8B430 		str	r3, [r7, #180]
 3711 2a8e 0B68     		ldr	r3, [r1]
 3712 2a90 5A0C     		lsrs	r2, r3, #17
 3713 2a92 0368     		ldr	r3, [r0]
 3714 2a94 DB03     		lsls	r3, r3, #15
 3715 2a96 1343     		orrs	r3, r3, r2
 3716 2a98 C7F8B030 		str	r3, [r7, #176]
 3717 2a9c D7E92C23 		ldrd	r2, [r7, #176]
 3718 2aa0 07F69821 		addw	r1, r7, #2712
 3719 2aa4 C1E90023 		strd	r2, [r1]
 296:fips202.c     ****             Eso ^= Do;
 3720              		.loc 1 296 17 discriminator 3
 3721 2aa8 07F6A813 		addw	r3, r7, #2472
 3722 2aac D3E90001 		ldrd	r0, [r3]
 3723 2ab0 07F52763 		add	r3, r7, #2672
 3724 2ab4 D3E90023 		ldrd	r2, [r3]
 3725 2ab8 80EA020C 		eor	ip, r0, r2
 3726 2abc C7F8A8C0 		str	ip, [r7, #168]
 3727 2ac0 4B40     		eors	r3, r3, r1
 3728 2ac2 C7F8AC30 		str	r3, [r7, #172]
 3729 2ac6 D7E92A23 		ldrd	r2, [r7, #168]
 3730 2aca 07F6A811 		addw	r1, r7, #2472
 3731 2ace C1E90023 		strd	r2, [r1]
 297:fips202.c     ****             BCu = ROL(Eso, 56);
 3732              		.loc 1 297 17 discriminator 3
 3733 2ad2 07F68833 		addw	r3, r7, #2952
 3734 2ad6 A3F5EE70 		sub	r0, r3, #476
 3735 2ada 07F68833 		addw	r3, r7, #2952
 3736 2ade A3F5F071 		sub	r1, r3, #480
 3737 2ae2 0368     		ldr	r3, [r0]
 3738 2ae4 1A06     		lsls	r2, r3, #24
 3739 2ae6 0B68     		ldr	r3, [r1]
 3740 2ae8 1B0A     		lsrs	r3, r3, #8
 3741 2aea 1343     		orrs	r3, r3, r2
 3742 2aec C7F8A030 		str	r3, [r7, #160]
 3743 2af0 0B68     		ldr	r3, [r1]
 3744 2af2 1A06     		lsls	r2, r3, #24
 3745 2af4 0368     		ldr	r3, [r0]
 3746 2af6 1B0A     		lsrs	r3, r3, #8
 3747 2af8 1343     		orrs	r3, r3, r2
 3748 2afa C7F8A430 		str	r3, [r7, #164]
 3749 2afe D7E92823 		ldrd	r2, [r7, #160]
 3750 2b02 07F52961 		add	r1, r7, #2704
 3751 2b06 C1E90023 		strd	r2, [r1]
 298:fips202.c     ****             Ama =   BCa ^((~BCe)&  BCi );
 3752              		.loc 1 298 28 discriminator 3
 3753 2b0a 07F6A823 		addw	r3, r7, #2728
 3754 2b0e D3E90023 		ldrd	r2, [r3]
 3755 2b12 D143     		mvns	r1, r2
 3756 2b14 C7F8D015 		str	r1, [r7, #1488]
 3757 2b18 DB43     		mvns	r3, r3
 3758 2b1a C7F8D435 		str	r3, [r7, #1492]
 3759              		.loc 1 298 33 discriminator 3
 3760 2b1e 07F52A63 		add	r3, r7, #2720
 3761 2b22 D3E90023 		ldrd	r2, [r3]
 3762 2b26 07F5BA61 		add	r1, r7, #1488
 3763 2b2a D1E90001 		ldrd	r0, [r1]
 3764 2b2e 8446     		mov	ip, r0
 3765 2b30 0CEA020C 		and	ip, ip, r2
 3766 2b34 C7F8C8C5 		str	ip, [r7, #1480]
 3767 2b38 0B40     		ands	r3, r3, r1
 3768 2b3a C7F8CC35 		str	r3, [r7, #1484]
 3769              		.loc 1 298 17 discriminator 3
 3770 2b3e 07F52B63 		add	r3, r7, #2736
 3771 2b42 D3E90023 		ldrd	r2, [r3]
 3772 2b46 07F5B961 		add	r1, r7, #1480
 3773 2b4a D1E90001 		ldrd	r0, [r1]
 3774 2b4e 8446     		mov	ip, r0
 3775 2b50 82EA0C0C 		eor	ip, r2, ip
 3776 2b54 C7F898C0 		str	ip, [r7, #152]
 3777 2b58 4B40     		eors	r3, r3, r1
 3778 2b5a C7F89C30 		str	r3, [r7, #156]
 3779 2b5e D7E92623 		ldrd	r2, [r7, #152]
 3780 2b62 07F53061 		add	r1, r7, #2816
 3781 2b66 C1E90023 		strd	r2, [r1]
 299:fips202.c     ****             Ame =   BCe ^((~BCi)&  BCo );
 3782              		.loc 1 299 28 discriminator 3
 3783 2b6a 07F52A63 		add	r3, r7, #2720
 3784 2b6e D3E90023 		ldrd	r2, [r3]
 3785 2b72 D143     		mvns	r1, r2
 3786 2b74 C7F8C015 		str	r1, [r7, #1472]
 3787 2b78 DB43     		mvns	r3, r3
 3788 2b7a C7F8C435 		str	r3, [r7, #1476]
 3789              		.loc 1 299 33 discriminator 3
 3790 2b7e 07F69823 		addw	r3, r7, #2712
 3791 2b82 D3E90023 		ldrd	r2, [r3]
 3792 2b86 07F5B861 		add	r1, r7, #1472
 3793 2b8a D1E90001 		ldrd	r0, [r1]
 3794 2b8e 8446     		mov	ip, r0
 3795 2b90 0CEA020C 		and	ip, ip, r2
 3796 2b94 C7F8B8C5 		str	ip, [r7, #1464]
 3797 2b98 0B40     		ands	r3, r3, r1
 3798 2b9a C7F8BC35 		str	r3, [r7, #1468]
 3799              		.loc 1 299 17 discriminator 3
 3800 2b9e 07F6A823 		addw	r3, r7, #2728
 3801 2ba2 D3E90023 		ldrd	r2, [r3]
 3802 2ba6 07F5B761 		add	r1, r7, #1464
 3803 2baa D1E90001 		ldrd	r0, [r1]
 3804 2bae 8446     		mov	ip, r0
 3805 2bb0 82EA0C0C 		eor	ip, r2, ip
 3806 2bb4 C7F890C0 		str	ip, [r7, #144]
 3807 2bb8 4B40     		eors	r3, r3, r1
 3808 2bba C7F89430 		str	r3, [r7, #148]
 3809 2bbe D7E92423 		ldrd	r2, [r7, #144]
 3810 2bc2 07F6F821 		addw	r1, r7, #2808
 3811 2bc6 C1E90023 		strd	r2, [r1]
 300:fips202.c     ****             Ami =   BCi ^((~BCo)&  BCu );
 3812              		.loc 1 300 28 discriminator 3
 3813 2bca 07F69823 		addw	r3, r7, #2712
 3814 2bce D3E90023 		ldrd	r2, [r3]
 3815 2bd2 D143     		mvns	r1, r2
 3816 2bd4 C7F8B015 		str	r1, [r7, #1456]
 3817 2bd8 DB43     		mvns	r3, r3
 3818 2bda C7F8B435 		str	r3, [r7, #1460]
 3819              		.loc 1 300 33 discriminator 3
 3820 2bde 07F52963 		add	r3, r7, #2704
 3821 2be2 D3E90023 		ldrd	r2, [r3]
 3822 2be6 07F5B661 		add	r1, r7, #1456
 3823 2bea D1E90001 		ldrd	r0, [r1]
 3824 2bee 8446     		mov	ip, r0
 3825 2bf0 0CEA020C 		and	ip, ip, r2
 3826 2bf4 C7F8A8C5 		str	ip, [r7, #1448]
 3827 2bf8 0B40     		ands	r3, r3, r1
 3828 2bfa C7F8AC35 		str	r3, [r7, #1452]
 3829              		.loc 1 300 17 discriminator 3
 3830 2bfe 07F52A63 		add	r3, r7, #2720
 3831 2c02 D3E90023 		ldrd	r2, [r3]
 3832 2c06 07F5B561 		add	r1, r7, #1448
 3833 2c0a D1E90001 		ldrd	r0, [r1]
 3834 2c0e 8446     		mov	ip, r0
 3835 2c10 82EA0C0C 		eor	ip, r2, ip
 3836 2c14 C7F888C0 		str	ip, [r7, #136]
 3837 2c18 4B40     		eors	r3, r3, r1
 3838 2c1a C7F88C30 		str	r3, [r7, #140]
 3839 2c1e D7E92223 		ldrd	r2, [r7, #136]
 3840 2c22 07F52F61 		add	r1, r7, #2800
 3841 2c26 C1E90023 		strd	r2, [r1]
 301:fips202.c     ****             Amo =   BCo ^((~BCu)&  BCa );
 3842              		.loc 1 301 28 discriminator 3
 3843 2c2a 07F52963 		add	r3, r7, #2704
 3844 2c2e D3E90023 		ldrd	r2, [r3]
 3845 2c32 D143     		mvns	r1, r2
 3846 2c34 C7F8A015 		str	r1, [r7, #1440]
 3847 2c38 DB43     		mvns	r3, r3
 3848 2c3a C7F8A435 		str	r3, [r7, #1444]
 3849              		.loc 1 301 33 discriminator 3
 3850 2c3e 07F52B63 		add	r3, r7, #2736
 3851 2c42 D3E90023 		ldrd	r2, [r3]
 3852 2c46 07F5B461 		add	r1, r7, #1440
 3853 2c4a D1E90001 		ldrd	r0, [r1]
 3854 2c4e 8446     		mov	ip, r0
 3855 2c50 0CEA020C 		and	ip, ip, r2
 3856 2c54 C7F898C5 		str	ip, [r7, #1432]
 3857 2c58 0B40     		ands	r3, r3, r1
 3858 2c5a C7F89C35 		str	r3, [r7, #1436]
 3859              		.loc 1 301 17 discriminator 3
 3860 2c5e 07F69823 		addw	r3, r7, #2712
 3861 2c62 D3E90023 		ldrd	r2, [r3]
 3862 2c66 07F5B361 		add	r1, r7, #1432
 3863 2c6a D1E90001 		ldrd	r0, [r1]
 3864 2c6e 8446     		mov	ip, r0
 3865 2c70 82EA0C0C 		eor	ip, r2, ip
 3866 2c74 C7F880C0 		str	ip, [r7, #128]
 3867 2c78 4B40     		eors	r3, r3, r1
 3868 2c7a C7F88430 		str	r3, [r7, #132]
 3869 2c7e D7E92023 		ldrd	r2, [r7, #128]
 3870 2c82 07F6E821 		addw	r1, r7, #2792
 3871 2c86 C1E90023 		strd	r2, [r1]
 302:fips202.c     ****             Amu =   BCu ^((~BCa)&  BCe );
 3872              		.loc 1 302 28 discriminator 3
 3873 2c8a 07F52B63 		add	r3, r7, #2736
 3874 2c8e D3E90023 		ldrd	r2, [r3]
 3875 2c92 D143     		mvns	r1, r2
 3876 2c94 C7F89015 		str	r1, [r7, #1424]
 3877 2c98 DB43     		mvns	r3, r3
 3878 2c9a C7F89435 		str	r3, [r7, #1428]
 3879              		.loc 1 302 33 discriminator 3
 3880 2c9e 07F6A823 		addw	r3, r7, #2728
 3881 2ca2 D3E90023 		ldrd	r2, [r3]
 3882 2ca6 07F5B261 		add	r1, r7, #1424
 3883 2caa D1E90001 		ldrd	r0, [r1]
 3884 2cae 8446     		mov	ip, r0
 3885 2cb0 0CEA020C 		and	ip, ip, r2
 3886 2cb4 C7F888C5 		str	ip, [r7, #1416]
 3887 2cb8 0B40     		ands	r3, r3, r1
 3888 2cba C7F88C35 		str	r3, [r7, #1420]
 3889              		.loc 1 302 17 discriminator 3
 3890 2cbe 07F52963 		add	r3, r7, #2704
 3891 2cc2 D3E90023 		ldrd	r2, [r3]
 3892 2cc6 07F5B161 		add	r1, r7, #1416
 3893 2cca D1E90001 		ldrd	r0, [r1]
 3894 2cce 8446     		mov	ip, r0
 3895 2cd0 82EA0C0C 		eor	ip, r2, ip
 3896 2cd4 C7F878C0 		str	ip, [r7, #120]
 3897 2cd8 4B40     		eors	r3, r3, r1
 3898 2cda FB67     		str	r3, [r7, #124]
 3899 2cdc D7E91E23 		ldrd	r2, [r7, #120]
 3900 2ce0 07F52E61 		add	r1, r7, #2784
 3901 2ce4 C1E90023 		strd	r2, [r1]
 303:fips202.c     **** 
 304:fips202.c     ****             Ebi ^= Di;
 3902              		.loc 1 304 17 discriminator 3
 3903 2ce8 07F52563 		add	r3, r7, #2640
 3904 2cec D3E90001 		ldrd	r0, [r3]
 3905 2cf0 07F67823 		addw	r3, r7, #2680
 3906 2cf4 D3E90023 		ldrd	r2, [r3]
 3907 2cf8 80EA020C 		eor	ip, r0, r2
 3908 2cfc C7F870C0 		str	ip, [r7, #112]
 3909 2d00 4B40     		eors	r3, r3, r1
 3910 2d02 7B67     		str	r3, [r7, #116]
 3911 2d04 D7E91C23 		ldrd	r2, [r7, #112]
 3912 2d08 07F52561 		add	r1, r7, #2640
 3913 2d0c C1E90023 		strd	r2, [r1]
 305:fips202.c     ****             BCa = ROL(Ebi, 62);
 3914              		.loc 1 305 17 discriminator 3
 3915 2d10 07F68833 		addw	r3, r7, #2952
 3916 2d14 A3F59A70 		sub	r0, r3, #308
 3917 2d18 07F68833 		addw	r3, r7, #2952
 3918 2d1c A3F59C71 		sub	r1, r3, #312
 3919 2d20 0368     		ldr	r3, [r0]
 3920 2d22 9A07     		lsls	r2, r3, #30
 3921 2d24 0B68     		ldr	r3, [r1]
 3922 2d26 9B08     		lsrs	r3, r3, #2
 3923 2d28 1343     		orrs	r3, r3, r2
 3924 2d2a BB66     		str	r3, [r7, #104]
 3925 2d2c 0B68     		ldr	r3, [r1]
 3926 2d2e 9A07     		lsls	r2, r3, #30
 3927 2d30 0368     		ldr	r3, [r0]
 3928 2d32 9B08     		lsrs	r3, r3, #2
 3929 2d34 1343     		orrs	r3, r3, r2
 3930 2d36 FB66     		str	r3, [r7, #108]
 3931 2d38 D7E91A23 		ldrd	r2, [r7, #104]
 3932 2d3c 07F52B61 		add	r1, r7, #2736
 3933 2d40 C1E90023 		strd	r2, [r1]
 306:fips202.c     ****             Ego ^= Do;
 3934              		.loc 1 306 17 discriminator 3
 3935 2d44 07F52263 		add	r3, r7, #2592
 3936 2d48 D3E90001 		ldrd	r0, [r3]
 3937 2d4c 07F52763 		add	r3, r7, #2672
 3938 2d50 D3E90023 		ldrd	r2, [r3]
 3939 2d54 80EA020C 		eor	ip, r0, r2
 3940 2d58 C7F860C0 		str	ip, [r7, #96]
 3941 2d5c 4B40     		eors	r3, r3, r1
 3942 2d5e 7B66     		str	r3, [r7, #100]
 3943 2d60 D7E91823 		ldrd	r2, [r7, #96]
 3944 2d64 07F52261 		add	r1, r7, #2592
 3945 2d68 C1E90023 		strd	r2, [r1]
 307:fips202.c     ****             BCe = ROL(Ego, 55);
 3946              		.loc 1 307 17 discriminator 3
 3947 2d6c 07F68833 		addw	r3, r7, #2952
 3948 2d70 A3F5B270 		sub	r0, r3, #356
 3949 2d74 07F68833 		addw	r3, r7, #2952
 3950 2d78 A3F5B471 		sub	r1, r3, #360
 3951 2d7c 0368     		ldr	r3, [r0]
 3952 2d7e DA05     		lsls	r2, r3, #23
 3953 2d80 0B68     		ldr	r3, [r1]
 3954 2d82 5B0A     		lsrs	r3, r3, #9
 3955 2d84 1343     		orrs	r3, r3, r2
 3956 2d86 BB65     		str	r3, [r7, #88]
 3957 2d88 0B68     		ldr	r3, [r1]
 3958 2d8a DA05     		lsls	r2, r3, #23
 3959 2d8c 0368     		ldr	r3, [r0]
 3960 2d8e 5B0A     		lsrs	r3, r3, #9
 3961 2d90 1343     		orrs	r3, r3, r2
 3962 2d92 FB65     		str	r3, [r7, #92]
 3963 2d94 D7E91623 		ldrd	r2, [r7, #88]
 3964 2d98 07F6A821 		addw	r1, r7, #2728
 3965 2d9c C1E90023 		strd	r2, [r1]
 308:fips202.c     ****             Eku ^= Du;
 3966              		.loc 1 308 17 discriminator 3
 3967 2da0 07F51F63 		add	r3, r7, #2544
 3968 2da4 D3E90001 		ldrd	r0, [r3]
 3969 2da8 07F66823 		addw	r3, r7, #2664
 3970 2dac D3E90023 		ldrd	r2, [r3]
 3971 2db0 80EA020C 		eor	ip, r0, r2
 3972 2db4 C7F850C0 		str	ip, [r7, #80]
 3973 2db8 4B40     		eors	r3, r3, r1
 3974 2dba 7B65     		str	r3, [r7, #84]
 3975 2dbc D7E91423 		ldrd	r2, [r7, #80]
 3976 2dc0 07F51F61 		add	r1, r7, #2544
 3977 2dc4 C1E90023 		strd	r2, [r1]
 309:fips202.c     ****             BCi = ROL(Eku, 39);
 3978              		.loc 1 309 17 discriminator 3
 3979 2dc8 07F68833 		addw	r3, r7, #2952
 3980 2dcc A3F5CA70 		sub	r0, r3, #404
 3981 2dd0 07F68833 		addw	r3, r7, #2952
 3982 2dd4 A3F5CC71 		sub	r1, r3, #408
 3983 2dd8 0368     		ldr	r3, [r0]
 3984 2dda DA01     		lsls	r2, r3, #7
 3985 2ddc 0B68     		ldr	r3, [r1]
 3986 2dde 5B0E     		lsrs	r3, r3, #25
 3987 2de0 1343     		orrs	r3, r3, r2
 3988 2de2 BB64     		str	r3, [r7, #72]
 3989 2de4 0B68     		ldr	r3, [r1]
 3990 2de6 DA01     		lsls	r2, r3, #7
 3991 2de8 0368     		ldr	r3, [r0]
 3992 2dea 5B0E     		lsrs	r3, r3, #25
 3993 2dec 1343     		orrs	r3, r3, r2
 3994 2dee FB64     		str	r3, [r7, #76]
 3995 2df0 D7E91223 		ldrd	r2, [r7, #72]
 3996 2df4 07F52A61 		add	r1, r7, #2720
 3997 2df8 C1E90023 		strd	r2, [r1]
 310:fips202.c     ****             Ema ^= Da;
 3998              		.loc 1 310 17 discriminator 3
 3999 2dfc 07F6E813 		addw	r3, r7, #2536
 4000 2e00 D3E90001 		ldrd	r0, [r3]
 4001 2e04 07F68823 		addw	r3, r7, #2696
 4002 2e08 D3E90023 		ldrd	r2, [r3]
 4003 2e0c 80EA020C 		eor	ip, r0, r2
 4004 2e10 C7F840C0 		str	ip, [r7, #64]
 4005 2e14 4B40     		eors	r3, r3, r1
 4006 2e16 7B64     		str	r3, [r7, #68]
 4007 2e18 D7E91023 		ldrd	r2, [r7, #64]
 4008 2e1c 07F6E811 		addw	r1, r7, #2536
 4009 2e20 C1E90023 		strd	r2, [r1]
 311:fips202.c     ****             BCo = ROL(Ema, 41);
 4010              		.loc 1 311 17 discriminator 3
 4011 2e24 07F68833 		addw	r3, r7, #2952
 4012 2e28 A3F5CE70 		sub	r0, r3, #412
 4013 2e2c 07F68833 		addw	r3, r7, #2952
 4014 2e30 A3F5D071 		sub	r1, r3, #416
 4015 2e34 0368     		ldr	r3, [r0]
 4016 2e36 5A02     		lsls	r2, r3, #9
 4017 2e38 0B68     		ldr	r3, [r1]
 4018 2e3a DB0D     		lsrs	r3, r3, #23
 4019 2e3c 1343     		orrs	r3, r3, r2
 4020 2e3e BB63     		str	r3, [r7, #56]
 4021 2e40 0B68     		ldr	r3, [r1]
 4022 2e42 5A02     		lsls	r2, r3, #9
 4023 2e44 0368     		ldr	r3, [r0]
 4024 2e46 DB0D     		lsrs	r3, r3, #23
 4025 2e48 1343     		orrs	r3, r3, r2
 4026 2e4a FB63     		str	r3, [r7, #60]
 4027 2e4c D7E90E23 		ldrd	r2, [r7, #56]
 4028 2e50 07F69821 		addw	r1, r7, #2712
 4029 2e54 C1E90023 		strd	r2, [r1]
 312:fips202.c     ****             Ese ^= De;
 4030              		.loc 1 312 17 discriminator 3
 4031 2e58 07F6B813 		addw	r3, r7, #2488
 4032 2e5c D3E90001 		ldrd	r0, [r3]
 4033 2e60 07F52863 		add	r3, r7, #2688
 4034 2e64 D3E90023 		ldrd	r2, [r3]
 4035 2e68 80EA020C 		eor	ip, r0, r2
 4036 2e6c C7F830C0 		str	ip, [r7, #48]
 4037 2e70 4B40     		eors	r3, r3, r1
 4038 2e72 7B63     		str	r3, [r7, #52]
 4039 2e74 D7E90C23 		ldrd	r2, [r7, #48]
 4040 2e78 07F6B811 		addw	r1, r7, #2488
 4041 2e7c C1E90023 		strd	r2, [r1]
 313:fips202.c     ****             BCu = ROL(Ese, 2);
 4042              		.loc 1 313 17 discriminator 3
 4043 2e80 07F68833 		addw	r3, r7, #2952
 4044 2e84 A3F5E870 		sub	r0, r3, #464
 4045 2e88 07F68833 		addw	r3, r7, #2952
 4046 2e8c A3F5E671 		sub	r1, r3, #460
 4047 2e90 0368     		ldr	r3, [r0]
 4048 2e92 9A0F     		lsrs	r2, r3, #30
 4049 2e94 0B68     		ldr	r3, [r1]
 4050 2e96 9B00     		lsls	r3, r3, #2
 4051 2e98 1343     		orrs	r3, r3, r2
 4052 2e9a FB62     		str	r3, [r7, #44]
 4053 2e9c 0B68     		ldr	r3, [r1]
 4054 2e9e 9A0F     		lsrs	r2, r3, #30
 4055 2ea0 0368     		ldr	r3, [r0]
 4056 2ea2 9B00     		lsls	r3, r3, #2
 4057 2ea4 1343     		orrs	r3, r3, r2
 4058 2ea6 BB62     		str	r3, [r7, #40]
 4059 2ea8 D7E90A23 		ldrd	r2, [r7, #40]
 4060 2eac 07F52961 		add	r1, r7, #2704
 4061 2eb0 C1E90023 		strd	r2, [r1]
 314:fips202.c     ****             Asa =   BCa ^((~BCe)&  BCi );
 4062              		.loc 1 314 28 discriminator 3
 4063 2eb4 07F6A823 		addw	r3, r7, #2728
 4064 2eb8 D3E90023 		ldrd	r2, [r3]
 4065 2ebc D143     		mvns	r1, r2
 4066 2ebe C7F88015 		str	r1, [r7, #1408]
 4067 2ec2 DB43     		mvns	r3, r3
 4068 2ec4 C7F88435 		str	r3, [r7, #1412]
 4069              		.loc 1 314 33 discriminator 3
 4070 2ec8 07F52A63 		add	r3, r7, #2720
 4071 2ecc D3E90023 		ldrd	r2, [r3]
 4072 2ed0 07F5B061 		add	r1, r7, #1408
 4073 2ed4 D1E90001 		ldrd	r0, [r1]
 4074 2ed8 8446     		mov	ip, r0
 4075 2eda 0CEA020C 		and	ip, ip, r2
 4076 2ede C7F878C5 		str	ip, [r7, #1400]
 4077 2ee2 0B40     		ands	r3, r3, r1
 4078 2ee4 C7F87C35 		str	r3, [r7, #1404]
 4079              		.loc 1 314 17 discriminator 3
 4080 2ee8 07F52B63 		add	r3, r7, #2736
 4081 2eec D3E90023 		ldrd	r2, [r3]
 4082 2ef0 07F5AF61 		add	r1, r7, #1400
 4083 2ef4 D1E90001 		ldrd	r0, [r1]
 4084 2ef8 8446     		mov	ip, r0
 4085 2efa 82EA0C0C 		eor	ip, r2, ip
 4086 2efe C7F820C0 		str	ip, [r7, #32]
 4087 2f02 4B40     		eors	r3, r3, r1
 4088 2f04 7B62     		str	r3, [r7, #36]
 4089 2f06 D7E90823 		ldrd	r2, [r7, #32]
 4090 2f0a 07F6D821 		addw	r1, r7, #2776
 4091 2f0e C1E90023 		strd	r2, [r1]
 315:fips202.c     ****             Ase =   BCe ^((~BCi)&  BCo );
 4092              		.loc 1 315 28 discriminator 3
 4093 2f12 07F52A63 		add	r3, r7, #2720
 4094 2f16 D3E90023 		ldrd	r2, [r3]
 4095 2f1a D143     		mvns	r1, r2
 4096 2f1c C7F87015 		str	r1, [r7, #1392]
 4097 2f20 DB43     		mvns	r3, r3
 4098 2f22 C7F87435 		str	r3, [r7, #1396]
 4099              		.loc 1 315 33 discriminator 3
 4100 2f26 07F69823 		addw	r3, r7, #2712
 4101 2f2a D3E90023 		ldrd	r2, [r3]
 4102 2f2e 07F5AE61 		add	r1, r7, #1392
 4103 2f32 D1E90001 		ldrd	r0, [r1]
 4104 2f36 8446     		mov	ip, r0
 4105 2f38 0CEA020C 		and	ip, ip, r2
 4106 2f3c C7F868C5 		str	ip, [r7, #1384]
 4107 2f40 0B40     		ands	r3, r3, r1
 4108 2f42 C7F86C35 		str	r3, [r7, #1388]
 4109              		.loc 1 315 17 discriminator 3
 4110 2f46 07F6A823 		addw	r3, r7, #2728
 4111 2f4a D3E90023 		ldrd	r2, [r3]
 4112 2f4e 07F5AD61 		add	r1, r7, #1384
 4113 2f52 D1E90001 		ldrd	r0, [r1]
 4114 2f56 8446     		mov	ip, r0
 4115 2f58 82EA0C0C 		eor	ip, r2, ip
 4116 2f5c C7F818C0 		str	ip, [r7, #24]
 4117 2f60 4B40     		eors	r3, r3, r1
 4118 2f62 FB61     		str	r3, [r7, #28]
 4119 2f64 D7E90623 		ldrd	r2, [r7, #24]
 4120 2f68 07F52D61 		add	r1, r7, #2768
 4121 2f6c C1E90023 		strd	r2, [r1]
 316:fips202.c     ****             Asi =   BCi ^((~BCo)&  BCu );
 4122              		.loc 1 316 28 discriminator 3
 4123 2f70 07F69823 		addw	r3, r7, #2712
 4124 2f74 D3E90023 		ldrd	r2, [r3]
 4125 2f78 D143     		mvns	r1, r2
 4126 2f7a C7F86015 		str	r1, [r7, #1376]
 4127 2f7e DB43     		mvns	r3, r3
 4128 2f80 C7F86435 		str	r3, [r7, #1380]
 4129              		.loc 1 316 33 discriminator 3
 4130 2f84 07F52963 		add	r3, r7, #2704
 4131 2f88 D3E90023 		ldrd	r2, [r3]
 4132 2f8c 07F5AC61 		add	r1, r7, #1376
 4133 2f90 D1E90001 		ldrd	r0, [r1]
 4134 2f94 8446     		mov	ip, r0
 4135 2f96 0CEA020C 		and	ip, ip, r2
 4136 2f9a C7F858C5 		str	ip, [r7, #1368]
 4137 2f9e 0B40     		ands	r3, r3, r1
 4138 2fa0 C7F85C35 		str	r3, [r7, #1372]
 4139              		.loc 1 316 17 discriminator 3
 4140 2fa4 07F52A63 		add	r3, r7, #2720
 4141 2fa8 D3E90023 		ldrd	r2, [r3]
 4142 2fac 07F5AB61 		add	r1, r7, #1368
 4143 2fb0 D1E90001 		ldrd	r0, [r1]
 4144 2fb4 8446     		mov	ip, r0
 4145 2fb6 82EA0C0C 		eor	ip, r2, ip
 4146 2fba C7F810C0 		str	ip, [r7, #16]
 4147 2fbe 4B40     		eors	r3, r3, r1
 4148 2fc0 7B61     		str	r3, [r7, #20]
 4149 2fc2 D7E90423 		ldrd	r2, [r7, #16]
 4150 2fc6 07F6C821 		addw	r1, r7, #2760
 4151 2fca C1E90023 		strd	r2, [r1]
 317:fips202.c     ****             Aso =   BCo ^((~BCu)&  BCa );
 4152              		.loc 1 317 28 discriminator 3
 4153 2fce 07F52963 		add	r3, r7, #2704
 4154 2fd2 D3E90023 		ldrd	r2, [r3]
 4155 2fd6 D143     		mvns	r1, r2
 4156 2fd8 C7F85015 		str	r1, [r7, #1360]
 4157 2fdc DB43     		mvns	r3, r3
 4158 2fde C7F85435 		str	r3, [r7, #1364]
 4159              		.loc 1 317 33 discriminator 3
 4160 2fe2 07F52B63 		add	r3, r7, #2736
 4161 2fe6 D3E90023 		ldrd	r2, [r3]
 4162 2fea 07F5AA61 		add	r1, r7, #1360
 4163 2fee D1E90001 		ldrd	r0, [r1]
 4164 2ff2 8446     		mov	ip, r0
 4165 2ff4 0CEA020A 		and	r10, ip, r2
 4166 2ff8 01EA030B 		and	fp, r1, r3
 4167              		.loc 1 317 17 discriminator 3
 4168 2ffc 07F69823 		addw	r3, r7, #2712
 4169 3000 D3E90023 		ldrd	r2, [r3]
 4170 3004 82EA0A01 		eor	r1, r2, r10
 4171 3008 B960     		str	r1, [r7, #8]
 4172 300a 83EA0B03 		eor	r3, r3, fp
 4173 300e FB60     		str	r3, [r7, #12]
 4174 3010 D7E90223 		ldrd	r2, [r7, #8]
 4175 3014 07F52C61 		add	r1, r7, #2752
 4176 3018 C1E90023 		strd	r2, [r1]
 318:fips202.c     ****             Asu =   BCu ^((~BCa)&  BCe );
 4177              		.loc 1 318 28 discriminator 3
 4178 301c 07F52B63 		add	r3, r7, #2736
 4179 3020 D3E90023 		ldrd	r2, [r3]
 4180 3024 6FEA0208 		mvn	r8, r2
 4181 3028 6FEA0309 		mvn	r9, r3
 4182              		.loc 1 318 33 discriminator 3
 4183 302c 07F6A823 		addw	r3, r7, #2728
 4184 3030 D3E90023 		ldrd	r2, [r3]
 4185 3034 08EA0204 		and	r4, r8, r2
 4186 3038 09EA0305 		and	r5, r9, r3
 4187              		.loc 1 318 17 discriminator 3
 4188 303c 07F52963 		add	r3, r7, #2704
 4189 3040 D3E90023 		ldrd	r2, [r3]
 4190 3044 82EA0401 		eor	r1, r2, r4
 4191 3048 3960     		str	r1, [r7]
 4192 304a 6B40     		eors	r3, r3, r5
 4193 304c 7B60     		str	r3, [r7, #4]
 4194 304e D7E90023 		ldrd	r2, [r7]
 4195 3052 07F6B821 		addw	r1, r7, #2744
 4196 3056 C1E90023 		strd	r2, [r1]
 128:fips202.c     ****         {
 4197              		.loc 1 128 48 discriminator 3
 4198 305a D7F8843B 		ldr	r3, [r7, #2948]
 4199 305e 0233     		adds	r3, r3, #2
 4200 3060 C7F8843B 		str	r3, [r7, #2948]
 4201              	.L9:
 128:fips202.c     ****         {
 4202              		.loc 1 128 9 discriminator 1
 4203 3064 D7F8843B 		ldr	r3, [r7, #2948]
 4204 3068 172B     		cmp	r3, #23
 4205 306a 7DF7EBA8 		ble	.L10
 319:fips202.c     ****         }
 320:fips202.c     **** 
 321:fips202.c     ****         //copyToState(state, A)
 322:fips202.c     ****         state[ 0] = Aba;
 4206              		.loc 1 322 19
 4207 306e 07F68833 		addw	r3, r7, #2952
 4208 3072 A3F5F673 		sub	r3, r3, #492
 4209 3076 1968     		ldr	r1, [r3]
 4210 3078 07F67833 		addw	r3, r7, #2936
 4211 307c D3E90023 		ldrd	r2, [r3]
 4212 3080 C1E90023 		strd	r2, [r1]
 323:fips202.c     ****         state[ 1] = Abe;
 4213              		.loc 1 323 14
 4214 3084 07F68833 		addw	r3, r7, #2952
 4215 3088 A3F5F673 		sub	r3, r3, #492
 4216 308c 1B68     		ldr	r3, [r3]
 4217 308e 03F10801 		add	r1, r3, #8
 4218              		.loc 1 323 19
 4219 3092 07F53763 		add	r3, r7, #2928
 4220 3096 D3E90023 		ldrd	r2, [r3]
 4221 309a C1E90023 		strd	r2, [r1]
 324:fips202.c     ****         state[ 2] = Abi;
 4222              		.loc 1 324 14
 4223 309e 07F68833 		addw	r3, r7, #2952
 4224 30a2 A3F5F673 		sub	r3, r3, #492
 4225 30a6 1B68     		ldr	r3, [r3]
 4226 30a8 03F11001 		add	r1, r3, #16
 4227              		.loc 1 324 19
 4228 30ac 07F66833 		addw	r3, r7, #2920
 4229 30b0 D3E90023 		ldrd	r2, [r3]
 4230 30b4 C1E90023 		strd	r2, [r1]
 325:fips202.c     ****         state[ 3] = Abo;
 4231              		.loc 1 325 14
 4232 30b8 07F68833 		addw	r3, r7, #2952
 4233 30bc A3F5F673 		sub	r3, r3, #492
 4234 30c0 1B68     		ldr	r3, [r3]
 4235 30c2 03F11801 		add	r1, r3, #24
 4236              		.loc 1 325 19
 4237 30c6 07F53663 		add	r3, r7, #2912
 4238 30ca D3E90023 		ldrd	r2, [r3]
 4239 30ce C1E90023 		strd	r2, [r1]
 326:fips202.c     ****         state[ 4] = Abu;
 4240              		.loc 1 326 14
 4241 30d2 07F68833 		addw	r3, r7, #2952
 4242 30d6 A3F5F673 		sub	r3, r3, #492
 4243 30da 1B68     		ldr	r3, [r3]
 4244 30dc 03F12001 		add	r1, r3, #32
 4245              		.loc 1 326 19
 4246 30e0 07F65833 		addw	r3, r7, #2904
 4247 30e4 D3E90023 		ldrd	r2, [r3]
 4248 30e8 C1E90023 		strd	r2, [r1]
 327:fips202.c     ****         state[ 5] = Aga;
 4249              		.loc 1 327 14
 4250 30ec 07F68833 		addw	r3, r7, #2952
 4251 30f0 A3F5F673 		sub	r3, r3, #492
 4252 30f4 1B68     		ldr	r3, [r3]
 4253 30f6 03F12801 		add	r1, r3, #40
 4254              		.loc 1 327 19
 4255 30fa 07F53563 		add	r3, r7, #2896
 4256 30fe D3E90023 		ldrd	r2, [r3]
 4257 3102 C1E90023 		strd	r2, [r1]
 328:fips202.c     ****         state[ 6] = Age;
 4258              		.loc 1 328 14
 4259 3106 07F68833 		addw	r3, r7, #2952
 4260 310a A3F5F673 		sub	r3, r3, #492
 4261 310e 1B68     		ldr	r3, [r3]
 4262 3110 03F13001 		add	r1, r3, #48
 4263              		.loc 1 328 19
 4264 3114 07F64833 		addw	r3, r7, #2888
 4265 3118 D3E90023 		ldrd	r2, [r3]
 4266 311c C1E90023 		strd	r2, [r1]
 329:fips202.c     ****         state[ 7] = Agi;
 4267              		.loc 1 329 14
 4268 3120 07F68833 		addw	r3, r7, #2952
 4269 3124 A3F5F673 		sub	r3, r3, #492
 4270 3128 1B68     		ldr	r3, [r3]
 4271 312a 03F13801 		add	r1, r3, #56
 4272              		.loc 1 329 19
 4273 312e 07F53463 		add	r3, r7, #2880
 4274 3132 D3E90023 		ldrd	r2, [r3]
 4275 3136 C1E90023 		strd	r2, [r1]
 330:fips202.c     ****         state[ 8] = Ago;
 4276              		.loc 1 330 14
 4277 313a 07F68833 		addw	r3, r7, #2952
 4278 313e A3F5F673 		sub	r3, r3, #492
 4279 3142 1B68     		ldr	r3, [r3]
 4280 3144 03F14001 		add	r1, r3, #64
 4281              		.loc 1 330 19
 4282 3148 07F63833 		addw	r3, r7, #2872
 4283 314c D3E90023 		ldrd	r2, [r3]
 4284 3150 C1E90023 		strd	r2, [r1]
 331:fips202.c     ****         state[ 9] = Agu;
 4285              		.loc 1 331 14
 4286 3154 07F68833 		addw	r3, r7, #2952
 4287 3158 A3F5F673 		sub	r3, r3, #492
 4288 315c 1B68     		ldr	r3, [r3]
 4289 315e 03F14801 		add	r1, r3, #72
 4290              		.loc 1 331 19
 4291 3162 07F53363 		add	r3, r7, #2864
 4292 3166 D3E90023 		ldrd	r2, [r3]
 4293 316a C1E90023 		strd	r2, [r1]
 332:fips202.c     ****         state[10] = Aka;
 4294              		.loc 1 332 14
 4295 316e 07F68833 		addw	r3, r7, #2952
 4296 3172 A3F5F673 		sub	r3, r3, #492
 4297 3176 1B68     		ldr	r3, [r3]
 4298 3178 03F15001 		add	r1, r3, #80
 4299              		.loc 1 332 19
 4300 317c 07F62833 		addw	r3, r7, #2856
 4301 3180 D3E90023 		ldrd	r2, [r3]
 4302 3184 C1E90023 		strd	r2, [r1]
 333:fips202.c     ****         state[11] = Ake;
 4303              		.loc 1 333 14
 4304 3188 07F68833 		addw	r3, r7, #2952
 4305 318c A3F5F673 		sub	r3, r3, #492
 4306 3190 1B68     		ldr	r3, [r3]
 4307 3192 03F15801 		add	r1, r3, #88
 4308              		.loc 1 333 19
 4309 3196 07F53263 		add	r3, r7, #2848
 4310 319a D3E90023 		ldrd	r2, [r3]
 4311 319e C1E90023 		strd	r2, [r1]
 334:fips202.c     ****         state[12] = Aki;
 4312              		.loc 1 334 14
 4313 31a2 07F68833 		addw	r3, r7, #2952
 4314 31a6 A3F5F673 		sub	r3, r3, #492
 4315 31aa 1B68     		ldr	r3, [r3]
 4316 31ac 03F16001 		add	r1, r3, #96
 4317              		.loc 1 334 19
 4318 31b0 07F61833 		addw	r3, r7, #2840
 4319 31b4 D3E90023 		ldrd	r2, [r3]
 4320 31b8 C1E90023 		strd	r2, [r1]
 335:fips202.c     ****         state[13] = Ako;
 4321              		.loc 1 335 14
 4322 31bc 07F68833 		addw	r3, r7, #2952
 4323 31c0 A3F5F673 		sub	r3, r3, #492
 4324 31c4 1B68     		ldr	r3, [r3]
 4325 31c6 03F16801 		add	r1, r3, #104
 4326              		.loc 1 335 19
 4327 31ca 07F53163 		add	r3, r7, #2832
 4328 31ce D3E90023 		ldrd	r2, [r3]
 4329 31d2 C1E90023 		strd	r2, [r1]
 336:fips202.c     ****         state[14] = Aku;
 4330              		.loc 1 336 14
 4331 31d6 07F68833 		addw	r3, r7, #2952
 4332 31da A3F5F673 		sub	r3, r3, #492
 4333 31de 1B68     		ldr	r3, [r3]
 4334 31e0 03F17001 		add	r1, r3, #112
 4335              		.loc 1 336 19
 4336 31e4 07F60833 		addw	r3, r7, #2824
 4337 31e8 D3E90023 		ldrd	r2, [r3]
 4338 31ec C1E90023 		strd	r2, [r1]
 337:fips202.c     ****         state[15] = Ama;
 4339              		.loc 1 337 14
 4340 31f0 07F68833 		addw	r3, r7, #2952
 4341 31f4 A3F5F673 		sub	r3, r3, #492
 4342 31f8 1B68     		ldr	r3, [r3]
 4343 31fa 03F17801 		add	r1, r3, #120
 4344              		.loc 1 337 19
 4345 31fe 07F53063 		add	r3, r7, #2816
 4346 3202 D3E90023 		ldrd	r2, [r3]
 4347 3206 C1E90023 		strd	r2, [r1]
 338:fips202.c     ****         state[16] = Ame;
 4348              		.loc 1 338 14
 4349 320a 07F68833 		addw	r3, r7, #2952
 4350 320e A3F5F673 		sub	r3, r3, #492
 4351 3212 1B68     		ldr	r3, [r3]
 4352 3214 03F18001 		add	r1, r3, #128
 4353              		.loc 1 338 19
 4354 3218 07F6F823 		addw	r3, r7, #2808
 4355 321c D3E90023 		ldrd	r2, [r3]
 4356 3220 C1E90023 		strd	r2, [r1]
 339:fips202.c     ****         state[17] = Ami;
 4357              		.loc 1 339 14
 4358 3224 07F68833 		addw	r3, r7, #2952
 4359 3228 A3F5F673 		sub	r3, r3, #492
 4360 322c 1B68     		ldr	r3, [r3]
 4361 322e 03F18801 		add	r1, r3, #136
 4362              		.loc 1 339 19
 4363 3232 07F52F63 		add	r3, r7, #2800
 4364 3236 D3E90023 		ldrd	r2, [r3]
 4365 323a C1E90023 		strd	r2, [r1]
 340:fips202.c     ****         state[18] = Amo;
 4366              		.loc 1 340 14
 4367 323e 07F68833 		addw	r3, r7, #2952
 4368 3242 A3F5F673 		sub	r3, r3, #492
 4369 3246 1B68     		ldr	r3, [r3]
 4370 3248 03F19001 		add	r1, r3, #144
 4371              		.loc 1 340 19
 4372 324c 07F6E823 		addw	r3, r7, #2792
 4373 3250 D3E90023 		ldrd	r2, [r3]
 4374 3254 C1E90023 		strd	r2, [r1]
 341:fips202.c     ****         state[19] = Amu;
 4375              		.loc 1 341 14
 4376 3258 07F68833 		addw	r3, r7, #2952
 4377 325c A3F5F673 		sub	r3, r3, #492
 4378 3260 1B68     		ldr	r3, [r3]
 4379 3262 03F19801 		add	r1, r3, #152
 4380              		.loc 1 341 19
 4381 3266 07F52E63 		add	r3, r7, #2784
 4382 326a D3E90023 		ldrd	r2, [r3]
 4383 326e C1E90023 		strd	r2, [r1]
 342:fips202.c     ****         state[20] = Asa;
 4384              		.loc 1 342 14
 4385 3272 07F68833 		addw	r3, r7, #2952
 4386 3276 A3F5F673 		sub	r3, r3, #492
 4387 327a 1B68     		ldr	r3, [r3]
 4388 327c 03F1A001 		add	r1, r3, #160
 4389              		.loc 1 342 19
 4390 3280 07F6D823 		addw	r3, r7, #2776
 4391 3284 D3E90023 		ldrd	r2, [r3]
 4392 3288 C1E90023 		strd	r2, [r1]
 343:fips202.c     ****         state[21] = Ase;
 4393              		.loc 1 343 14
 4394 328c 07F68833 		addw	r3, r7, #2952
 4395 3290 A3F5F673 		sub	r3, r3, #492
 4396 3294 1B68     		ldr	r3, [r3]
 4397 3296 03F1A801 		add	r1, r3, #168
 4398              		.loc 1 343 19
 4399 329a 07F52D63 		add	r3, r7, #2768
 4400 329e D3E90023 		ldrd	r2, [r3]
 4401 32a2 C1E90023 		strd	r2, [r1]
 344:fips202.c     ****         state[22] = Asi;
 4402              		.loc 1 344 14
 4403 32a6 07F68833 		addw	r3, r7, #2952
 4404 32aa A3F5F673 		sub	r3, r3, #492
 4405 32ae 1B68     		ldr	r3, [r3]
 4406 32b0 03F1B001 		add	r1, r3, #176
 4407              		.loc 1 344 19
 4408 32b4 07F6C823 		addw	r3, r7, #2760
 4409 32b8 D3E90023 		ldrd	r2, [r3]
 4410 32bc C1E90023 		strd	r2, [r1]
 345:fips202.c     ****         state[23] = Aso;
 4411              		.loc 1 345 14
 4412 32c0 07F68833 		addw	r3, r7, #2952
 4413 32c4 A3F5F673 		sub	r3, r3, #492
 4414 32c8 1B68     		ldr	r3, [r3]
 4415 32ca 03F1B801 		add	r1, r3, #184
 4416              		.loc 1 345 19
 4417 32ce 07F52C63 		add	r3, r7, #2752
 4418 32d2 D3E90023 		ldrd	r2, [r3]
 4419 32d6 C1E90023 		strd	r2, [r1]
 346:fips202.c     ****         state[24] = Asu;
 4420              		.loc 1 346 14
 4421 32da 07F68833 		addw	r3, r7, #2952
 4422 32de A3F5F673 		sub	r3, r3, #492
 4423 32e2 1B68     		ldr	r3, [r3]
 4424 32e4 03F1C001 		add	r1, r3, #192
 4425              		.loc 1 346 19
 4426 32e8 07F6B823 		addw	r3, r7, #2744
 4427 32ec D3E90023 		ldrd	r2, [r3]
 4428 32f0 C1E90023 		strd	r2, [r1]
 347:fips202.c     **** }
 4429              		.loc 1 347 1
 4430 32f4 00BF     		nop
 4431 32f6 07F68C37 		addw	r7, r7, #2956
 4432              	.LCFI15:
 4433              		.cfi_def_cfa_offset 28
 4434 32fa BD46     		mov	sp, r7
 4435              	.LCFI16:
 4436              		.cfi_def_cfa_register 13
 4437              		@ sp needed
 4438 32fc BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 4439              	.LCFI17:
 4440              		.cfi_restore 11
 4441              		.cfi_restore 10
 4442              		.cfi_restore 9
 4443              		.cfi_restore 8
 4444              		.cfi_restore 7
 4445              		.cfi_restore 5
 4446              		.cfi_restore 4
 4447              		.cfi_def_cfa_offset 0
 4448 3300 7047     		bx	lr
 4449              		.cfi_endproc
 4450              	.LFE2:
 4452 3302 00BF     		.section	.text.keccak_init,"ax",%progbits
 4453              		.align	1
 4454              		.syntax unified
 4455              		.thumb
 4456              		.thumb_func
 4457              		.fpu softvfp
 4459              	keccak_init:
 4460              	.LFB3:
 348:fips202.c     **** 
 349:fips202.c     **** /*************************************************
 350:fips202.c     **** * Name:        keccak_init
 351:fips202.c     **** *
 352:fips202.c     **** * Description: Initializes the Keccak state.
 353:fips202.c     **** *
 354:fips202.c     **** * Arguments:   - keccak_state *state: pointer to Keccak state
 355:fips202.c     **** **************************************************/
 356:fips202.c     **** static void keccak_init(keccak_state *state)
 357:fips202.c     **** {
 4461              		.loc 1 357 1
 4462              		.cfi_startproc
 4463              		@ args = 0, pretend = 0, frame = 16
 4464              		@ frame_needed = 1, uses_anonymous_args = 0
 4465              		@ link register save eliminated.
 4466 0000 80B4     		push	{r7}
 4467              	.LCFI18:
 4468              		.cfi_def_cfa_offset 4
 4469              		.cfi_offset 7, -4
 4470 0002 85B0     		sub	sp, sp, #20
 4471              	.LCFI19:
 4472              		.cfi_def_cfa_offset 24
 4473 0004 00AF     		add	r7, sp, #0
 4474              	.LCFI20:
 4475              		.cfi_def_cfa_register 7
 4476 0006 7860     		str	r0, [r7, #4]
 358:fips202.c     ****   unsigned int i;
 359:fips202.c     ****   for(i=0;i<25;i++)
 4477              		.loc 1 359 8
 4478 0008 0023     		movs	r3, #0
 4479 000a FB60     		str	r3, [r7, #12]
 4480              		.loc 1 359 3
 4481 000c 0CE0     		b	.L18
 4482              	.L19:
 360:fips202.c     ****     state->s[i] = 0;
 4483              		.loc 1 360 17 discriminator 3
 4484 000e 7A68     		ldr	r2, [r7, #4]
 4485 0010 FB68     		ldr	r3, [r7, #12]
 4486 0012 DB00     		lsls	r3, r3, #3
 4487 0014 D118     		adds	r1, r2, r3
 4488 0016 4FF00002 		mov	r2, #0
 4489 001a 4FF00003 		mov	r3, #0
 4490 001e C1E90023 		strd	r2, [r1]
 359:fips202.c     ****     state->s[i] = 0;
 4491              		.loc 1 359 17 discriminator 3
 4492 0022 FB68     		ldr	r3, [r7, #12]
 4493 0024 0133     		adds	r3, r3, #1
 4494 0026 FB60     		str	r3, [r7, #12]
 4495              	.L18:
 359:fips202.c     ****     state->s[i] = 0;
 4496              		.loc 1 359 3 discriminator 1
 4497 0028 FB68     		ldr	r3, [r7, #12]
 4498 002a 182B     		cmp	r3, #24
 4499 002c EFD9     		bls	.L19
 361:fips202.c     ****   state->pos = 0;
 4500              		.loc 1 361 14
 4501 002e 7B68     		ldr	r3, [r7, #4]
 4502 0030 0022     		movs	r2, #0
 4503 0032 C3F8C820 		str	r2, [r3, #200]
 362:fips202.c     **** }
 4504              		.loc 1 362 1
 4505 0036 00BF     		nop
 4506 0038 1437     		adds	r7, r7, #20
 4507              	.LCFI21:
 4508              		.cfi_def_cfa_offset 4
 4509 003a BD46     		mov	sp, r7
 4510              	.LCFI22:
 4511              		.cfi_def_cfa_register 13
 4512              		@ sp needed
 4513 003c 80BC     		pop	{r7}
 4514              	.LCFI23:
 4515              		.cfi_restore 7
 4516              		.cfi_def_cfa_offset 0
 4517 003e 7047     		bx	lr
 4518              		.cfi_endproc
 4519              	.LFE3:
 4521              		.section	.text.keccak_absorb,"ax",%progbits
 4522              		.align	1
 4523              		.syntax unified
 4524              		.thumb
 4525              		.thumb_func
 4526              		.fpu softvfp
 4528              	keccak_absorb:
 4529              	.LFB4:
 363:fips202.c     **** 
 364:fips202.c     **** /*************************************************
 365:fips202.c     **** * Name:        keccak_absorb
 366:fips202.c     **** *
 367:fips202.c     **** * Description: Absorb step of Keccak; incremental.
 368:fips202.c     **** *
 369:fips202.c     **** * Arguments:   - uint64_t *s:      pointer to Keccak state
 370:fips202.c     **** *              - unsigned int r:   rate in bytes (e.g., 168 for SHAKE128)
 371:fips202.c     **** *              - unsigned int pos: position in current block to be absorbed
 372:fips202.c     **** *              - const uint8_t *m: pointer to input to be absorbed into s
 373:fips202.c     **** *              - size_t mlen:      length of input in bytes
 374:fips202.c     **** *
 375:fips202.c     **** * Returns new position pos in current block
 376:fips202.c     **** **************************************************/
 377:fips202.c     **** static unsigned int keccak_absorb(uint64_t s[25],
 378:fips202.c     ****                                   unsigned int r,
 379:fips202.c     ****                                   unsigned int pos,
 380:fips202.c     ****                                   const uint8_t *m,
 381:fips202.c     ****                                   size_t mlen)
 382:fips202.c     **** {
 4530              		.loc 1 382 1
 4531              		.cfi_startproc
 4532              		@ args = 4, pretend = 0, frame = 56
 4533              		@ frame_needed = 1, uses_anonymous_args = 0
 4534 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 4535              	.LCFI24:
 4536              		.cfi_def_cfa_offset 32
 4537              		.cfi_offset 4, -32
 4538              		.cfi_offset 5, -28
 4539              		.cfi_offset 7, -24
 4540              		.cfi_offset 8, -20
 4541              		.cfi_offset 9, -16
 4542              		.cfi_offset 10, -12
 4543              		.cfi_offset 11, -8
 4544              		.cfi_offset 14, -4
 4545 0004 8EB0     		sub	sp, sp, #56
 4546              	.LCFI25:
 4547              		.cfi_def_cfa_offset 88
 4548 0006 00AF     		add	r7, sp, #0
 4549              	.LCFI26:
 4550              		.cfi_def_cfa_register 7
 4551 0008 7862     		str	r0, [r7, #36]
 4552 000a 3962     		str	r1, [r7, #32]
 4553 000c FA61     		str	r2, [r7, #28]
 4554 000e BB61     		str	r3, [r7, #24]
 383:fips202.c     ****   unsigned int i;
 384:fips202.c     ****   uint8_t t[8] = {0};
 4555              		.loc 1 384 11
 4556 0010 0023     		movs	r3, #0
 4557 0012 FB62     		str	r3, [r7, #44]
 4558 0014 0023     		movs	r3, #0
 4559 0016 3B63     		str	r3, [r7, #48]
 385:fips202.c     **** 
 386:fips202.c     ****   if(pos & 7) {
 4560              		.loc 1 386 10
 4561 0018 FB69     		ldr	r3, [r7, #28]
 4562 001a 03F00703 		and	r3, r3, #7
 4563              		.loc 1 386 5
 4564 001e 002B     		cmp	r3, #0
 4565 0020 39D0     		beq	.L21
 387:fips202.c     ****     i = pos & 7;
 4566              		.loc 1 387 7
 4567 0022 FB69     		ldr	r3, [r7, #28]
 4568 0024 03F00703 		and	r3, r3, #7
 4569 0028 7B63     		str	r3, [r7, #52]
 388:fips202.c     ****     while(i < 8 && mlen > 0) {
 4570              		.loc 1 388 10
 4571 002a 11E0     		b	.L22
 4572              	.L24:
 389:fips202.c     ****       t[i++] = *m++;
 4573              		.loc 1 389 18
 4574 002c BA69     		ldr	r2, [r7, #24]
 4575 002e 531C     		adds	r3, r2, #1
 4576 0030 BB61     		str	r3, [r7, #24]
 4577              		.loc 1 389 10
 4578 0032 7B6B     		ldr	r3, [r7, #52]
 4579 0034 591C     		adds	r1, r3, #1
 4580 0036 7963     		str	r1, [r7, #52]
 4581              		.loc 1 389 16
 4582 0038 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4583              		.loc 1 389 14
 4584 003a 07F13801 		add	r1, r7, #56
 4585 003e 0B44     		add	r3, r3, r1
 4586 0040 03F80C2C 		strb	r2, [r3, #-12]
 390:fips202.c     ****       mlen--;
 4587              		.loc 1 390 11
 4588 0044 BB6D     		ldr	r3, [r7, #88]
 4589 0046 013B     		subs	r3, r3, #1
 4590 0048 BB65     		str	r3, [r7, #88]
 391:fips202.c     ****       pos++;
 4591              		.loc 1 391 10
 4592 004a FB69     		ldr	r3, [r7, #28]
 4593 004c 0133     		adds	r3, r3, #1
 4594 004e FB61     		str	r3, [r7, #28]
 4595              	.L22:
 388:fips202.c     ****       t[i++] = *m++;
 4596              		.loc 1 388 10
 4597 0050 7B6B     		ldr	r3, [r7, #52]
 4598 0052 072B     		cmp	r3, #7
 4599 0054 02D8     		bhi	.L23
 388:fips202.c     ****       t[i++] = *m++;
 4600              		.loc 1 388 17 discriminator 1
 4601 0056 BB6D     		ldr	r3, [r7, #88]
 4602 0058 002B     		cmp	r3, #0
 4603 005a E7D1     		bne	.L24
 4604              	.L23:
 392:fips202.c     ****     }
 393:fips202.c     ****     s[(pos-i)/8] ^= load64(t);
 4605              		.loc 1 393 21
 4606 005c 07F12C03 		add	r3, r7, #44
 4607 0060 1846     		mov	r0, r3
 4608 0062 FFF7FEFF 		bl	load64
 4609 0066 0446     		mov	r4, r0
 4610 0068 0D46     		mov	r5, r1
 4611              		.loc 1 393 18
 4612 006a FA69     		ldr	r2, [r7, #28]
 4613 006c 7B6B     		ldr	r3, [r7, #52]
 4614 006e D31A     		subs	r3, r2, r3
 4615 0070 23F00703 		bic	r3, r3, #7
 4616 0074 7A6A     		ldr	r2, [r7, #36]
 4617 0076 1344     		add	r3, r3, r2
 4618 0078 D3E90001 		ldrd	r0, [r3]
 4619 007c FA69     		ldr	r2, [r7, #28]
 4620 007e 7B6B     		ldr	r3, [r7, #52]
 4621 0080 D31A     		subs	r3, r2, r3
 4622 0082 23F00702 		bic	r2, r3, #7
 4623 0086 7B6A     		ldr	r3, [r7, #36]
 4624 0088 1344     		add	r3, r3, r2
 4625 008a 84EA0008 		eor	r8, r4, r0
 4626 008e 85EA0109 		eor	r9, r5, r1
 4627 0092 C3E90089 		strd	r8, [r3]
 4628              	.L21:
 394:fips202.c     ****   }
 395:fips202.c     **** 
 396:fips202.c     ****   if(pos && mlen >= r-pos) {
 4629              		.loc 1 396 5
 4630 0096 FB69     		ldr	r3, [r7, #28]
 4631 0098 002B     		cmp	r3, #0
 4632 009a 75D0     		beq	.L28
 4633              		.loc 1 396 22 discriminator 1
 4634 009c 3A6A     		ldr	r2, [r7, #32]
 4635 009e FB69     		ldr	r3, [r7, #28]
 4636 00a0 D31A     		subs	r3, r2, r3
 4637              		.loc 1 396 10 discriminator 1
 4638 00a2 BA6D     		ldr	r2, [r7, #88]
 4639 00a4 9A42     		cmp	r2, r3
 4640 00a6 6FD3     		bcc	.L28
 397:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 4641              		.loc 1 397 10
 4642 00a8 0023     		movs	r3, #0
 4643 00aa 7B63     		str	r3, [r7, #52]
 4644              		.loc 1 397 5
 4645 00ac 23E0     		b	.L26
 4646              	.L27:
 398:fips202.c     ****       s[pos/8+i] ^= load64(m+8*i);
 4647              		.loc 1 398 31 discriminator 3
 4648 00ae 7B6B     		ldr	r3, [r7, #52]
 4649 00b0 DB00     		lsls	r3, r3, #3
 4650              		.loc 1 398 21 discriminator 3
 4651 00b2 BA69     		ldr	r2, [r7, #24]
 4652 00b4 1344     		add	r3, r3, r2
 4653 00b6 1846     		mov	r0, r3
 4654 00b8 FFF7FEFF 		bl	load64
 4655 00bc 8046     		mov	r8, r0
 4656 00be 8946     		mov	r9, r1
 4657              		.loc 1 398 12 discriminator 3
 4658 00c0 FB69     		ldr	r3, [r7, #28]
 4659 00c2 DC08     		lsrs	r4, r3, #3
 4660              		.loc 1 398 18 discriminator 3
 4661 00c4 7B6B     		ldr	r3, [r7, #52]
 4662 00c6 2344     		add	r3, r3, r4
 4663 00c8 DB00     		lsls	r3, r3, #3
 4664 00ca 7A6A     		ldr	r2, [r7, #36]
 4665 00cc 1344     		add	r3, r3, r2
 4666 00ce D3E90001 		ldrd	r0, [r3]
 4667 00d2 7B6B     		ldr	r3, [r7, #52]
 4668 00d4 2344     		add	r3, r3, r4
 4669 00d6 DB00     		lsls	r3, r3, #3
 4670 00d8 7A6A     		ldr	r2, [r7, #36]
 4671 00da 1344     		add	r3, r3, r2
 4672 00dc 88EA0002 		eor	r2, r8, r0
 4673 00e0 3A61     		str	r2, [r7, #16]
 4674 00e2 89EA0102 		eor	r2, r9, r1
 4675 00e6 7A61     		str	r2, [r7, #20]
 4676 00e8 D7E90412 		ldrd	r1, [r7, #16]
 4677 00ec C3E90012 		strd	r1, [r3]
 397:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 4678              		.loc 1 397 26 discriminator 3
 4679 00f0 7B6B     		ldr	r3, [r7, #52]
 4680 00f2 0133     		adds	r3, r3, #1
 4681 00f4 7B63     		str	r3, [r7, #52]
 4682              	.L26:
 397:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 4683              		.loc 1 397 17 discriminator 1
 4684 00f6 3A6A     		ldr	r2, [r7, #32]
 4685 00f8 FB69     		ldr	r3, [r7, #28]
 4686 00fa D31A     		subs	r3, r2, r3
 397:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 4687              		.loc 1 397 22 discriminator 1
 4688 00fc DB08     		lsrs	r3, r3, #3
 397:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 4689              		.loc 1 397 5 discriminator 1
 4690 00fe 7A6B     		ldr	r2, [r7, #52]
 4691 0100 9A42     		cmp	r2, r3
 4692 0102 D4D3     		bcc	.L27
 399:fips202.c     ****     m += r-pos;
 4693              		.loc 1 399 11
 4694 0104 3A6A     		ldr	r2, [r7, #32]
 4695 0106 FB69     		ldr	r3, [r7, #28]
 4696 0108 D31A     		subs	r3, r2, r3
 4697              		.loc 1 399 7
 4698 010a BA69     		ldr	r2, [r7, #24]
 4699 010c 1344     		add	r3, r3, r2
 4700 010e BB61     		str	r3, [r7, #24]
 400:fips202.c     ****     mlen -= r-pos;
 4701              		.loc 1 400 14
 4702 0110 FA69     		ldr	r2, [r7, #28]
 4703 0112 3B6A     		ldr	r3, [r7, #32]
 4704 0114 D31A     		subs	r3, r2, r3
 4705              		.loc 1 400 10
 4706 0116 BA6D     		ldr	r2, [r7, #88]
 4707 0118 1344     		add	r3, r3, r2
 4708 011a BB65     		str	r3, [r7, #88]
 401:fips202.c     ****     pos = 0;
 4709              		.loc 1 401 9
 4710 011c 0023     		movs	r3, #0
 4711 011e FB61     		str	r3, [r7, #28]
 402:fips202.c     ****     KeccakF1600_StatePermute(s);
 4712              		.loc 1 402 5
 4713 0120 786A     		ldr	r0, [r7, #36]
 4714 0122 FFF7FEFF 		bl	KeccakF1600_StatePermute
 403:fips202.c     ****   }
 404:fips202.c     **** 
 405:fips202.c     ****   while(mlen >= r) {
 4715              		.loc 1 405 8
 4716 0126 2FE0     		b	.L28
 4717              	.L31:
 406:fips202.c     ****     for(i=0;i<r/8;i++)
 4718              		.loc 1 406 10
 4719 0128 0023     		movs	r3, #0
 4720 012a 7B63     		str	r3, [r7, #52]
 4721              		.loc 1 406 5
 4722 012c 1CE0     		b	.L29
 4723              	.L30:
 407:fips202.c     ****       s[i] ^= load64(m+8*i);
 4724              		.loc 1 407 25 discriminator 3
 4725 012e 7B6B     		ldr	r3, [r7, #52]
 4726 0130 DB00     		lsls	r3, r3, #3
 4727              		.loc 1 407 15 discriminator 3
 4728 0132 BA69     		ldr	r2, [r7, #24]
 4729 0134 1344     		add	r3, r3, r2
 4730 0136 1846     		mov	r0, r3
 4731 0138 FFF7FEFF 		bl	load64
 4732              		.loc 1 407 12 discriminator 3
 4733 013c 7B6B     		ldr	r3, [r7, #52]
 4734 013e DB00     		lsls	r3, r3, #3
 4735 0140 7A6A     		ldr	r2, [r7, #36]
 4736 0142 1344     		add	r3, r3, r2
 4737 0144 D3E90023 		ldrd	r2, [r3]
 4738 0148 7C6B     		ldr	r4, [r7, #52]
 4739 014a E400     		lsls	r4, r4, #3
 4740 014c 7D6A     		ldr	r5, [r7, #36]
 4741 014e 2C44     		add	r4, r4, r5
 4742 0150 80EA0205 		eor	r5, r0, r2
 4743 0154 BD60     		str	r5, [r7, #8]
 4744 0156 4B40     		eors	r3, r3, r1
 4745 0158 FB60     		str	r3, [r7, #12]
 4746 015a D7E90223 		ldrd	r2, [r7, #8]
 4747 015e C4E90023 		strd	r2, [r4]
 406:fips202.c     ****     for(i=0;i<r/8;i++)
 4748              		.loc 1 406 20 discriminator 3
 4749 0162 7B6B     		ldr	r3, [r7, #52]
 4750 0164 0133     		adds	r3, r3, #1
 4751 0166 7B63     		str	r3, [r7, #52]
 4752              	.L29:
 406:fips202.c     ****     for(i=0;i<r/8;i++)
 4753              		.loc 1 406 16 discriminator 1
 4754 0168 3B6A     		ldr	r3, [r7, #32]
 4755 016a DB08     		lsrs	r3, r3, #3
 406:fips202.c     ****     for(i=0;i<r/8;i++)
 4756              		.loc 1 406 5 discriminator 1
 4757 016c 7A6B     		ldr	r2, [r7, #52]
 4758 016e 9A42     		cmp	r2, r3
 4759 0170 DDD3     		bcc	.L30
 408:fips202.c     ****     m += r;
 4760              		.loc 1 408 7
 4761 0172 BA69     		ldr	r2, [r7, #24]
 4762 0174 3B6A     		ldr	r3, [r7, #32]
 4763 0176 1344     		add	r3, r3, r2
 4764 0178 BB61     		str	r3, [r7, #24]
 409:fips202.c     ****     mlen -= r;
 4765              		.loc 1 409 10
 4766 017a BA6D     		ldr	r2, [r7, #88]
 4767 017c 3B6A     		ldr	r3, [r7, #32]
 4768 017e D31A     		subs	r3, r2, r3
 4769 0180 BB65     		str	r3, [r7, #88]
 410:fips202.c     ****     KeccakF1600_StatePermute(s);
 4770              		.loc 1 410 5
 4771 0182 786A     		ldr	r0, [r7, #36]
 4772 0184 FFF7FEFF 		bl	KeccakF1600_StatePermute
 4773              	.L28:
 405:fips202.c     ****     for(i=0;i<r/8;i++)
 4774              		.loc 1 405 8
 4775 0188 BA6D     		ldr	r2, [r7, #88]
 4776 018a 3B6A     		ldr	r3, [r7, #32]
 4777 018c 9A42     		cmp	r2, r3
 4778 018e CBD2     		bcs	.L31
 411:fips202.c     ****   }
 412:fips202.c     **** 
 413:fips202.c     ****   for(i=0;i<mlen/8;i++)
 4779              		.loc 1 413 8
 4780 0190 0023     		movs	r3, #0
 4781 0192 7B63     		str	r3, [r7, #52]
 4782              		.loc 1 413 3
 4783 0194 20E0     		b	.L32
 4784              	.L33:
 414:fips202.c     ****     s[pos/8+i] ^= load64(m+8*i);
 4785              		.loc 1 414 29 discriminator 3
 4786 0196 7B6B     		ldr	r3, [r7, #52]
 4787 0198 DB00     		lsls	r3, r3, #3
 4788              		.loc 1 414 19 discriminator 3
 4789 019a BA69     		ldr	r2, [r7, #24]
 4790 019c 1344     		add	r3, r3, r2
 4791 019e 1846     		mov	r0, r3
 4792 01a0 FFF7FEFF 		bl	load64
 4793              		.loc 1 414 10 discriminator 3
 4794 01a4 FB69     		ldr	r3, [r7, #28]
 4795 01a6 DC08     		lsrs	r4, r3, #3
 4796              		.loc 1 414 16 discriminator 3
 4797 01a8 7B6B     		ldr	r3, [r7, #52]
 4798 01aa 2344     		add	r3, r3, r4
 4799 01ac DB00     		lsls	r3, r3, #3
 4800 01ae 7A6A     		ldr	r2, [r7, #36]
 4801 01b0 1344     		add	r3, r3, r2
 4802 01b2 D3E90023 		ldrd	r2, [r3]
 4803 01b6 7D6B     		ldr	r5, [r7, #52]
 4804 01b8 2C44     		add	r4, r4, r5
 4805 01ba E400     		lsls	r4, r4, #3
 4806 01bc 7D6A     		ldr	r5, [r7, #36]
 4807 01be 2C44     		add	r4, r4, r5
 4808 01c0 80EA0205 		eor	r5, r0, r2
 4809 01c4 3D60     		str	r5, [r7]
 4810 01c6 4B40     		eors	r3, r3, r1
 4811 01c8 7B60     		str	r3, [r7, #4]
 4812 01ca D7E90023 		ldrd	r2, [r7]
 4813 01ce C4E90023 		strd	r2, [r4]
 413:fips202.c     ****     s[pos/8+i] ^= load64(m+8*i);
 4814              		.loc 1 413 21 discriminator 3
 4815 01d2 7B6B     		ldr	r3, [r7, #52]
 4816 01d4 0133     		adds	r3, r3, #1
 4817 01d6 7B63     		str	r3, [r7, #52]
 4818              	.L32:
 413:fips202.c     ****     s[pos/8+i] ^= load64(m+8*i);
 4819              		.loc 1 413 17 discriminator 1
 4820 01d8 BB6D     		ldr	r3, [r7, #88]
 4821 01da DB08     		lsrs	r3, r3, #3
 413:fips202.c     ****     s[pos/8+i] ^= load64(m+8*i);
 4822              		.loc 1 413 3 discriminator 1
 4823 01dc 7A6B     		ldr	r2, [r7, #52]
 4824 01de 9A42     		cmp	r2, r3
 4825 01e0 D9D3     		bcc	.L33
 415:fips202.c     ****   m += 8*i;
 4826              		.loc 1 415 9
 4827 01e2 7B6B     		ldr	r3, [r7, #52]
 4828 01e4 DB00     		lsls	r3, r3, #3
 4829              		.loc 1 415 5
 4830 01e6 BA69     		ldr	r2, [r7, #24]
 4831 01e8 1344     		add	r3, r3, r2
 4832 01ea BB61     		str	r3, [r7, #24]
 416:fips202.c     ****   mlen -= 8*i;
 4833              		.loc 1 416 12
 4834 01ec 7B6B     		ldr	r3, [r7, #52]
 4835 01ee DB00     		lsls	r3, r3, #3
 4836              		.loc 1 416 8
 4837 01f0 BA6D     		ldr	r2, [r7, #88]
 4838 01f2 D31A     		subs	r3, r2, r3
 4839 01f4 BB65     		str	r3, [r7, #88]
 417:fips202.c     ****   pos += 8*i;
 4840              		.loc 1 417 11
 4841 01f6 7B6B     		ldr	r3, [r7, #52]
 4842 01f8 DB00     		lsls	r3, r3, #3
 4843              		.loc 1 417 7
 4844 01fa FA69     		ldr	r2, [r7, #28]
 4845 01fc 1344     		add	r3, r3, r2
 4846 01fe FB61     		str	r3, [r7, #28]
 418:fips202.c     **** 
 419:fips202.c     ****   if(mlen) {
 4847              		.loc 1 419 5
 4848 0200 BB6D     		ldr	r3, [r7, #88]
 4849 0202 002B     		cmp	r3, #0
 4850 0204 3DD0     		beq	.L34
 420:fips202.c     ****     for(i=0;i<8;i++)
 4851              		.loc 1 420 10
 4852 0206 0023     		movs	r3, #0
 4853 0208 7B63     		str	r3, [r7, #52]
 4854              		.loc 1 420 5
 4855 020a 08E0     		b	.L35
 4856              	.L36:
 421:fips202.c     ****       t[i] = 0;
 4857              		.loc 1 421 12 discriminator 3
 4858 020c 07F12C02 		add	r2, r7, #44
 4859 0210 7B6B     		ldr	r3, [r7, #52]
 4860 0212 1344     		add	r3, r3, r2
 4861 0214 0022     		movs	r2, #0
 4862 0216 1A70     		strb	r2, [r3]
 420:fips202.c     ****     for(i=0;i<8;i++)
 4863              		.loc 1 420 18 discriminator 3
 4864 0218 7B6B     		ldr	r3, [r7, #52]
 4865 021a 0133     		adds	r3, r3, #1
 4866 021c 7B63     		str	r3, [r7, #52]
 4867              	.L35:
 420:fips202.c     ****     for(i=0;i<8;i++)
 4868              		.loc 1 420 5 discriminator 1
 4869 021e 7B6B     		ldr	r3, [r7, #52]
 4870 0220 072B     		cmp	r3, #7
 4871 0222 F3D9     		bls	.L36
 422:fips202.c     ****     for(i=0;i<mlen;i++)
 4872              		.loc 1 422 10
 4873 0224 0023     		movs	r3, #0
 4874 0226 7B63     		str	r3, [r7, #52]
 4875              		.loc 1 422 5
 4876 0228 0CE0     		b	.L37
 4877              	.L38:
 423:fips202.c     ****       t[i] = m[i];
 4878              		.loc 1 423 15 discriminator 3
 4879 022a BA69     		ldr	r2, [r7, #24]
 4880 022c 7B6B     		ldr	r3, [r7, #52]
 4881 022e 1344     		add	r3, r3, r2
 4882 0230 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4883              		.loc 1 423 12 discriminator 3
 4884 0232 07F12C02 		add	r2, r7, #44
 4885 0236 7B6B     		ldr	r3, [r7, #52]
 4886 0238 1344     		add	r3, r3, r2
 4887 023a 0A46     		mov	r2, r1
 4888 023c 1A70     		strb	r2, [r3]
 422:fips202.c     ****     for(i=0;i<mlen;i++)
 4889              		.loc 1 422 21 discriminator 3
 4890 023e 7B6B     		ldr	r3, [r7, #52]
 4891 0240 0133     		adds	r3, r3, #1
 4892 0242 7B63     		str	r3, [r7, #52]
 4893              	.L37:
 422:fips202.c     ****     for(i=0;i<mlen;i++)
 4894              		.loc 1 422 5 discriminator 1
 4895 0244 7A6B     		ldr	r2, [r7, #52]
 4896 0246 BB6D     		ldr	r3, [r7, #88]
 4897 0248 9A42     		cmp	r2, r3
 4898 024a EED3     		bcc	.L38
 424:fips202.c     ****     s[pos/8] ^= load64(t);
 4899              		.loc 1 424 17
 4900 024c 07F12C03 		add	r3, r7, #44
 4901 0250 1846     		mov	r0, r3
 4902 0252 FFF7FEFF 		bl	load64
 4903              		.loc 1 424 14
 4904 0256 FB69     		ldr	r3, [r7, #28]
 4905 0258 23F00703 		bic	r3, r3, #7
 4906 025c 7A6A     		ldr	r2, [r7, #36]
 4907 025e 1344     		add	r3, r3, r2
 4908 0260 D3E90023 		ldrd	r2, [r3]
 4909 0264 FC69     		ldr	r4, [r7, #28]
 4910 0266 24F00704 		bic	r4, r4, #7
 4911 026a 7D6A     		ldr	r5, [r7, #36]
 4912 026c 2C44     		add	r4, r4, r5
 4913 026e 80EA020A 		eor	r10, r0, r2
 4914 0272 81EA030B 		eor	fp, r1, r3
 4915 0276 C4E900AB 		strd	r10, [r4]
 425:fips202.c     ****     pos += mlen;
 4916              		.loc 1 425 9
 4917 027a FA69     		ldr	r2, [r7, #28]
 4918 027c BB6D     		ldr	r3, [r7, #88]
 4919 027e 1344     		add	r3, r3, r2
 4920 0280 FB61     		str	r3, [r7, #28]
 4921              	.L34:
 426:fips202.c     ****   }
 427:fips202.c     **** 
 428:fips202.c     ****   return pos;
 4922              		.loc 1 428 10
 4923 0282 FB69     		ldr	r3, [r7, #28]
 429:fips202.c     **** }
 4924              		.loc 1 429 1
 4925 0284 1846     		mov	r0, r3
 4926 0286 3837     		adds	r7, r7, #56
 4927              	.LCFI27:
 4928              		.cfi_def_cfa_offset 32
 4929 0288 BD46     		mov	sp, r7
 4930              	.LCFI28:
 4931              		.cfi_def_cfa_register 13
 4932              		@ sp needed
 4933 028a BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 4934              		.cfi_endproc
 4935              	.LFE4:
 4937              		.section	.text.keccak_finalize,"ax",%progbits
 4938              		.align	1
 4939              		.syntax unified
 4940              		.thumb
 4941              		.thumb_func
 4942              		.fpu softvfp
 4944              	keccak_finalize:
 4945              	.LFB5:
 430:fips202.c     **** 
 431:fips202.c     **** /*************************************************
 432:fips202.c     **** * Name:        keccak_finalize
 433:fips202.c     **** *
 434:fips202.c     **** * Description: Finalize absorb step.
 435:fips202.c     **** *
 436:fips202.c     **** * Arguments:   - uint64_t *s:      pointer to Keccak state
 437:fips202.c     **** *              - unsigned int r:   rate in bytes (e.g., 168 for SHAKE128)
 438:fips202.c     **** *              - unsigned int pos: position in current block to be absorbed
 439:fips202.c     **** *              - uint8_t p:        domain separation byte
 440:fips202.c     **** **************************************************/
 441:fips202.c     **** static void keccak_finalize(uint64_t s[25], unsigned int r, unsigned int pos, uint8_t p)
 442:fips202.c     **** {
 4946              		.loc 1 442 1
 4947              		.cfi_startproc
 4948              		@ args = 0, pretend = 0, frame = 32
 4949              		@ frame_needed = 1, uses_anonymous_args = 0
 4950              		@ link register save eliminated.
 4951 0000 2DE9F00F 		push	{r4, r5, r6, r7, r8, r9, r10, fp}
 4952              	.LCFI29:
 4953              		.cfi_def_cfa_offset 32
 4954              		.cfi_offset 4, -32
 4955              		.cfi_offset 5, -28
 4956              		.cfi_offset 6, -24
 4957              		.cfi_offset 7, -20
 4958              		.cfi_offset 8, -16
 4959              		.cfi_offset 9, -12
 4960              		.cfi_offset 10, -8
 4961              		.cfi_offset 11, -4
 4962 0004 88B0     		sub	sp, sp, #32
 4963              	.LCFI30:
 4964              		.cfi_def_cfa_offset 64
 4965 0006 00AF     		add	r7, sp, #0
 4966              	.LCFI31:
 4967              		.cfi_def_cfa_register 7
 4968 0008 7861     		str	r0, [r7, #20]
 4969 000a 3961     		str	r1, [r7, #16]
 4970 000c FA60     		str	r2, [r7, #12]
 4971 000e FB72     		strb	r3, [r7, #11]
 443:fips202.c     ****   unsigned int i,j;
 444:fips202.c     **** 
 445:fips202.c     ****   i = pos >> 3;
 4972              		.loc 1 445 5
 4973 0010 FB68     		ldr	r3, [r7, #12]
 4974 0012 DB08     		lsrs	r3, r3, #3
 4975 0014 FB61     		str	r3, [r7, #28]
 446:fips202.c     ****   j = pos & 7;
 4976              		.loc 1 446 5
 4977 0016 FB68     		ldr	r3, [r7, #12]
 4978 0018 03F00703 		and	r3, r3, #7
 4979 001c BB61     		str	r3, [r7, #24]
 447:fips202.c     ****   s[i] ^= (uint64_t)p << 8*j;
 4980              		.loc 1 447 8
 4981 001e FB69     		ldr	r3, [r7, #28]
 4982 0020 DB00     		lsls	r3, r3, #3
 4983 0022 7A69     		ldr	r2, [r7, #20]
 4984 0024 1344     		add	r3, r3, r2
 4985 0026 D3E90001 		ldrd	r0, [r3]
 4986              		.loc 1 447 11
 4987 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4988 002c 0022     		movs	r2, #0
 4989 002e 9846     		mov	r8, r3
 4990 0030 9146     		mov	r9, r2
 4991              		.loc 1 447 27
 4992 0032 BB69     		ldr	r3, [r7, #24]
 4993 0034 DB00     		lsls	r3, r3, #3
 4994              		.loc 1 447 23
 4995 0036 A3F12006 		sub	r6, r3, #32
 4996 003a C3F12002 		rsb	r2, r3, #32
 4997 003e 09FA03F5 		lsl	r5, r9, r3
 4998 0042 08FA06F6 		lsl	r6, r8, r6
 4999 0046 3543     		orrs	r5, r5, r6
 5000 0048 28FA02F2 		lsr	r2, r8, r2
 5001 004c 1543     		orrs	r5, r5, r2
 5002 004e 08FA03F4 		lsl	r4, r8, r3
 5003              		.loc 1 447 8
 5004 0052 FB69     		ldr	r3, [r7, #28]
 5005 0054 DB00     		lsls	r3, r3, #3
 5006 0056 7A69     		ldr	r2, [r7, #20]
 5007 0058 1344     		add	r3, r3, r2
 5008 005a 80EA040A 		eor	r10, r0, r4
 5009 005e 81EA050B 		eor	fp, r1, r5
 5010 0062 C3E900AB 		strd	r10, [r3]
 448:fips202.c     ****   s[r/8-1] ^= 1ULL << 63;
 5011              		.loc 1 448 12
 5012 0066 3B69     		ldr	r3, [r7, #16]
 5013 0068 23F00703 		bic	r3, r3, #7
 5014 006c 083B     		subs	r3, r3, #8
 5015 006e 7A69     		ldr	r2, [r7, #20]
 5016 0070 1344     		add	r3, r3, r2
 5017 0072 D3E90023 		ldrd	r2, [r3]
 5018 0076 3969     		ldr	r1, [r7, #16]
 5019 0078 21F00701 		bic	r1, r1, #7
 5020 007c 0839     		subs	r1, r1, #8
 5021 007e 7869     		ldr	r0, [r7, #20]
 5022 0080 0144     		add	r1, r1, r0
 5023 0082 3A60     		str	r2, [r7]
 5024 0084 03F10043 		add	r3, r3, #-2147483648
 5025 0088 7B60     		str	r3, [r7, #4]
 5026 008a D7E90034 		ldrd	r3, [r7]
 5027 008e C1E90034 		strd	r3, [r1]
 449:fips202.c     **** }
 5028              		.loc 1 449 1
 5029 0092 00BF     		nop
 5030 0094 2037     		adds	r7, r7, #32
 5031              	.LCFI32:
 5032              		.cfi_def_cfa_offset 32
 5033 0096 BD46     		mov	sp, r7
 5034              	.LCFI33:
 5035              		.cfi_def_cfa_register 13
 5036              		@ sp needed
 5037 0098 BDE8F00F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp}
 5038              	.LCFI34:
 5039              		.cfi_restore 11
 5040              		.cfi_restore 10
 5041              		.cfi_restore 9
 5042              		.cfi_restore 8
 5043              		.cfi_restore 7
 5044              		.cfi_restore 6
 5045              		.cfi_restore 5
 5046              		.cfi_restore 4
 5047              		.cfi_def_cfa_offset 0
 5048 009c 7047     		bx	lr
 5049              		.cfi_endproc
 5050              	.LFE5:
 5052              		.section	.text.keccak_squeezeblocks,"ax",%progbits
 5053              		.align	1
 5054              		.syntax unified
 5055              		.thumb
 5056              		.thumb_func
 5057              		.fpu softvfp
 5059              	keccak_squeezeblocks:
 5060              	.LFB6:
 450:fips202.c     **** 
 451:fips202.c     **** /*************************************************
 452:fips202.c     **** * Name:        keccak_squeezeblocks
 453:fips202.c     **** *
 454:fips202.c     **** * Description: Squeeze step of Keccak. Squeezes full blocks of r bytes each.
 455:fips202.c     **** *              Modifies the state. Can be called multiple times to keep
 456:fips202.c     **** *              squeezing, i.e., is incremental. Assumes zero bytes of current
 457:fips202.c     **** *              block have already been squeezed.
 458:fips202.c     **** *
 459:fips202.c     **** * Arguments:   - uint8_t *out:   pointer to output blocks
 460:fips202.c     **** *              - size_t nblocks: number of blocks to be squeezed (written to out)
 461:fips202.c     **** *              - uint64_t *s:    pointer to input/output Keccak state
 462:fips202.c     **** *              - unsigned int r: rate in bytes (e.g., 168 for SHAKE128)
 463:fips202.c     **** **************************************************/
 464:fips202.c     **** static void keccak_squeezeblocks(uint8_t *out,
 465:fips202.c     ****                                  size_t nblocks,
 466:fips202.c     ****                                  uint64_t s[25],
 467:fips202.c     ****                                  unsigned int r)
 468:fips202.c     **** {
 5061              		.loc 1 468 1
 5062              		.cfi_startproc
 5063              		@ args = 0, pretend = 0, frame = 24
 5064              		@ frame_needed = 1, uses_anonymous_args = 0
 5065 0000 80B5     		push	{r7, lr}
 5066              	.LCFI35:
 5067              		.cfi_def_cfa_offset 8
 5068              		.cfi_offset 7, -8
 5069              		.cfi_offset 14, -4
 5070 0002 86B0     		sub	sp, sp, #24
 5071              	.LCFI36:
 5072              		.cfi_def_cfa_offset 32
 5073 0004 00AF     		add	r7, sp, #0
 5074              	.LCFI37:
 5075              		.cfi_def_cfa_register 7
 5076 0006 F860     		str	r0, [r7, #12]
 5077 0008 B960     		str	r1, [r7, #8]
 5078 000a 7A60     		str	r2, [r7, #4]
 5079 000c 3B60     		str	r3, [r7]
 469:fips202.c     ****   unsigned int i;
 470:fips202.c     **** 
 471:fips202.c     ****   while(nblocks > 0) {
 5080              		.loc 1 471 8
 5081 000e 21E0     		b	.L42
 5082              	.L45:
 472:fips202.c     ****     KeccakF1600_StatePermute(s);
 5083              		.loc 1 472 5
 5084 0010 7868     		ldr	r0, [r7, #4]
 5085 0012 FFF7FEFF 		bl	KeccakF1600_StatePermute
 473:fips202.c     ****     for(i=0;i<r/8;i++)
 5086              		.loc 1 473 10
 5087 0016 0023     		movs	r3, #0
 5088 0018 7B61     		str	r3, [r7, #20]
 5089              		.loc 1 473 5
 5090 001a 0FE0     		b	.L43
 5091              	.L44:
 474:fips202.c     ****       store64(out + 8*i, s[i]);
 5092              		.loc 1 474 22 discriminator 3
 5093 001c 7B69     		ldr	r3, [r7, #20]
 5094 001e DB00     		lsls	r3, r3, #3
 5095              		.loc 1 474 7 discriminator 3
 5096 0020 FA68     		ldr	r2, [r7, #12]
 5097 0022 D118     		adds	r1, r2, r3
 5098              		.loc 1 474 27 discriminator 3
 5099 0024 7B69     		ldr	r3, [r7, #20]
 5100 0026 DB00     		lsls	r3, r3, #3
 5101 0028 7A68     		ldr	r2, [r7, #4]
 5102 002a 1344     		add	r3, r3, r2
 5103              		.loc 1 474 7 discriminator 3
 5104 002c D3E90023 		ldrd	r2, [r3]
 5105 0030 0846     		mov	r0, r1
 5106 0032 FFF7FEFF 		bl	store64
 473:fips202.c     ****     for(i=0;i<r/8;i++)
 5107              		.loc 1 473 20 discriminator 3
 5108 0036 7B69     		ldr	r3, [r7, #20]
 5109 0038 0133     		adds	r3, r3, #1
 5110 003a 7B61     		str	r3, [r7, #20]
 5111              	.L43:
 473:fips202.c     ****     for(i=0;i<r/8;i++)
 5112              		.loc 1 473 16 discriminator 1
 5113 003c 3B68     		ldr	r3, [r7]
 5114 003e DB08     		lsrs	r3, r3, #3
 473:fips202.c     ****     for(i=0;i<r/8;i++)
 5115              		.loc 1 473 5 discriminator 1
 5116 0040 7A69     		ldr	r2, [r7, #20]
 5117 0042 9A42     		cmp	r2, r3
 5118 0044 EAD3     		bcc	.L44
 475:fips202.c     ****     out += r;
 5119              		.loc 1 475 9
 5120 0046 FA68     		ldr	r2, [r7, #12]
 5121 0048 3B68     		ldr	r3, [r7]
 5122 004a 1344     		add	r3, r3, r2
 5123 004c FB60     		str	r3, [r7, #12]
 476:fips202.c     ****     nblocks--;
 5124              		.loc 1 476 12
 5125 004e BB68     		ldr	r3, [r7, #8]
 5126 0050 013B     		subs	r3, r3, #1
 5127 0052 BB60     		str	r3, [r7, #8]
 5128              	.L42:
 471:fips202.c     ****     KeccakF1600_StatePermute(s);
 5129              		.loc 1 471 8
 5130 0054 BB68     		ldr	r3, [r7, #8]
 5131 0056 002B     		cmp	r3, #0
 5132 0058 DAD1     		bne	.L45
 477:fips202.c     ****   }
 478:fips202.c     **** }
 5133              		.loc 1 478 1
 5134 005a 00BF     		nop
 5135 005c 00BF     		nop
 5136 005e 1837     		adds	r7, r7, #24
 5137              	.LCFI38:
 5138              		.cfi_def_cfa_offset 8
 5139 0060 BD46     		mov	sp, r7
 5140              	.LCFI39:
 5141              		.cfi_def_cfa_register 13
 5142              		@ sp needed
 5143 0062 80BD     		pop	{r7, pc}
 5144              		.cfi_endproc
 5145              	.LFE6:
 5147              		.section	.text.keccak_squeeze,"ax",%progbits
 5148              		.align	1
 5149              		.syntax unified
 5150              		.thumb
 5151              		.thumb_func
 5152              		.fpu softvfp
 5154              	keccak_squeeze:
 5155              	.LFB7:
 479:fips202.c     **** 
 480:fips202.c     **** /*************************************************
 481:fips202.c     **** * Name:        keccak_squeeze
 482:fips202.c     **** *
 483:fips202.c     **** * Description: Squeeze step of Keccak. Squeezes arbitratrily many bytes.
 484:fips202.c     **** *              Modifies the state. Can be called multiple times to keep
 485:fips202.c     **** *              squeezing, i.e., is incremental.
 486:fips202.c     **** *
 487:fips202.c     **** * Arguments:   - uint8_t *out:     pointer to output
 488:fips202.c     **** *              - size_t outlen:    number of bytes to be squeezed (written to out)
 489:fips202.c     **** *              - uint64_t *s:      pointer to input/output Keccak state
 490:fips202.c     **** *              - unsigned int r:   rate in bytes (e.g., 168 for SHAKE128)
 491:fips202.c     **** *              - unsigned int pos: number of bytes in current block already squeezed
 492:fips202.c     **** *
 493:fips202.c     **** * Returns new position pos in current block
 494:fips202.c     **** **************************************************/
 495:fips202.c     **** static unsigned int keccak_squeeze(uint8_t *out,
 496:fips202.c     ****                                    size_t outlen,
 497:fips202.c     ****                                    uint64_t s[25],
 498:fips202.c     ****                                    unsigned int r,
 499:fips202.c     ****                                    unsigned int pos)
 500:fips202.c     **** {
 5156              		.loc 1 500 1
 5157              		.cfi_startproc
 5158              		@ args = 4, pretend = 0, frame = 32
 5159              		@ frame_needed = 1, uses_anonymous_args = 0
 5160 0000 80B5     		push	{r7, lr}
 5161              	.LCFI40:
 5162              		.cfi_def_cfa_offset 8
 5163              		.cfi_offset 7, -8
 5164              		.cfi_offset 14, -4
 5165 0002 88B0     		sub	sp, sp, #32
 5166              	.LCFI41:
 5167              		.cfi_def_cfa_offset 40
 5168 0004 00AF     		add	r7, sp, #0
 5169              	.LCFI42:
 5170              		.cfi_def_cfa_register 7
 5171 0006 F860     		str	r0, [r7, #12]
 5172 0008 B960     		str	r1, [r7, #8]
 5173 000a 7A60     		str	r2, [r7, #4]
 5174 000c 3B60     		str	r3, [r7]
 501:fips202.c     ****   unsigned int i;
 502:fips202.c     ****   uint8_t t[8];
 503:fips202.c     **** 
 504:fips202.c     ****   if(pos & 7) {
 5175              		.loc 1 504 10
 5176 000e BB6A     		ldr	r3, [r7, #40]
 5177 0010 03F00703 		and	r3, r3, #7
 5178              		.loc 1 504 5
 5179 0014 002B     		cmp	r3, #0
 5180 0016 28D0     		beq	.L47
 505:fips202.c     ****     store64(t,s[pos/8]);
 5181              		.loc 1 505 16
 5182 0018 BB6A     		ldr	r3, [r7, #40]
 5183 001a 23F00703 		bic	r3, r3, #7
 5184 001e 7A68     		ldr	r2, [r7, #4]
 5185 0020 1344     		add	r3, r3, r2
 5186              		.loc 1 505 5
 5187 0022 D3E90023 		ldrd	r2, [r3]
 5188 0026 07F11401 		add	r1, r7, #20
 5189 002a 0846     		mov	r0, r1
 5190 002c FFF7FEFF 		bl	store64
 506:fips202.c     ****     i = pos & 7;
 5191              		.loc 1 506 7
 5192 0030 BB6A     		ldr	r3, [r7, #40]
 5193 0032 03F00703 		and	r3, r3, #7
 5194 0036 FB61     		str	r3, [r7, #28]
 507:fips202.c     ****     while(i < 8 && outlen > 0) {
 5195              		.loc 1 507 10
 5196 0038 11E0     		b	.L48
 5197              	.L49:
 508:fips202.c     ****       *out++ = t[i++];
 5198              		.loc 1 508 19
 5199 003a FA69     		ldr	r2, [r7, #28]
 5200 003c 531C     		adds	r3, r2, #1
 5201 003e FB61     		str	r3, [r7, #28]
 5202              		.loc 1 508 11
 5203 0040 FB68     		ldr	r3, [r7, #12]
 5204 0042 591C     		adds	r1, r3, #1
 5205 0044 F960     		str	r1, [r7, #12]
 5206              		.loc 1 508 17
 5207 0046 07F12001 		add	r1, r7, #32
 5208 004a 0A44     		add	r2, r2, r1
 5209 004c 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 5210              		.loc 1 508 14
 5211 0050 1A70     		strb	r2, [r3]
 509:fips202.c     ****       outlen--;
 5212              		.loc 1 509 13
 5213 0052 BB68     		ldr	r3, [r7, #8]
 5214 0054 013B     		subs	r3, r3, #1
 5215 0056 BB60     		str	r3, [r7, #8]
 510:fips202.c     ****       pos++;
 5216              		.loc 1 510 10
 5217 0058 BB6A     		ldr	r3, [r7, #40]
 5218 005a 0133     		adds	r3, r3, #1
 5219 005c BB62     		str	r3, [r7, #40]
 5220              	.L48:
 507:fips202.c     ****       *out++ = t[i++];
 5221              		.loc 1 507 10
 5222 005e FB69     		ldr	r3, [r7, #28]
 5223 0060 072B     		cmp	r3, #7
 5224 0062 02D8     		bhi	.L47
 507:fips202.c     ****       *out++ = t[i++];
 5225              		.loc 1 507 17 discriminator 1
 5226 0064 BB68     		ldr	r3, [r7, #8]
 5227 0066 002B     		cmp	r3, #0
 5228 0068 E7D1     		bne	.L49
 5229              	.L47:
 511:fips202.c     ****     }
 512:fips202.c     ****   }
 513:fips202.c     **** 
 514:fips202.c     ****   if(pos && outlen >= r-pos) {
 5230              		.loc 1 514 5
 5231 006a BB6A     		ldr	r3, [r7, #40]
 5232 006c 002B     		cmp	r3, #0
 5233 006e 54D0     		beq	.L53
 5234              		.loc 1 514 24 discriminator 1
 5235 0070 3A68     		ldr	r2, [r7]
 5236 0072 BB6A     		ldr	r3, [r7, #40]
 5237 0074 D31A     		subs	r3, r2, r3
 5238              		.loc 1 514 10 discriminator 1
 5239 0076 BA68     		ldr	r2, [r7, #8]
 5240 0078 9A42     		cmp	r2, r3
 5241 007a 4ED3     		bcc	.L53
 515:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 5242              		.loc 1 515 10
 5243 007c 0023     		movs	r3, #0
 5244 007e FB61     		str	r3, [r7, #28]
 5245              		.loc 1 515 5
 5246 0080 12E0     		b	.L51
 5247              	.L52:
 516:fips202.c     ****       store64(out+8*i,s[pos/8+i]);
 5248              		.loc 1 516 20 discriminator 3
 5249 0082 FB69     		ldr	r3, [r7, #28]
 5250 0084 DB00     		lsls	r3, r3, #3
 5251              		.loc 1 516 7 discriminator 3
 5252 0086 FA68     		ldr	r2, [r7, #12]
 5253 0088 D118     		adds	r1, r2, r3
 5254              		.loc 1 516 28 discriminator 3
 5255 008a BB6A     		ldr	r3, [r7, #40]
 5256 008c DA08     		lsrs	r2, r3, #3
 5257              		.loc 1 516 30 discriminator 3
 5258 008e FB69     		ldr	r3, [r7, #28]
 5259 0090 1344     		add	r3, r3, r2
 5260              		.loc 1 516 24 discriminator 3
 5261 0092 DB00     		lsls	r3, r3, #3
 5262 0094 7A68     		ldr	r2, [r7, #4]
 5263 0096 1344     		add	r3, r3, r2
 5264              		.loc 1 516 7 discriminator 3
 5265 0098 D3E90023 		ldrd	r2, [r3]
 5266 009c 0846     		mov	r0, r1
 5267 009e FFF7FEFF 		bl	store64
 515:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 5268              		.loc 1 515 26 discriminator 3
 5269 00a2 FB69     		ldr	r3, [r7, #28]
 5270 00a4 0133     		adds	r3, r3, #1
 5271 00a6 FB61     		str	r3, [r7, #28]
 5272              	.L51:
 515:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 5273              		.loc 1 515 17 discriminator 1
 5274 00a8 3A68     		ldr	r2, [r7]
 5275 00aa BB6A     		ldr	r3, [r7, #40]
 5276 00ac D31A     		subs	r3, r2, r3
 515:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 5277              		.loc 1 515 22 discriminator 1
 5278 00ae DB08     		lsrs	r3, r3, #3
 515:fips202.c     ****     for(i=0;i<(r-pos)/8;i++)
 5279              		.loc 1 515 5 discriminator 1
 5280 00b0 FA69     		ldr	r2, [r7, #28]
 5281 00b2 9A42     		cmp	r2, r3
 5282 00b4 E5D3     		bcc	.L52
 517:fips202.c     ****     out += r-pos;
 5283              		.loc 1 517 13
 5284 00b6 3A68     		ldr	r2, [r7]
 5285 00b8 BB6A     		ldr	r3, [r7, #40]
 5286 00ba D31A     		subs	r3, r2, r3
 5287              		.loc 1 517 9
 5288 00bc FA68     		ldr	r2, [r7, #12]
 5289 00be 1344     		add	r3, r3, r2
 5290 00c0 FB60     		str	r3, [r7, #12]
 518:fips202.c     ****     outlen -= r-pos;
 5291              		.loc 1 518 16
 5292 00c2 BA6A     		ldr	r2, [r7, #40]
 5293 00c4 3B68     		ldr	r3, [r7]
 5294 00c6 D31A     		subs	r3, r2, r3
 5295              		.loc 1 518 12
 5296 00c8 BA68     		ldr	r2, [r7, #8]
 5297 00ca 1344     		add	r3, r3, r2
 5298 00cc BB60     		str	r3, [r7, #8]
 519:fips202.c     ****     pos = 0;
 5299              		.loc 1 519 9
 5300 00ce 0023     		movs	r3, #0
 5301 00d0 BB62     		str	r3, [r7, #40]
 520:fips202.c     ****   }
 521:fips202.c     **** 
 522:fips202.c     ****   while(outlen >= r) {
 5302              		.loc 1 522 8
 5303 00d2 22E0     		b	.L53
 5304              	.L56:
 523:fips202.c     ****     KeccakF1600_StatePermute(s);
 5305              		.loc 1 523 5
 5306 00d4 7868     		ldr	r0, [r7, #4]
 5307 00d6 FFF7FEFF 		bl	KeccakF1600_StatePermute
 524:fips202.c     ****     for(i=0;i<r/8;i++)
 5308              		.loc 1 524 10
 5309 00da 0023     		movs	r3, #0
 5310 00dc FB61     		str	r3, [r7, #28]
 5311              		.loc 1 524 5
 5312 00de 0FE0     		b	.L54
 5313              	.L55:
 525:fips202.c     ****       store64(out+8*i,s[i]);
 5314              		.loc 1 525 20 discriminator 3
 5315 00e0 FB69     		ldr	r3, [r7, #28]
 5316 00e2 DB00     		lsls	r3, r3, #3
 5317              		.loc 1 525 7 discriminator 3
 5318 00e4 FA68     		ldr	r2, [r7, #12]
 5319 00e6 D118     		adds	r1, r2, r3
 5320              		.loc 1 525 24 discriminator 3
 5321 00e8 FB69     		ldr	r3, [r7, #28]
 5322 00ea DB00     		lsls	r3, r3, #3
 5323 00ec 7A68     		ldr	r2, [r7, #4]
 5324 00ee 1344     		add	r3, r3, r2
 5325              		.loc 1 525 7 discriminator 3
 5326 00f0 D3E90023 		ldrd	r2, [r3]
 5327 00f4 0846     		mov	r0, r1
 5328 00f6 FFF7FEFF 		bl	store64
 524:fips202.c     ****     for(i=0;i<r/8;i++)
 5329              		.loc 1 524 20 discriminator 3
 5330 00fa FB69     		ldr	r3, [r7, #28]
 5331 00fc 0133     		adds	r3, r3, #1
 5332 00fe FB61     		str	r3, [r7, #28]
 5333              	.L54:
 524:fips202.c     ****     for(i=0;i<r/8;i++)
 5334              		.loc 1 524 16 discriminator 1
 5335 0100 3B68     		ldr	r3, [r7]
 5336 0102 DB08     		lsrs	r3, r3, #3
 524:fips202.c     ****     for(i=0;i<r/8;i++)
 5337              		.loc 1 524 5 discriminator 1
 5338 0104 FA69     		ldr	r2, [r7, #28]
 5339 0106 9A42     		cmp	r2, r3
 5340 0108 EAD3     		bcc	.L55
 526:fips202.c     ****     out += r;
 5341              		.loc 1 526 9
 5342 010a FA68     		ldr	r2, [r7, #12]
 5343 010c 3B68     		ldr	r3, [r7]
 5344 010e 1344     		add	r3, r3, r2
 5345 0110 FB60     		str	r3, [r7, #12]
 527:fips202.c     ****     outlen -= r;
 5346              		.loc 1 527 12
 5347 0112 BA68     		ldr	r2, [r7, #8]
 5348 0114 3B68     		ldr	r3, [r7]
 5349 0116 D31A     		subs	r3, r2, r3
 5350 0118 BB60     		str	r3, [r7, #8]
 5351              	.L53:
 522:fips202.c     ****     KeccakF1600_StatePermute(s);
 5352              		.loc 1 522 8
 5353 011a BA68     		ldr	r2, [r7, #8]
 5354 011c 3B68     		ldr	r3, [r7]
 5355 011e 9A42     		cmp	r2, r3
 5356 0120 D8D2     		bcs	.L56
 528:fips202.c     ****   }
 529:fips202.c     **** 
 530:fips202.c     ****   if(!outlen)
 5357              		.loc 1 530 5
 5358 0122 BB68     		ldr	r3, [r7, #8]
 5359 0124 002B     		cmp	r3, #0
 5360 0126 01D1     		bne	.L57
 531:fips202.c     ****     return pos;
 5361              		.loc 1 531 12
 5362 0128 BB6A     		ldr	r3, [r7, #40]
 5363 012a 53E0     		b	.L64
 5364              	.L57:
 532:fips202.c     ****   else if(!pos)
 5365              		.loc 1 532 10
 5366 012c BB6A     		ldr	r3, [r7, #40]
 5367 012e 002B     		cmp	r3, #0
 5368 0130 02D1     		bne	.L59
 533:fips202.c     ****     KeccakF1600_StatePermute(s);
 5369              		.loc 1 533 5
 5370 0132 7868     		ldr	r0, [r7, #4]
 5371 0134 FFF7FEFF 		bl	KeccakF1600_StatePermute
 5372              	.L59:
 534:fips202.c     **** 
 535:fips202.c     ****   for(i=0;i<outlen/8;i++)
 5373              		.loc 1 535 8
 5374 0138 0023     		movs	r3, #0
 5375 013a FB61     		str	r3, [r7, #28]
 5376              		.loc 1 535 3
 5377 013c 12E0     		b	.L60
 5378              	.L61:
 536:fips202.c     ****     store64(out+8*i,s[pos/8+i]);
 5379              		.loc 1 536 18 discriminator 3
 5380 013e FB69     		ldr	r3, [r7, #28]
 5381 0140 DB00     		lsls	r3, r3, #3
 5382              		.loc 1 536 5 discriminator 3
 5383 0142 FA68     		ldr	r2, [r7, #12]
 5384 0144 D118     		adds	r1, r2, r3
 5385              		.loc 1 536 26 discriminator 3
 5386 0146 BB6A     		ldr	r3, [r7, #40]
 5387 0148 DA08     		lsrs	r2, r3, #3
 5388              		.loc 1 536 28 discriminator 3
 5389 014a FB69     		ldr	r3, [r7, #28]
 5390 014c 1344     		add	r3, r3, r2
 5391              		.loc 1 536 22 discriminator 3
 5392 014e DB00     		lsls	r3, r3, #3
 5393 0150 7A68     		ldr	r2, [r7, #4]
 5394 0152 1344     		add	r3, r3, r2
 5395              		.loc 1 536 5 discriminator 3
 5396 0154 D3E90023 		ldrd	r2, [r3]
 5397 0158 0846     		mov	r0, r1
 5398 015a FFF7FEFF 		bl	store64
 535:fips202.c     ****     store64(out+8*i,s[pos/8+i]);
 5399              		.loc 1 535 23 discriminator 3
 5400 015e FB69     		ldr	r3, [r7, #28]
 5401 0160 0133     		adds	r3, r3, #1
 5402 0162 FB61     		str	r3, [r7, #28]
 5403              	.L60:
 535:fips202.c     ****     store64(out+8*i,s[pos/8+i]);
 5404              		.loc 1 535 19 discriminator 1
 5405 0164 BB68     		ldr	r3, [r7, #8]
 5406 0166 DB08     		lsrs	r3, r3, #3
 535:fips202.c     ****     store64(out+8*i,s[pos/8+i]);
 5407              		.loc 1 535 3 discriminator 1
 5408 0168 FA69     		ldr	r2, [r7, #28]
 5409 016a 9A42     		cmp	r2, r3
 5410 016c E7D3     		bcc	.L61
 537:fips202.c     ****   out += 8*i;
 5411              		.loc 1 537 11
 5412 016e FB69     		ldr	r3, [r7, #28]
 5413 0170 DB00     		lsls	r3, r3, #3
 5414              		.loc 1 537 7
 5415 0172 FA68     		ldr	r2, [r7, #12]
 5416 0174 1344     		add	r3, r3, r2
 5417 0176 FB60     		str	r3, [r7, #12]
 538:fips202.c     ****   outlen -= 8*i;
 5418              		.loc 1 538 14
 5419 0178 FB69     		ldr	r3, [r7, #28]
 5420 017a DB00     		lsls	r3, r3, #3
 5421              		.loc 1 538 10
 5422 017c BA68     		ldr	r2, [r7, #8]
 5423 017e D31A     		subs	r3, r2, r3
 5424 0180 BB60     		str	r3, [r7, #8]
 539:fips202.c     ****   pos += 8*i;
 5425              		.loc 1 539 11
 5426 0182 FB69     		ldr	r3, [r7, #28]
 5427 0184 DB00     		lsls	r3, r3, #3
 5428              		.loc 1 539 7
 5429 0186 BA6A     		ldr	r2, [r7, #40]
 5430 0188 1344     		add	r3, r3, r2
 5431 018a BB62     		str	r3, [r7, #40]
 540:fips202.c     **** 
 541:fips202.c     ****   store64(t,s[pos/8]);
 5432              		.loc 1 541 14
 5433 018c BB6A     		ldr	r3, [r7, #40]
 5434 018e 23F00703 		bic	r3, r3, #7
 5435 0192 7A68     		ldr	r2, [r7, #4]
 5436 0194 1344     		add	r3, r3, r2
 5437              		.loc 1 541 3
 5438 0196 D3E90023 		ldrd	r2, [r3]
 5439 019a 07F11401 		add	r1, r7, #20
 5440 019e 0846     		mov	r0, r1
 5441 01a0 FFF7FEFF 		bl	store64
 542:fips202.c     ****   for(i=0;i<outlen;i++)
 5442              		.loc 1 542 8
 5443 01a4 0023     		movs	r3, #0
 5444 01a6 FB61     		str	r3, [r7, #28]
 5445              		.loc 1 542 3
 5446 01a8 0BE0     		b	.L62
 5447              	.L63:
 543:fips202.c     ****     out[i] = t[i];
 5448              		.loc 1 543 8 discriminator 3
 5449 01aa FA68     		ldr	r2, [r7, #12]
 5450 01ac FB69     		ldr	r3, [r7, #28]
 5451 01ae 1344     		add	r3, r3, r2
 5452              		.loc 1 543 15 discriminator 3
 5453 01b0 07F11401 		add	r1, r7, #20
 5454 01b4 FA69     		ldr	r2, [r7, #28]
 5455 01b6 0A44     		add	r2, r2, r1
 5456 01b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5457              		.loc 1 543 12 discriminator 3
 5458 01ba 1A70     		strb	r2, [r3]
 542:fips202.c     ****   for(i=0;i<outlen;i++)
 5459              		.loc 1 542 21 discriminator 3
 5460 01bc FB69     		ldr	r3, [r7, #28]
 5461 01be 0133     		adds	r3, r3, #1
 5462 01c0 FB61     		str	r3, [r7, #28]
 5463              	.L62:
 542:fips202.c     ****   for(i=0;i<outlen;i++)
 5464              		.loc 1 542 3 discriminator 1
 5465 01c2 FA69     		ldr	r2, [r7, #28]
 5466 01c4 BB68     		ldr	r3, [r7, #8]
 5467 01c6 9A42     		cmp	r2, r3
 5468 01c8 EFD3     		bcc	.L63
 544:fips202.c     ****   pos += outlen;
 5469              		.loc 1 544 7
 5470 01ca BA6A     		ldr	r2, [r7, #40]
 5471 01cc BB68     		ldr	r3, [r7, #8]
 5472 01ce 1344     		add	r3, r3, r2
 5473 01d0 BB62     		str	r3, [r7, #40]
 545:fips202.c     ****   return pos;
 5474              		.loc 1 545 10
 5475 01d2 BB6A     		ldr	r3, [r7, #40]
 5476              	.L64:
 546:fips202.c     **** }
 5477              		.loc 1 546 1 discriminator 1
 5478 01d4 1846     		mov	r0, r3
 5479 01d6 2037     		adds	r7, r7, #32
 5480              	.LCFI43:
 5481              		.cfi_def_cfa_offset 8
 5482 01d8 BD46     		mov	sp, r7
 5483              	.LCFI44:
 5484              		.cfi_def_cfa_register 13
 5485              		@ sp needed
 5486 01da 80BD     		pop	{r7, pc}
 5487              		.cfi_endproc
 5488              	.LFE7:
 5490              		.section	.text.pqcrystals_fips202_ref_shake128_init,"ax",%progbits
 5491              		.align	1
 5492              		.global	pqcrystals_fips202_ref_shake128_init
 5493              		.syntax unified
 5494              		.thumb
 5495              		.thumb_func
 5496              		.fpu softvfp
 5498              	pqcrystals_fips202_ref_shake128_init:
 5499              	.LFB8:
 547:fips202.c     **** 
 548:fips202.c     **** /*************************************************
 549:fips202.c     **** * Name:        shake128_init
 550:fips202.c     **** *
 551:fips202.c     **** * Description: Initilizes Keccak state for use as SHAKE128 XOF
 552:fips202.c     **** *
 553:fips202.c     **** * Arguments:   - keccak_state *state: pointer to (uninitialized)
 554:fips202.c     **** *                                     Keccak state
 555:fips202.c     **** **************************************************/
 556:fips202.c     **** void shake128_init(keccak_state *state)
 557:fips202.c     **** {
 5500              		.loc 1 557 1
 5501              		.cfi_startproc
 5502              		@ args = 0, pretend = 0, frame = 8
 5503              		@ frame_needed = 1, uses_anonymous_args = 0
 5504 0000 80B5     		push	{r7, lr}
 5505              	.LCFI45:
 5506              		.cfi_def_cfa_offset 8
 5507              		.cfi_offset 7, -8
 5508              		.cfi_offset 14, -4
 5509 0002 82B0     		sub	sp, sp, #8
 5510              	.LCFI46:
 5511              		.cfi_def_cfa_offset 16
 5512 0004 00AF     		add	r7, sp, #0
 5513              	.LCFI47:
 5514              		.cfi_def_cfa_register 7
 5515 0006 7860     		str	r0, [r7, #4]
 558:fips202.c     ****   keccak_init(state);
 5516              		.loc 1 558 3
 5517 0008 7868     		ldr	r0, [r7, #4]
 5518 000a FFF7FEFF 		bl	keccak_init
 559:fips202.c     **** }
 5519              		.loc 1 559 1
 5520 000e 00BF     		nop
 5521 0010 0837     		adds	r7, r7, #8
 5522              	.LCFI48:
 5523              		.cfi_def_cfa_offset 8
 5524 0012 BD46     		mov	sp, r7
 5525              	.LCFI49:
 5526              		.cfi_def_cfa_register 13
 5527              		@ sp needed
 5528 0014 80BD     		pop	{r7, pc}
 5529              		.cfi_endproc
 5530              	.LFE8:
 5532              		.section	.text.pqcrystals_fips202_ref_shake128_absorb,"ax",%progbits
 5533              		.align	1
 5534              		.global	pqcrystals_fips202_ref_shake128_absorb
 5535              		.syntax unified
 5536              		.thumb
 5537              		.thumb_func
 5538              		.fpu softvfp
 5540              	pqcrystals_fips202_ref_shake128_absorb:
 5541              	.LFB9:
 560:fips202.c     **** 
 561:fips202.c     **** /*************************************************
 562:fips202.c     **** * Name:        shake128_absorb
 563:fips202.c     **** *
 564:fips202.c     **** * Description: Absorb step of the SHAKE128 XOF; incremental.
 565:fips202.c     **** *
 566:fips202.c     **** * Arguments:   - keccak_state *state: pointer to (initialized) output
 567:fips202.c     **** *                                     Keccak state
 568:fips202.c     **** *              - const uint8_t *in:   pointer to input to be absorbed into s
 569:fips202.c     **** *              - size_t inlen:        length of input in bytes
 570:fips202.c     **** **************************************************/
 571:fips202.c     **** void shake128_absorb(keccak_state *state, const uint8_t *in, size_t inlen)
 572:fips202.c     **** {
 5542              		.loc 1 572 1
 5543              		.cfi_startproc
 5544              		@ args = 0, pretend = 0, frame = 16
 5545              		@ frame_needed = 1, uses_anonymous_args = 0
 5546 0000 80B5     		push	{r7, lr}
 5547              	.LCFI50:
 5548              		.cfi_def_cfa_offset 8
 5549              		.cfi_offset 7, -8
 5550              		.cfi_offset 14, -4
 5551 0002 86B0     		sub	sp, sp, #24
 5552              	.LCFI51:
 5553              		.cfi_def_cfa_offset 32
 5554 0004 02AF     		add	r7, sp, #8
 5555              	.LCFI52:
 5556              		.cfi_def_cfa 7, 24
 5557 0006 F860     		str	r0, [r7, #12]
 5558 0008 B960     		str	r1, [r7, #8]
 5559 000a 7A60     		str	r2, [r7, #4]
 573:fips202.c     ****   state->pos = keccak_absorb(state->s, SHAKE128_RATE, state->pos, in, inlen);
 5560              		.loc 1 573 35
 5561 000c F868     		ldr	r0, [r7, #12]
 5562              		.loc 1 573 16
 5563 000e FB68     		ldr	r3, [r7, #12]
 5564 0010 D3F8C820 		ldr	r2, [r3, #200]
 5565 0014 7B68     		ldr	r3, [r7, #4]
 5566 0016 0093     		str	r3, [sp]
 5567 0018 BB68     		ldr	r3, [r7, #8]
 5568 001a A821     		movs	r1, #168
 5569 001c FFF7FEFF 		bl	keccak_absorb
 5570 0020 0246     		mov	r2, r0
 5571              		.loc 1 573 14
 5572 0022 FB68     		ldr	r3, [r7, #12]
 5573 0024 C3F8C820 		str	r2, [r3, #200]
 574:fips202.c     **** }
 5574              		.loc 1 574 1
 5575 0028 00BF     		nop
 5576 002a 1037     		adds	r7, r7, #16
 5577              	.LCFI53:
 5578              		.cfi_def_cfa_offset 8
 5579 002c BD46     		mov	sp, r7
 5580              	.LCFI54:
 5581              		.cfi_def_cfa_register 13
 5582              		@ sp needed
 5583 002e 80BD     		pop	{r7, pc}
 5584              		.cfi_endproc
 5585              	.LFE9:
 5587              		.section	.text.pqcrystals_fips202_ref_shake128_finalize,"ax",%progbits
 5588              		.align	1
 5589              		.global	pqcrystals_fips202_ref_shake128_finalize
 5590              		.syntax unified
 5591              		.thumb
 5592              		.thumb_func
 5593              		.fpu softvfp
 5595              	pqcrystals_fips202_ref_shake128_finalize:
 5596              	.LFB10:
 575:fips202.c     **** 
 576:fips202.c     **** /*************************************************
 577:fips202.c     **** * Name:        shake128_finalize
 578:fips202.c     **** *
 579:fips202.c     **** * Description: Finalize absorb step of the SHAKE128 XOF.
 580:fips202.c     **** *
 581:fips202.c     **** * Arguments:   - keccak_state *state: pointer to Keccak state
 582:fips202.c     **** **************************************************/
 583:fips202.c     **** void shake128_finalize(keccak_state *state)
 584:fips202.c     **** {
 5597              		.loc 1 584 1
 5598              		.cfi_startproc
 5599              		@ args = 0, pretend = 0, frame = 8
 5600              		@ frame_needed = 1, uses_anonymous_args = 0
 5601 0000 80B5     		push	{r7, lr}
 5602              	.LCFI55:
 5603              		.cfi_def_cfa_offset 8
 5604              		.cfi_offset 7, -8
 5605              		.cfi_offset 14, -4
 5606 0002 82B0     		sub	sp, sp, #8
 5607              	.LCFI56:
 5608              		.cfi_def_cfa_offset 16
 5609 0004 00AF     		add	r7, sp, #0
 5610              	.LCFI57:
 5611              		.cfi_def_cfa_register 7
 5612 0006 7860     		str	r0, [r7, #4]
 585:fips202.c     ****   keccak_finalize(state->s, SHAKE128_RATE, state->pos, 0x1F);
 5613              		.loc 1 585 24
 5614 0008 7868     		ldr	r0, [r7, #4]
 5615              		.loc 1 585 3
 5616 000a 7B68     		ldr	r3, [r7, #4]
 5617 000c D3F8C820 		ldr	r2, [r3, #200]
 5618 0010 1F23     		movs	r3, #31
 5619 0012 A821     		movs	r1, #168
 5620 0014 FFF7FEFF 		bl	keccak_finalize
 586:fips202.c     ****   state->pos = 0;
 5621              		.loc 1 586 14
 5622 0018 7B68     		ldr	r3, [r7, #4]
 5623 001a 0022     		movs	r2, #0
 5624 001c C3F8C820 		str	r2, [r3, #200]
 587:fips202.c     **** }
 5625              		.loc 1 587 1
 5626 0020 00BF     		nop
 5627 0022 0837     		adds	r7, r7, #8
 5628              	.LCFI58:
 5629              		.cfi_def_cfa_offset 8
 5630 0024 BD46     		mov	sp, r7
 5631              	.LCFI59:
 5632              		.cfi_def_cfa_register 13
 5633              		@ sp needed
 5634 0026 80BD     		pop	{r7, pc}
 5635              		.cfi_endproc
 5636              	.LFE10:
 5638              		.section	.text.pqcrystals_fips202_ref_shake128_squeezeblocks,"ax",%progbits
 5639              		.align	1
 5640              		.global	pqcrystals_fips202_ref_shake128_squeezeblocks
 5641              		.syntax unified
 5642              		.thumb
 5643              		.thumb_func
 5644              		.fpu softvfp
 5646              	pqcrystals_fips202_ref_shake128_squeezeblocks:
 5647              	.LFB11:
 588:fips202.c     **** 
 589:fips202.c     **** /*************************************************
 590:fips202.c     **** * Name:        shake128_squeezeblocks
 591:fips202.c     **** *
 592:fips202.c     **** * Description: Squeeze step of SHAKE128 XOF. Squeezes full blocks of
 593:fips202.c     **** *              SHAKE128_RATE bytes each. Can be called multiple times
 594:fips202.c     **** *              to keep squeezing. Assumes zero bytes of current block
 595:fips202.c     **** *              have already been squeezed (state->pos = 0).
 596:fips202.c     **** *
 597:fips202.c     **** * Arguments:   - uint8_t *out:    pointer to output blocks
 598:fips202.c     **** *              - size_t nblocks:  number of blocks to be squeezed
 599:fips202.c     **** *                                 (written to output)
 600:fips202.c     **** *              - keccak_state *s: pointer to input/output Keccak state
 601:fips202.c     **** **************************************************/
 602:fips202.c     **** void shake128_squeezeblocks(uint8_t *out, size_t nblocks, keccak_state *state)
 603:fips202.c     **** {
 5648              		.loc 1 603 1
 5649              		.cfi_startproc
 5650              		@ args = 0, pretend = 0, frame = 16
 5651              		@ frame_needed = 1, uses_anonymous_args = 0
 5652 0000 80B5     		push	{r7, lr}
 5653              	.LCFI60:
 5654              		.cfi_def_cfa_offset 8
 5655              		.cfi_offset 7, -8
 5656              		.cfi_offset 14, -4
 5657 0002 84B0     		sub	sp, sp, #16
 5658              	.LCFI61:
 5659              		.cfi_def_cfa_offset 24
 5660 0004 00AF     		add	r7, sp, #0
 5661              	.LCFI62:
 5662              		.cfi_def_cfa_register 7
 5663 0006 F860     		str	r0, [r7, #12]
 5664 0008 B960     		str	r1, [r7, #8]
 5665 000a 7A60     		str	r2, [r7, #4]
 604:fips202.c     ****   keccak_squeezeblocks(out, nblocks, state->s, SHAKE128_RATE);
 5666              		.loc 1 604 43
 5667 000c 7A68     		ldr	r2, [r7, #4]
 5668              		.loc 1 604 3
 5669 000e A823     		movs	r3, #168
 5670 0010 B968     		ldr	r1, [r7, #8]
 5671 0012 F868     		ldr	r0, [r7, #12]
 5672 0014 FFF7FEFF 		bl	keccak_squeezeblocks
 605:fips202.c     **** }
 5673              		.loc 1 605 1
 5674 0018 00BF     		nop
 5675 001a 1037     		adds	r7, r7, #16
 5676              	.LCFI63:
 5677              		.cfi_def_cfa_offset 8
 5678 001c BD46     		mov	sp, r7
 5679              	.LCFI64:
 5680              		.cfi_def_cfa_register 13
 5681              		@ sp needed
 5682 001e 80BD     		pop	{r7, pc}
 5683              		.cfi_endproc
 5684              	.LFE11:
 5686              		.section	.text.pqcrystals_fips202_ref_shake128_squeeze,"ax",%progbits
 5687              		.align	1
 5688              		.global	pqcrystals_fips202_ref_shake128_squeeze
 5689              		.syntax unified
 5690              		.thumb
 5691              		.thumb_func
 5692              		.fpu softvfp
 5694              	pqcrystals_fips202_ref_shake128_squeeze:
 5695              	.LFB12:
 606:fips202.c     **** 
 607:fips202.c     **** /*************************************************
 608:fips202.c     **** * Name:        shake128_squeeze
 609:fips202.c     **** *
 610:fips202.c     **** * Description: Squeeze step of SHAKE128 XOF. Squeezes arbitraily many
 611:fips202.c     **** *              bytes. Can be called multiple times to keep squeezing.
 612:fips202.c     **** *
 613:fips202.c     **** * Arguments:   - uint8_t *out:    pointer to output blocks
 614:fips202.c     **** *              - size_t outlen :  number of bytes to be squeezed
 615:fips202.c     **** *                                 (written to output)
 616:fips202.c     **** *              - keccak_state *s: pointer to input/output Keccak state
 617:fips202.c     **** **************************************************/
 618:fips202.c     **** void shake128_squeeze(uint8_t *out, size_t outlen, keccak_state *state)
 619:fips202.c     **** {
 5696              		.loc 1 619 1
 5697              		.cfi_startproc
 5698              		@ args = 0, pretend = 0, frame = 16
 5699              		@ frame_needed = 1, uses_anonymous_args = 0
 5700 0000 80B5     		push	{r7, lr}
 5701              	.LCFI65:
 5702              		.cfi_def_cfa_offset 8
 5703              		.cfi_offset 7, -8
 5704              		.cfi_offset 14, -4
 5705 0002 86B0     		sub	sp, sp, #24
 5706              	.LCFI66:
 5707              		.cfi_def_cfa_offset 32
 5708 0004 02AF     		add	r7, sp, #8
 5709              	.LCFI67:
 5710              		.cfi_def_cfa 7, 24
 5711 0006 F860     		str	r0, [r7, #12]
 5712 0008 B960     		str	r1, [r7, #8]
 5713 000a 7A60     		str	r2, [r7, #4]
 620:fips202.c     ****   state->pos = keccak_squeeze(out, outlen, state->s, SHAKE128_RATE, state->pos);
 5714              		.loc 1 620 49
 5715 000c 7A68     		ldr	r2, [r7, #4]
 5716              		.loc 1 620 16
 5717 000e 7B68     		ldr	r3, [r7, #4]
 5718 0010 D3F8C830 		ldr	r3, [r3, #200]
 5719 0014 0093     		str	r3, [sp]
 5720 0016 A823     		movs	r3, #168
 5721 0018 B968     		ldr	r1, [r7, #8]
 5722 001a F868     		ldr	r0, [r7, #12]
 5723 001c FFF7FEFF 		bl	keccak_squeeze
 5724 0020 0246     		mov	r2, r0
 5725              		.loc 1 620 14
 5726 0022 7B68     		ldr	r3, [r7, #4]
 5727 0024 C3F8C820 		str	r2, [r3, #200]
 621:fips202.c     **** }
 5728              		.loc 1 621 1
 5729 0028 00BF     		nop
 5730 002a 1037     		adds	r7, r7, #16
 5731              	.LCFI68:
 5732              		.cfi_def_cfa_offset 8
 5733 002c BD46     		mov	sp, r7
 5734              	.LCFI69:
 5735              		.cfi_def_cfa_register 13
 5736              		@ sp needed
 5737 002e 80BD     		pop	{r7, pc}
 5738              		.cfi_endproc
 5739              	.LFE12:
 5741              		.section	.text.pqcrystals_fips202_ref_shake256_init,"ax",%progbits
 5742              		.align	1
 5743              		.global	pqcrystals_fips202_ref_shake256_init
 5744              		.syntax unified
 5745              		.thumb
 5746              		.thumb_func
 5747              		.fpu softvfp
 5749              	pqcrystals_fips202_ref_shake256_init:
 5750              	.LFB13:
 622:fips202.c     **** 
 623:fips202.c     **** /*************************************************
 624:fips202.c     **** * Name:        shake256_init
 625:fips202.c     **** *
 626:fips202.c     **** * Description: Initilizes Keccak state for use as SHAKE256 XOF
 627:fips202.c     **** *
 628:fips202.c     **** * Arguments:   - keccak_state *state: pointer to (uninitialized)
 629:fips202.c     **** *                                     Keccak state
 630:fips202.c     **** **************************************************/
 631:fips202.c     **** void shake256_init(keccak_state *state)
 632:fips202.c     **** {
 5751              		.loc 1 632 1
 5752              		.cfi_startproc
 5753              		@ args = 0, pretend = 0, frame = 8
 5754              		@ frame_needed = 1, uses_anonymous_args = 0
 5755 0000 80B5     		push	{r7, lr}
 5756              	.LCFI70:
 5757              		.cfi_def_cfa_offset 8
 5758              		.cfi_offset 7, -8
 5759              		.cfi_offset 14, -4
 5760 0002 82B0     		sub	sp, sp, #8
 5761              	.LCFI71:
 5762              		.cfi_def_cfa_offset 16
 5763 0004 00AF     		add	r7, sp, #0
 5764              	.LCFI72:
 5765              		.cfi_def_cfa_register 7
 5766 0006 7860     		str	r0, [r7, #4]
 633:fips202.c     ****   keccak_init(state);
 5767              		.loc 1 633 3
 5768 0008 7868     		ldr	r0, [r7, #4]
 5769 000a FFF7FEFF 		bl	keccak_init
 634:fips202.c     **** }
 5770              		.loc 1 634 1
 5771 000e 00BF     		nop
 5772 0010 0837     		adds	r7, r7, #8
 5773              	.LCFI73:
 5774              		.cfi_def_cfa_offset 8
 5775 0012 BD46     		mov	sp, r7
 5776              	.LCFI74:
 5777              		.cfi_def_cfa_register 13
 5778              		@ sp needed
 5779 0014 80BD     		pop	{r7, pc}
 5780              		.cfi_endproc
 5781              	.LFE13:
 5783              		.section	.text.pqcrystals_fips202_ref_shake256_absorb,"ax",%progbits
 5784              		.align	1
 5785              		.global	pqcrystals_fips202_ref_shake256_absorb
 5786              		.syntax unified
 5787              		.thumb
 5788              		.thumb_func
 5789              		.fpu softvfp
 5791              	pqcrystals_fips202_ref_shake256_absorb:
 5792              	.LFB14:
 635:fips202.c     **** 
 636:fips202.c     **** /*************************************************
 637:fips202.c     **** * Name:        shake256_absorb
 638:fips202.c     **** *
 639:fips202.c     **** * Description: Absorb step of the SHAKE256 XOF; incremental.
 640:fips202.c     **** *
 641:fips202.c     **** * Arguments:   - keccak_state *state: pointer to (initialized) output
 642:fips202.c     **** *                                     Keccak state
 643:fips202.c     **** *              - const uint8_t *in:   pointer to input to be absorbed into s
 644:fips202.c     **** *              - size_t inlen:        length of input in bytes
 645:fips202.c     **** **************************************************/
 646:fips202.c     **** void shake256_absorb(keccak_state *state, const uint8_t *in, size_t inlen)
 647:fips202.c     **** {
 5793              		.loc 1 647 1
 5794              		.cfi_startproc
 5795              		@ args = 0, pretend = 0, frame = 16
 5796              		@ frame_needed = 1, uses_anonymous_args = 0
 5797 0000 80B5     		push	{r7, lr}
 5798              	.LCFI75:
 5799              		.cfi_def_cfa_offset 8
 5800              		.cfi_offset 7, -8
 5801              		.cfi_offset 14, -4
 5802 0002 86B0     		sub	sp, sp, #24
 5803              	.LCFI76:
 5804              		.cfi_def_cfa_offset 32
 5805 0004 02AF     		add	r7, sp, #8
 5806              	.LCFI77:
 5807              		.cfi_def_cfa 7, 24
 5808 0006 F860     		str	r0, [r7, #12]
 5809 0008 B960     		str	r1, [r7, #8]
 5810 000a 7A60     		str	r2, [r7, #4]
 648:fips202.c     ****   state->pos = keccak_absorb(state->s, SHAKE256_RATE, state->pos, in, inlen);
 5811              		.loc 1 648 35
 5812 000c F868     		ldr	r0, [r7, #12]
 5813              		.loc 1 648 16
 5814 000e FB68     		ldr	r3, [r7, #12]
 5815 0010 D3F8C820 		ldr	r2, [r3, #200]
 5816 0014 7B68     		ldr	r3, [r7, #4]
 5817 0016 0093     		str	r3, [sp]
 5818 0018 BB68     		ldr	r3, [r7, #8]
 5819 001a 8821     		movs	r1, #136
 5820 001c FFF7FEFF 		bl	keccak_absorb
 5821 0020 0246     		mov	r2, r0
 5822              		.loc 1 648 14
 5823 0022 FB68     		ldr	r3, [r7, #12]
 5824 0024 C3F8C820 		str	r2, [r3, #200]
 649:fips202.c     **** }
 5825              		.loc 1 649 1
 5826 0028 00BF     		nop
 5827 002a 1037     		adds	r7, r7, #16
 5828              	.LCFI78:
 5829              		.cfi_def_cfa_offset 8
 5830 002c BD46     		mov	sp, r7
 5831              	.LCFI79:
 5832              		.cfi_def_cfa_register 13
 5833              		@ sp needed
 5834 002e 80BD     		pop	{r7, pc}
 5835              		.cfi_endproc
 5836              	.LFE14:
 5838              		.section	.text.pqcrystals_fips202_ref_shake256_finalize,"ax",%progbits
 5839              		.align	1
 5840              		.global	pqcrystals_fips202_ref_shake256_finalize
 5841              		.syntax unified
 5842              		.thumb
 5843              		.thumb_func
 5844              		.fpu softvfp
 5846              	pqcrystals_fips202_ref_shake256_finalize:
 5847              	.LFB15:
 650:fips202.c     **** 
 651:fips202.c     **** /*************************************************
 652:fips202.c     **** * Name:        shake256_finalize
 653:fips202.c     **** *
 654:fips202.c     **** * Description: Finalize absorb step of the SHAKE256 XOF.
 655:fips202.c     **** *
 656:fips202.c     **** * Arguments:   - keccak_state *state: pointer to Keccak state
 657:fips202.c     **** **************************************************/
 658:fips202.c     **** void shake256_finalize(keccak_state *state)
 659:fips202.c     **** {
 5848              		.loc 1 659 1
 5849              		.cfi_startproc
 5850              		@ args = 0, pretend = 0, frame = 8
 5851              		@ frame_needed = 1, uses_anonymous_args = 0
 5852 0000 80B5     		push	{r7, lr}
 5853              	.LCFI80:
 5854              		.cfi_def_cfa_offset 8
 5855              		.cfi_offset 7, -8
 5856              		.cfi_offset 14, -4
 5857 0002 82B0     		sub	sp, sp, #8
 5858              	.LCFI81:
 5859              		.cfi_def_cfa_offset 16
 5860 0004 00AF     		add	r7, sp, #0
 5861              	.LCFI82:
 5862              		.cfi_def_cfa_register 7
 5863 0006 7860     		str	r0, [r7, #4]
 660:fips202.c     ****   keccak_finalize(state->s, SHAKE256_RATE, state->pos, 0x1F);
 5864              		.loc 1 660 24
 5865 0008 7868     		ldr	r0, [r7, #4]
 5866              		.loc 1 660 3
 5867 000a 7B68     		ldr	r3, [r7, #4]
 5868 000c D3F8C820 		ldr	r2, [r3, #200]
 5869 0010 1F23     		movs	r3, #31
 5870 0012 8821     		movs	r1, #136
 5871 0014 FFF7FEFF 		bl	keccak_finalize
 661:fips202.c     ****   state->pos = 0;
 5872              		.loc 1 661 14
 5873 0018 7B68     		ldr	r3, [r7, #4]
 5874 001a 0022     		movs	r2, #0
 5875 001c C3F8C820 		str	r2, [r3, #200]
 662:fips202.c     **** }
 5876              		.loc 1 662 1
 5877 0020 00BF     		nop
 5878 0022 0837     		adds	r7, r7, #8
 5879              	.LCFI83:
 5880              		.cfi_def_cfa_offset 8
 5881 0024 BD46     		mov	sp, r7
 5882              	.LCFI84:
 5883              		.cfi_def_cfa_register 13
 5884              		@ sp needed
 5885 0026 80BD     		pop	{r7, pc}
 5886              		.cfi_endproc
 5887              	.LFE15:
 5889              		.section	.text.pqcrystals_fips202_ref_shake256_squeezeblocks,"ax",%progbits
 5890              		.align	1
 5891              		.global	pqcrystals_fips202_ref_shake256_squeezeblocks
 5892              		.syntax unified
 5893              		.thumb
 5894              		.thumb_func
 5895              		.fpu softvfp
 5897              	pqcrystals_fips202_ref_shake256_squeezeblocks:
 5898              	.LFB16:
 663:fips202.c     **** 
 664:fips202.c     **** /*************************************************
 665:fips202.c     **** * Name:        shake256_squeezeblocks
 666:fips202.c     **** *
 667:fips202.c     **** * Description: Squeeze step of SHAKE256 XOF. Squeezes full blocks of
 668:fips202.c     **** *              SHAKE256_RATE bytes each. Can be called multiple times
 669:fips202.c     **** *              to keep squeezing. Assumes zero bytes of current block
 670:fips202.c     **** *              have already been squeezed (state->pos = 0).
 671:fips202.c     **** *
 672:fips202.c     **** * Arguments:   - uint8_t *out:    pointer to output blocks
 673:fips202.c     **** *              - size_t nblocks:  number of blocks to be squeezed
 674:fips202.c     **** *                                 (written to output)
 675:fips202.c     **** *              - keccak_state *s: pointer to input/output Keccak state
 676:fips202.c     **** **************************************************/
 677:fips202.c     **** void shake256_squeezeblocks(uint8_t *out, size_t nblocks, keccak_state *state)
 678:fips202.c     **** {
 5899              		.loc 1 678 1
 5900              		.cfi_startproc
 5901              		@ args = 0, pretend = 0, frame = 16
 5902              		@ frame_needed = 1, uses_anonymous_args = 0
 5903 0000 80B5     		push	{r7, lr}
 5904              	.LCFI85:
 5905              		.cfi_def_cfa_offset 8
 5906              		.cfi_offset 7, -8
 5907              		.cfi_offset 14, -4
 5908 0002 84B0     		sub	sp, sp, #16
 5909              	.LCFI86:
 5910              		.cfi_def_cfa_offset 24
 5911 0004 00AF     		add	r7, sp, #0
 5912              	.LCFI87:
 5913              		.cfi_def_cfa_register 7
 5914 0006 F860     		str	r0, [r7, #12]
 5915 0008 B960     		str	r1, [r7, #8]
 5916 000a 7A60     		str	r2, [r7, #4]
 679:fips202.c     ****   keccak_squeezeblocks(out, nblocks, state->s, SHAKE256_RATE);
 5917              		.loc 1 679 43
 5918 000c 7A68     		ldr	r2, [r7, #4]
 5919              		.loc 1 679 3
 5920 000e 8823     		movs	r3, #136
 5921 0010 B968     		ldr	r1, [r7, #8]
 5922 0012 F868     		ldr	r0, [r7, #12]
 5923 0014 FFF7FEFF 		bl	keccak_squeezeblocks
 680:fips202.c     **** }
 5924              		.loc 1 680 1
 5925 0018 00BF     		nop
 5926 001a 1037     		adds	r7, r7, #16
 5927              	.LCFI88:
 5928              		.cfi_def_cfa_offset 8
 5929 001c BD46     		mov	sp, r7
 5930              	.LCFI89:
 5931              		.cfi_def_cfa_register 13
 5932              		@ sp needed
 5933 001e 80BD     		pop	{r7, pc}
 5934              		.cfi_endproc
 5935              	.LFE16:
 5937              		.section	.text.pqcrystals_fips202_ref_shake256_squeeze,"ax",%progbits
 5938              		.align	1
 5939              		.global	pqcrystals_fips202_ref_shake256_squeeze
 5940              		.syntax unified
 5941              		.thumb
 5942              		.thumb_func
 5943              		.fpu softvfp
 5945              	pqcrystals_fips202_ref_shake256_squeeze:
 5946              	.LFB17:
 681:fips202.c     **** 
 682:fips202.c     **** /*************************************************
 683:fips202.c     **** * Name:        shake256_squeeze
 684:fips202.c     **** *
 685:fips202.c     **** * Description: Squeeze step of SHAKE256 XOF. Squeezes arbitraily many
 686:fips202.c     **** *              bytes. Can be called multiple times to keep squeezing.
 687:fips202.c     **** *
 688:fips202.c     **** * Arguments:   - uint8_t *out:    pointer to output blocks
 689:fips202.c     **** *              - size_t outlen :  number of bytes to be squeezed
 690:fips202.c     **** *                                 (written to output)
 691:fips202.c     **** *              - keccak_state *s: pointer to input/output Keccak state
 692:fips202.c     **** **************************************************/
 693:fips202.c     **** void shake256_squeeze(uint8_t *out, size_t outlen, keccak_state *state)
 694:fips202.c     **** {
 5947              		.loc 1 694 1
 5948              		.cfi_startproc
 5949              		@ args = 0, pretend = 0, frame = 16
 5950              		@ frame_needed = 1, uses_anonymous_args = 0
 5951 0000 80B5     		push	{r7, lr}
 5952              	.LCFI90:
 5953              		.cfi_def_cfa_offset 8
 5954              		.cfi_offset 7, -8
 5955              		.cfi_offset 14, -4
 5956 0002 86B0     		sub	sp, sp, #24
 5957              	.LCFI91:
 5958              		.cfi_def_cfa_offset 32
 5959 0004 02AF     		add	r7, sp, #8
 5960              	.LCFI92:
 5961              		.cfi_def_cfa 7, 24
 5962 0006 F860     		str	r0, [r7, #12]
 5963 0008 B960     		str	r1, [r7, #8]
 5964 000a 7A60     		str	r2, [r7, #4]
 695:fips202.c     ****   state->pos = keccak_squeeze(out, outlen, state->s, SHAKE256_RATE, state->pos);
 5965              		.loc 1 695 49
 5966 000c 7A68     		ldr	r2, [r7, #4]
 5967              		.loc 1 695 16
 5968 000e 7B68     		ldr	r3, [r7, #4]
 5969 0010 D3F8C830 		ldr	r3, [r3, #200]
 5970 0014 0093     		str	r3, [sp]
 5971 0016 8823     		movs	r3, #136
 5972 0018 B968     		ldr	r1, [r7, #8]
 5973 001a F868     		ldr	r0, [r7, #12]
 5974 001c FFF7FEFF 		bl	keccak_squeeze
 5975 0020 0246     		mov	r2, r0
 5976              		.loc 1 695 14
 5977 0022 7B68     		ldr	r3, [r7, #4]
 5978 0024 C3F8C820 		str	r2, [r3, #200]
 696:fips202.c     **** }
 5979              		.loc 1 696 1
 5980 0028 00BF     		nop
 5981 002a 1037     		adds	r7, r7, #16
 5982              	.LCFI93:
 5983              		.cfi_def_cfa_offset 8
 5984 002c BD46     		mov	sp, r7
 5985              	.LCFI94:
 5986              		.cfi_def_cfa_register 13
 5987              		@ sp needed
 5988 002e 80BD     		pop	{r7, pc}
 5989              		.cfi_endproc
 5990              	.LFE17:
 5992              		.section	.text.pqcrystals_fips202_ref_shake128,"ax",%progbits
 5993              		.align	1
 5994              		.global	pqcrystals_fips202_ref_shake128
 5995              		.syntax unified
 5996              		.thumb
 5997              		.thumb_func
 5998              		.fpu softvfp
 6000              	pqcrystals_fips202_ref_shake128:
 6001              	.LFB18:
 697:fips202.c     **** 
 698:fips202.c     **** /*************************************************
 699:fips202.c     **** * Name:        shake128
 700:fips202.c     **** *
 701:fips202.c     **** * Description: SHAKE128 XOF with non-incremental API
 702:fips202.c     **** *
 703:fips202.c     **** * Arguments:   - uint8_t *out:      pointer to output
 704:fips202.c     **** *              - size_t outlen:     requested output length in bytes
 705:fips202.c     **** *              - const uint8_t *in: pointer to input
 706:fips202.c     **** *              - size_t inlen:      length of input in bytes
 707:fips202.c     **** **************************************************/
 708:fips202.c     **** void shake128(uint8_t *out, size_t outlen, const uint8_t *in, size_t inlen)
 709:fips202.c     **** {
 6002              		.loc 1 709 1
 6003              		.cfi_startproc
 6004              		@ args = 0, pretend = 0, frame = 224
 6005              		@ frame_needed = 1, uses_anonymous_args = 0
 6006 0000 80B5     		push	{r7, lr}
 6007              	.LCFI95:
 6008              		.cfi_def_cfa_offset 8
 6009              		.cfi_offset 7, -8
 6010              		.cfi_offset 14, -4
 6011 0002 B8B0     		sub	sp, sp, #224
 6012              	.LCFI96:
 6013              		.cfi_def_cfa_offset 232
 6014 0004 00AF     		add	r7, sp, #0
 6015              	.LCFI97:
 6016              		.cfi_def_cfa_register 7
 6017 0006 F860     		str	r0, [r7, #12]
 6018 0008 B960     		str	r1, [r7, #8]
 6019 000a 7A60     		str	r2, [r7, #4]
 6020 000c 3B60     		str	r3, [r7]
 710:fips202.c     ****   keccak_state state;
 711:fips202.c     **** 
 712:fips202.c     ****   shake128_init(&state);
 6021              		.loc 1 712 3
 6022 000e 07F11003 		add	r3, r7, #16
 6023 0012 1846     		mov	r0, r3
 6024 0014 FFF7FEFF 		bl	pqcrystals_fips202_ref_shake128_init
 713:fips202.c     ****   shake128_absorb(&state, in, inlen);
 6025              		.loc 1 713 3
 6026 0018 07F11003 		add	r3, r7, #16
 6027 001c 3A68     		ldr	r2, [r7]
 6028 001e 7968     		ldr	r1, [r7, #4]
 6029 0020 1846     		mov	r0, r3
 6030 0022 FFF7FEFF 		bl	pqcrystals_fips202_ref_shake128_absorb
 714:fips202.c     ****   shake128_finalize(&state);
 6031              		.loc 1 714 3
 6032 0026 07F11003 		add	r3, r7, #16
 6033 002a 1846     		mov	r0, r3
 6034 002c FFF7FEFF 		bl	pqcrystals_fips202_ref_shake128_finalize
 715:fips202.c     ****   shake128_squeeze(out, outlen, &state);
 6035              		.loc 1 715 3
 6036 0030 07F11003 		add	r3, r7, #16
 6037 0034 1A46     		mov	r2, r3
 6038 0036 B968     		ldr	r1, [r7, #8]
 6039 0038 F868     		ldr	r0, [r7, #12]
 6040 003a FFF7FEFF 		bl	pqcrystals_fips202_ref_shake128_squeeze
 716:fips202.c     **** }
 6041              		.loc 1 716 1
 6042 003e 00BF     		nop
 6043 0040 E037     		adds	r7, r7, #224
 6044              	.LCFI98:
 6045              		.cfi_def_cfa_offset 8
 6046 0042 BD46     		mov	sp, r7
 6047              	.LCFI99:
 6048              		.cfi_def_cfa_register 13
 6049              		@ sp needed
 6050 0044 80BD     		pop	{r7, pc}
 6051              		.cfi_endproc
 6052              	.LFE18:
 6054              		.section	.text.pqcrystals_fips202_ref_shake256,"ax",%progbits
 6055              		.align	1
 6056              		.global	pqcrystals_fips202_ref_shake256
 6057              		.syntax unified
 6058              		.thumb
 6059              		.thumb_func
 6060              		.fpu softvfp
 6062              	pqcrystals_fips202_ref_shake256:
 6063              	.LFB19:
 717:fips202.c     **** 
 718:fips202.c     **** /*************************************************
 719:fips202.c     **** * Name:        shake256
 720:fips202.c     **** *
 721:fips202.c     **** * Description: SHAKE256 XOF with non-incremental API
 722:fips202.c     **** *
 723:fips202.c     **** * Arguments:   - uint8_t *out:      pointer to output
 724:fips202.c     **** *              - size_t outlen:     requested output length in bytes
 725:fips202.c     **** *              - const uint8_t *in: pointer to input
 726:fips202.c     **** *              - size_t inlen:      length of input in bytes
 727:fips202.c     **** **************************************************/
 728:fips202.c     **** void shake256(uint8_t *out, size_t outlen, const uint8_t *in, size_t inlen)
 729:fips202.c     **** {
 6064              		.loc 1 729 1
 6065              		.cfi_startproc
 6066              		@ args = 0, pretend = 0, frame = 224
 6067              		@ frame_needed = 1, uses_anonymous_args = 0
 6068 0000 80B5     		push	{r7, lr}
 6069              	.LCFI100:
 6070              		.cfi_def_cfa_offset 8
 6071              		.cfi_offset 7, -8
 6072              		.cfi_offset 14, -4
 6073 0002 B8B0     		sub	sp, sp, #224
 6074              	.LCFI101:
 6075              		.cfi_def_cfa_offset 232
 6076 0004 00AF     		add	r7, sp, #0
 6077              	.LCFI102:
 6078              		.cfi_def_cfa_register 7
 6079 0006 F860     		str	r0, [r7, #12]
 6080 0008 B960     		str	r1, [r7, #8]
 6081 000a 7A60     		str	r2, [r7, #4]
 6082 000c 3B60     		str	r3, [r7]
 730:fips202.c     ****   keccak_state state;
 731:fips202.c     **** 
 732:fips202.c     ****   shake256_init(&state);
 6083              		.loc 1 732 3
 6084 000e 07F11003 		add	r3, r7, #16
 6085 0012 1846     		mov	r0, r3
 6086 0014 FFF7FEFF 		bl	pqcrystals_fips202_ref_shake256_init
 733:fips202.c     ****   shake256_absorb(&state, in, inlen);
 6087              		.loc 1 733 3
 6088 0018 07F11003 		add	r3, r7, #16
 6089 001c 3A68     		ldr	r2, [r7]
 6090 001e 7968     		ldr	r1, [r7, #4]
 6091 0020 1846     		mov	r0, r3
 6092 0022 FFF7FEFF 		bl	pqcrystals_fips202_ref_shake256_absorb
 734:fips202.c     ****   shake256_finalize(&state);
 6093              		.loc 1 734 3
 6094 0026 07F11003 		add	r3, r7, #16
 6095 002a 1846     		mov	r0, r3
 6096 002c FFF7FEFF 		bl	pqcrystals_fips202_ref_shake256_finalize
 735:fips202.c     ****   shake256_squeeze(out, outlen, &state);
 6097              		.loc 1 735 3
 6098 0030 07F11003 		add	r3, r7, #16
 6099 0034 1A46     		mov	r2, r3
 6100 0036 B968     		ldr	r1, [r7, #8]
 6101 0038 F868     		ldr	r0, [r7, #12]
 6102 003a FFF7FEFF 		bl	pqcrystals_fips202_ref_shake256_squeeze
 736:fips202.c     **** }
 6103              		.loc 1 736 1
 6104 003e 00BF     		nop
 6105 0040 E037     		adds	r7, r7, #224
 6106              	.LCFI103:
 6107              		.cfi_def_cfa_offset 8
 6108 0042 BD46     		mov	sp, r7
 6109              	.LCFI104:
 6110              		.cfi_def_cfa_register 13
 6111              		@ sp needed
 6112 0044 80BD     		pop	{r7, pc}
 6113              		.cfi_endproc
 6114              	.LFE19:
 6116              		.section	.text.pqcrystals_fips202_ref_sha3_256,"ax",%progbits
 6117              		.align	1
 6118              		.global	pqcrystals_fips202_ref_sha3_256
 6119              		.syntax unified
 6120              		.thumb
 6121              		.thumb_func
 6122              		.fpu softvfp
 6124              	pqcrystals_fips202_ref_sha3_256:
 6125              	.LFB20:
 737:fips202.c     **** 
 738:fips202.c     **** /*************************************************
 739:fips202.c     **** * Name:        sha3_256
 740:fips202.c     **** *
 741:fips202.c     **** * Description: SHA3-256 with non-incremental API
 742:fips202.c     **** *
 743:fips202.c     **** * Arguments:   - uint8_t *h:        pointer to output (32 bytes)
 744:fips202.c     **** *              - const uint8_t *in: pointer to input
 745:fips202.c     **** *              - size_t inlen:      length of input in bytes
 746:fips202.c     **** **************************************************/
 747:fips202.c     **** void sha3_256(uint8_t h[32], const uint8_t *in, size_t inlen)
 748:fips202.c     **** {
 6126              		.loc 1 748 1
 6127              		.cfi_startproc
 6128              		@ args = 0, pretend = 0, frame = 224
 6129              		@ frame_needed = 1, uses_anonymous_args = 0
 6130 0000 80B5     		push	{r7, lr}
 6131              	.LCFI105:
 6132              		.cfi_def_cfa_offset 8
 6133              		.cfi_offset 7, -8
 6134              		.cfi_offset 14, -4
 6135 0002 BAB0     		sub	sp, sp, #232
 6136              	.LCFI106:
 6137              		.cfi_def_cfa_offset 240
 6138 0004 02AF     		add	r7, sp, #8
 6139              	.LCFI107:
 6140              		.cfi_def_cfa 7, 232
 6141 0006 F860     		str	r0, [r7, #12]
 6142 0008 B960     		str	r1, [r7, #8]
 6143 000a 7A60     		str	r2, [r7, #4]
 749:fips202.c     ****   uint64_t s[25] = {0};
 6144              		.loc 1 749 12
 6145 000c 07F11003 		add	r3, r7, #16
 6146 0010 C822     		movs	r2, #200
 6147 0012 0021     		movs	r1, #0
 6148 0014 1846     		mov	r0, r3
 6149 0016 FFF7FEFF 		bl	memset
 750:fips202.c     ****   unsigned int pos;
 751:fips202.c     **** 
 752:fips202.c     ****   pos = keccak_absorb(s, SHA3_256_RATE, 0, in, inlen);
 6150              		.loc 1 752 9
 6151 001a 07F11000 		add	r0, r7, #16
 6152 001e 7B68     		ldr	r3, [r7, #4]
 6153 0020 0093     		str	r3, [sp]
 6154 0022 BB68     		ldr	r3, [r7, #8]
 6155 0024 0022     		movs	r2, #0
 6156 0026 8821     		movs	r1, #136
 6157 0028 FFF7FEFF 		bl	keccak_absorb
 6158 002c C7F8DC00 		str	r0, [r7, #220]
 753:fips202.c     ****   keccak_finalize(s, SHA3_256_RATE, pos, 0x06);
 6159              		.loc 1 753 3
 6160 0030 07F11000 		add	r0, r7, #16
 6161 0034 0623     		movs	r3, #6
 6162 0036 D7F8DC20 		ldr	r2, [r7, #220]
 6163 003a 8821     		movs	r1, #136
 6164 003c FFF7FEFF 		bl	keccak_finalize
 754:fips202.c     ****   keccak_squeeze(h, 32, s, SHA3_256_RATE, 0);
 6165              		.loc 1 754 3
 6166 0040 07F11002 		add	r2, r7, #16
 6167 0044 0023     		movs	r3, #0
 6168 0046 0093     		str	r3, [sp]
 6169 0048 8823     		movs	r3, #136
 6170 004a 2021     		movs	r1, #32
 6171 004c F868     		ldr	r0, [r7, #12]
 6172 004e FFF7FEFF 		bl	keccak_squeeze
 755:fips202.c     **** }
 6173              		.loc 1 755 1
 6174 0052 00BF     		nop
 6175 0054 E037     		adds	r7, r7, #224
 6176              	.LCFI108:
 6177              		.cfi_def_cfa_offset 8
 6178 0056 BD46     		mov	sp, r7
 6179              	.LCFI109:
 6180              		.cfi_def_cfa_register 13
 6181              		@ sp needed
 6182 0058 80BD     		pop	{r7, pc}
 6183              		.cfi_endproc
 6184              	.LFE20:
 6186              		.section	.text.pqcrystals_fips202_ref_sha3_512,"ax",%progbits
 6187              		.align	1
 6188              		.global	pqcrystals_fips202_ref_sha3_512
 6189              		.syntax unified
 6190              		.thumb
 6191              		.thumb_func
 6192              		.fpu softvfp
 6194              	pqcrystals_fips202_ref_sha3_512:
 6195              	.LFB21:
 756:fips202.c     **** 
 757:fips202.c     **** /*************************************************
 758:fips202.c     **** * Name:        sha3_512
 759:fips202.c     **** *
 760:fips202.c     **** * Description: SHA3-512 with non-incremental API
 761:fips202.c     **** *
 762:fips202.c     **** * Arguments:   - uint8_t *h:        pointer to output (64 bytes)
 763:fips202.c     **** *              - const uint8_t *in: pointer to input
 764:fips202.c     **** *              - size_t inlen:      length of input in bytes
 765:fips202.c     **** **************************************************/
 766:fips202.c     **** void sha3_512(uint8_t h[64], const uint8_t *in, size_t inlen)
 767:fips202.c     **** {
 6196              		.loc 1 767 1
 6197              		.cfi_startproc
 6198              		@ args = 0, pretend = 0, frame = 224
 6199              		@ frame_needed = 1, uses_anonymous_args = 0
 6200 0000 80B5     		push	{r7, lr}
 6201              	.LCFI110:
 6202              		.cfi_def_cfa_offset 8
 6203              		.cfi_offset 7, -8
 6204              		.cfi_offset 14, -4
 6205 0002 BAB0     		sub	sp, sp, #232
 6206              	.LCFI111:
 6207              		.cfi_def_cfa_offset 240
 6208 0004 02AF     		add	r7, sp, #8
 6209              	.LCFI112:
 6210              		.cfi_def_cfa 7, 232
 6211 0006 F860     		str	r0, [r7, #12]
 6212 0008 B960     		str	r1, [r7, #8]
 6213 000a 7A60     		str	r2, [r7, #4]
 768:fips202.c     ****   uint64_t s[25] = {0};
 6214              		.loc 1 768 12
 6215 000c 07F11003 		add	r3, r7, #16
 6216 0010 C822     		movs	r2, #200
 6217 0012 0021     		movs	r1, #0
 6218 0014 1846     		mov	r0, r3
 6219 0016 FFF7FEFF 		bl	memset
 769:fips202.c     ****   unsigned int pos;
 770:fips202.c     **** 
 771:fips202.c     ****   pos = keccak_absorb(s, SHA3_512_RATE, 0, in, inlen);
 6220              		.loc 1 771 9
 6221 001a 07F11000 		add	r0, r7, #16
 6222 001e 7B68     		ldr	r3, [r7, #4]
 6223 0020 0093     		str	r3, [sp]
 6224 0022 BB68     		ldr	r3, [r7, #8]
 6225 0024 0022     		movs	r2, #0
 6226 0026 4821     		movs	r1, #72
 6227 0028 FFF7FEFF 		bl	keccak_absorb
 6228 002c C7F8DC00 		str	r0, [r7, #220]
 772:fips202.c     ****   keccak_finalize(s, SHA3_512_RATE, pos, 0x06);
 6229              		.loc 1 772 3
 6230 0030 07F11000 		add	r0, r7, #16
 6231 0034 0623     		movs	r3, #6
 6232 0036 D7F8DC20 		ldr	r2, [r7, #220]
 6233 003a 4821     		movs	r1, #72
 6234 003c FFF7FEFF 		bl	keccak_finalize
 773:fips202.c     ****   keccak_squeeze(h, 64, s, SHA3_512_RATE, 0);
 6235              		.loc 1 773 3
 6236 0040 07F11002 		add	r2, r7, #16
 6237 0044 0023     		movs	r3, #0
 6238 0046 0093     		str	r3, [sp]
 6239 0048 4823     		movs	r3, #72
 6240 004a 4021     		movs	r1, #64
 6241 004c F868     		ldr	r0, [r7, #12]
 6242 004e FFF7FEFF 		bl	keccak_squeeze
 774:fips202.c     **** }
 6243              		.loc 1 774 1
 6244 0052 00BF     		nop
 6245 0054 E037     		adds	r7, r7, #224
 6246              	.LCFI113:
 6247              		.cfi_def_cfa_offset 8
 6248 0056 BD46     		mov	sp, r7
 6249              	.LCFI114:
 6250              		.cfi_def_cfa_register 13
 6251              		@ sp needed
 6252 0058 80BD     		pop	{r7, pc}
 6253              		.cfi_endproc
 6254              	.LFE21:
 6256              		.text
 6257              	.Letext0:
 6258              		.file 2 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\lib\\gcc\\arm-none-eabi\\10.2.1\\in
 6259              		.file 3 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine\\_d
 6260              		.file 4 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_stdin
 6261              		.file 5 "fips202.h"
DEFINED SYMBOLS
                            *ABS*:00000000 fips202.c
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:16     .text.load64:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:23     .text.load64:00000000 load64
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:119    .text.store64:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:125    .text.store64:00000000 store64
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:204    .rodata:00000000 $d
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:207    .rodata:00000000 KeccakF_RoundConstants
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:257    .text.KeccakF1600_StatePermute:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:263    .text.KeccakF1600_StatePermute:00000000 KeccakF1600_StatePermute
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:1240   .text.KeccakF1600_StatePermute:00000bf8 $d
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:1242   .text.KeccakF1600_StatePermute:00000bfc $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:3081   .text.KeccakF1600_StatePermute:000022e0 $d
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:3083   .text.KeccakF1600_StatePermute:000022e4 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:4453   .text.keccak_init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:4459   .text.keccak_init:00000000 keccak_init
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:4522   .text.keccak_absorb:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:4528   .text.keccak_absorb:00000000 keccak_absorb
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:4938   .text.keccak_finalize:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:4944   .text.keccak_finalize:00000000 keccak_finalize
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5053   .text.keccak_squeezeblocks:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5059   .text.keccak_squeezeblocks:00000000 keccak_squeezeblocks
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5148   .text.keccak_squeeze:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5154   .text.keccak_squeeze:00000000 keccak_squeeze
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5491   .text.pqcrystals_fips202_ref_shake128_init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5498   .text.pqcrystals_fips202_ref_shake128_init:00000000 pqcrystals_fips202_ref_shake128_init
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5533   .text.pqcrystals_fips202_ref_shake128_absorb:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5540   .text.pqcrystals_fips202_ref_shake128_absorb:00000000 pqcrystals_fips202_ref_shake128_absorb
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5588   .text.pqcrystals_fips202_ref_shake128_finalize:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5595   .text.pqcrystals_fips202_ref_shake128_finalize:00000000 pqcrystals_fips202_ref_shake128_finalize
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5639   .text.pqcrystals_fips202_ref_shake128_squeezeblocks:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5646   .text.pqcrystals_fips202_ref_shake128_squeezeblocks:00000000 pqcrystals_fips202_ref_shake128_squeezeblocks
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5687   .text.pqcrystals_fips202_ref_shake128_squeeze:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5694   .text.pqcrystals_fips202_ref_shake128_squeeze:00000000 pqcrystals_fips202_ref_shake128_squeeze
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5742   .text.pqcrystals_fips202_ref_shake256_init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5749   .text.pqcrystals_fips202_ref_shake256_init:00000000 pqcrystals_fips202_ref_shake256_init
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5784   .text.pqcrystals_fips202_ref_shake256_absorb:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5791   .text.pqcrystals_fips202_ref_shake256_absorb:00000000 pqcrystals_fips202_ref_shake256_absorb
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5839   .text.pqcrystals_fips202_ref_shake256_finalize:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5846   .text.pqcrystals_fips202_ref_shake256_finalize:00000000 pqcrystals_fips202_ref_shake256_finalize
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5890   .text.pqcrystals_fips202_ref_shake256_squeezeblocks:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5897   .text.pqcrystals_fips202_ref_shake256_squeezeblocks:00000000 pqcrystals_fips202_ref_shake256_squeezeblocks
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5938   .text.pqcrystals_fips202_ref_shake256_squeeze:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5945   .text.pqcrystals_fips202_ref_shake256_squeeze:00000000 pqcrystals_fips202_ref_shake256_squeeze
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:5993   .text.pqcrystals_fips202_ref_shake128:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6000   .text.pqcrystals_fips202_ref_shake128:00000000 pqcrystals_fips202_ref_shake128
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6055   .text.pqcrystals_fips202_ref_shake256:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6062   .text.pqcrystals_fips202_ref_shake256:00000000 pqcrystals_fips202_ref_shake256
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6117   .text.pqcrystals_fips202_ref_sha3_256:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6124   .text.pqcrystals_fips202_ref_sha3_256:00000000 pqcrystals_fips202_ref_sha3_256
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6187   .text.pqcrystals_fips202_ref_sha3_512:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccTTl1Yz.s:6194   .text.pqcrystals_fips202_ref_sha3_512:00000000 pqcrystals_fips202_ref_sha3_512

UNDEFINED SYMBOLS
memset
