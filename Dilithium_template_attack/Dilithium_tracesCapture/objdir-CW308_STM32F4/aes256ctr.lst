   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"aes256ctr.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.br_dec32le,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	br_dec32le:
  24              	.LFB0:
  25              		.file 1 "aes256ctr.c"
   1:aes256ctr.c   **** /*
   2:aes256ctr.c   ****  * Copyright (c) 2016 Thomas Pornin <pornin@bolet.org>
   3:aes256ctr.c   ****  *
   4:aes256ctr.c   ****  * Permission is hereby granted, free of charge, to any person obtaining
   5:aes256ctr.c   ****  * a copy of this software and associated documentation files (the
   6:aes256ctr.c   ****  * "Software"), to deal in the Software without restriction, including
   7:aes256ctr.c   ****  * without limitation the rights to use, copy, modify, merge, publish,
   8:aes256ctr.c   ****  * distribute, sublicense, and/or sell copies of the Software, and to
   9:aes256ctr.c   ****  * permit persons to whom the Software is furnished to do so, subject to
  10:aes256ctr.c   ****  * the following conditions:
  11:aes256ctr.c   ****  *
  12:aes256ctr.c   ****  * The above copyright notice and this permission notice shall be
  13:aes256ctr.c   ****  * included in all copies or substantial portions of the Software.
  14:aes256ctr.c   ****  *
  15:aes256ctr.c   ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  16:aes256ctr.c   ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  17:aes256ctr.c   ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  18:aes256ctr.c   ****  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
  19:aes256ctr.c   ****  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
  20:aes256ctr.c   ****  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:aes256ctr.c   ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  22:aes256ctr.c   ****  * SOFTWARE.
  23:aes256ctr.c   ****  */
  24:aes256ctr.c   **** 
  25:aes256ctr.c   **** #include <stdint.h>
  26:aes256ctr.c   **** #include <string.h>
  27:aes256ctr.c   **** #include "aes256ctr.h"
  28:aes256ctr.c   **** 
  29:aes256ctr.c   **** static inline uint32_t br_dec32le(const uint8_t *src)
  30:aes256ctr.c   **** {
  26              		.loc 1 30 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  31:aes256ctr.c   **** 	return (uint32_t)src[0]
  42              		.loc 1 31 22
  43 0008 7B68     		ldr	r3, [r7, #4]
  44 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  45              		.loc 1 31 9
  46 000c 1A46     		mov	r2, r3
  32:aes256ctr.c   **** 		| ((uint32_t)src[1] << 8)
  47              		.loc 1 32 19
  48 000e 7B68     		ldr	r3, [r7, #4]
  49 0010 0133     		adds	r3, r3, #1
  50 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  51              		.loc 1 32 23
  52 0014 1B02     		lsls	r3, r3, #8
  53              		.loc 1 32 3
  54 0016 1A43     		orrs	r2, r2, r3
  33:aes256ctr.c   **** 		| ((uint32_t)src[2] << 16)
  55              		.loc 1 33 19
  56 0018 7B68     		ldr	r3, [r7, #4]
  57 001a 0233     		adds	r3, r3, #2
  58 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  59              		.loc 1 33 23
  60 001e 1B04     		lsls	r3, r3, #16
  61              		.loc 1 33 3
  62 0020 1A43     		orrs	r2, r2, r3
  34:aes256ctr.c   **** 		| ((uint32_t)src[3] << 24);
  63              		.loc 1 34 19
  64 0022 7B68     		ldr	r3, [r7, #4]
  65 0024 0333     		adds	r3, r3, #3
  66 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  67              		.loc 1 34 23
  68 0028 1B06     		lsls	r3, r3, #24
  69              		.loc 1 34 3
  70 002a 1343     		orrs	r3, r3, r2
  35:aes256ctr.c   **** }
  71              		.loc 1 35 1
  72 002c 1846     		mov	r0, r3
  73 002e 0C37     		adds	r7, r7, #12
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76 0030 BD46     		mov	sp, r7
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0032 80BC     		pop	{r7}
  81              	.LCFI5:
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0034 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE0:
  88              		.section	.text.br_range_dec32le,"ax",%progbits
  89              		.align	1
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu softvfp
  95              	br_range_dec32le:
  96              	.LFB1:
  36:aes256ctr.c   **** 
  37:aes256ctr.c   **** static void br_range_dec32le(uint32_t *v, size_t num, const uint8_t *src)
  38:aes256ctr.c   **** {
  97              		.loc 1 38 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 16
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 90B5     		push	{r4, r7, lr}
 102              	.LCFI6:
 103              		.cfi_def_cfa_offset 12
 104              		.cfi_offset 4, -12
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 85B0     		sub	sp, sp, #20
 108              	.LCFI7:
 109              		.cfi_def_cfa_offset 32
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI8:
 112              		.cfi_def_cfa_register 7
 113 0006 F860     		str	r0, [r7, #12]
 114 0008 B960     		str	r1, [r7, #8]
 115 000a 7A60     		str	r2, [r7, #4]
  39:aes256ctr.c   **** 	while (num-- > 0) {
 116              		.loc 1 39 8
 117 000c 0AE0     		b	.L4
 118              	.L5:
  40:aes256ctr.c   **** 		*v ++ = br_dec32le(src);
 119              		.loc 1 40 6
 120 000e FC68     		ldr	r4, [r7, #12]
 121 0010 231D     		adds	r3, r4, #4
 122 0012 FB60     		str	r3, [r7, #12]
 123              		.loc 1 40 11
 124 0014 7868     		ldr	r0, [r7, #4]
 125 0016 FFF7FEFF 		bl	br_dec32le
 126 001a 0346     		mov	r3, r0
 127              		.loc 1 40 9
 128 001c 2360     		str	r3, [r4]
  41:aes256ctr.c   **** 		src += 4;
 129              		.loc 1 41 7
 130 001e 7B68     		ldr	r3, [r7, #4]
 131 0020 0433     		adds	r3, r3, #4
 132 0022 7B60     		str	r3, [r7, #4]
 133              	.L4:
  39:aes256ctr.c   **** 	while (num-- > 0) {
 134              		.loc 1 39 12
 135 0024 BB68     		ldr	r3, [r7, #8]
 136 0026 5A1E     		subs	r2, r3, #1
 137 0028 BA60     		str	r2, [r7, #8]
  39:aes256ctr.c   **** 	while (num-- > 0) {
 138              		.loc 1 39 8
 139 002a 002B     		cmp	r3, #0
 140 002c EFD1     		bne	.L5
  42:aes256ctr.c   **** 	}
  43:aes256ctr.c   **** }
 141              		.loc 1 43 1
 142 002e 00BF     		nop
 143 0030 00BF     		nop
 144 0032 1437     		adds	r7, r7, #20
 145              	.LCFI9:
 146              		.cfi_def_cfa_offset 12
 147 0034 BD46     		mov	sp, r7
 148              	.LCFI10:
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 0036 90BD     		pop	{r4, r7, pc}
 152              		.cfi_endproc
 153              	.LFE1:
 155              		.section	.text.br_swap32,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu softvfp
 162              	br_swap32:
 163              	.LFB2:
  44:aes256ctr.c   **** 
  45:aes256ctr.c   **** static inline uint32_t br_swap32(uint32_t x)
  46:aes256ctr.c   **** {
 164              		.loc 1 46 1
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 8
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 80B4     		push	{r7}
 170              	.LCFI11:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI12:
 175              		.cfi_def_cfa_offset 16
 176 0004 00AF     		add	r7, sp, #0
 177              	.LCFI13:
 178              		.cfi_def_cfa_register 7
 179 0006 7860     		str	r0, [r7, #4]
  47:aes256ctr.c   **** 	x = ((x & (uint32_t)0x00FF00FF) << 8)
 180              		.loc 1 47 34
 181 0008 7B68     		ldr	r3, [r7, #4]
 182 000a 1B02     		lsls	r3, r3, #8
 183 000c 03F0FF22 		and	r2, r3, #-16711936
  48:aes256ctr.c   **** 		| ((x >> 8) & (uint32_t)0x00FF00FF);
 184              		.loc 1 48 9
 185 0010 7B68     		ldr	r3, [r7, #4]
 186 0012 1B0A     		lsrs	r3, r3, #8
 187              		.loc 1 48 15
 188 0014 03F0FF13 		and	r3, r3, #16711935
  47:aes256ctr.c   **** 	x = ((x & (uint32_t)0x00FF00FF) << 8)
 189              		.loc 1 47 4
 190 0018 1343     		orrs	r3, r3, r2
 191 001a 7B60     		str	r3, [r7, #4]
  49:aes256ctr.c   **** 	return (x << 16) | (x >> 16);
 192              		.loc 1 49 19
 193 001c 7B68     		ldr	r3, [r7, #4]
 194 001e 4FEA3343 		ror	r3, r3, #16
  50:aes256ctr.c   **** }
 195              		.loc 1 50 1
 196 0022 1846     		mov	r0, r3
 197 0024 0C37     		adds	r7, r7, #12
 198              	.LCFI14:
 199              		.cfi_def_cfa_offset 4
 200 0026 BD46     		mov	sp, r7
 201              	.LCFI15:
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 0028 80BC     		pop	{r7}
 205              	.LCFI16:
 206              		.cfi_restore 7
 207              		.cfi_def_cfa_offset 0
 208 002a 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE2:
 212              		.section	.text.br_enc32le,"ax",%progbits
 213              		.align	1
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	br_enc32le:
 220              	.LFB3:
  51:aes256ctr.c   **** 
  52:aes256ctr.c   **** static inline void br_enc32le(uint8_t *dst, uint32_t x)
  53:aes256ctr.c   **** {
 221              		.loc 1 53 1
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 8
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226 0000 80B4     		push	{r7}
 227              	.LCFI17:
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              	.LCFI18:
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              	.LCFI19:
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 237 0008 3960     		str	r1, [r7]
  54:aes256ctr.c   **** 	dst[0] = (uint8_t)x;
 238              		.loc 1 54 11
 239 000a 3B68     		ldr	r3, [r7]
 240 000c DAB2     		uxtb	r2, r3
 241              		.loc 1 54 9
 242 000e 7B68     		ldr	r3, [r7, #4]
 243 0010 1A70     		strb	r2, [r3]
  55:aes256ctr.c   **** 	dst[1] = (uint8_t)(x >> 8);
 244              		.loc 1 55 23
 245 0012 3B68     		ldr	r3, [r7]
 246 0014 1A0A     		lsrs	r2, r3, #8
 247              		.loc 1 55 5
 248 0016 7B68     		ldr	r3, [r7, #4]
 249 0018 0133     		adds	r3, r3, #1
 250              		.loc 1 55 11
 251 001a D2B2     		uxtb	r2, r2
 252              		.loc 1 55 9
 253 001c 1A70     		strb	r2, [r3]
  56:aes256ctr.c   **** 	dst[2] = (uint8_t)(x >> 16);
 254              		.loc 1 56 23
 255 001e 3B68     		ldr	r3, [r7]
 256 0020 1A0C     		lsrs	r2, r3, #16
 257              		.loc 1 56 5
 258 0022 7B68     		ldr	r3, [r7, #4]
 259 0024 0233     		adds	r3, r3, #2
 260              		.loc 1 56 11
 261 0026 D2B2     		uxtb	r2, r2
 262              		.loc 1 56 9
 263 0028 1A70     		strb	r2, [r3]
  57:aes256ctr.c   **** 	dst[3] = (uint8_t)(x >> 24);
 264              		.loc 1 57 23
 265 002a 3B68     		ldr	r3, [r7]
 266 002c 1A0E     		lsrs	r2, r3, #24
 267              		.loc 1 57 5
 268 002e 7B68     		ldr	r3, [r7, #4]
 269 0030 0333     		adds	r3, r3, #3
 270              		.loc 1 57 11
 271 0032 D2B2     		uxtb	r2, r2
 272              		.loc 1 57 9
 273 0034 1A70     		strb	r2, [r3]
  58:aes256ctr.c   **** }
 274              		.loc 1 58 1
 275 0036 00BF     		nop
 276 0038 0C37     		adds	r7, r7, #12
 277              	.LCFI20:
 278              		.cfi_def_cfa_offset 4
 279 003a BD46     		mov	sp, r7
 280              	.LCFI21:
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 003c 80BC     		pop	{r7}
 284              	.LCFI22:
 285              		.cfi_restore 7
 286              		.cfi_def_cfa_offset 0
 287 003e 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE3:
 291              		.section	.text.br_range_enc32le,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	br_range_enc32le:
 299              	.LFB4:
  59:aes256ctr.c   **** 
  60:aes256ctr.c   **** static void br_range_enc32le(uint8_t *dst, const uint32_t *v, size_t num)
  61:aes256ctr.c   **** {
 300              		.loc 1 61 1
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 16
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI23:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 84B0     		sub	sp, sp, #16
 310              	.LCFI24:
 311              		.cfi_def_cfa_offset 24
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI25:
 314              		.cfi_def_cfa_register 7
 315 0006 F860     		str	r0, [r7, #12]
 316 0008 B960     		str	r1, [r7, #8]
 317 000a 7A60     		str	r2, [r7, #4]
  62:aes256ctr.c   **** 	while (num-- > 0) {
 318              		.loc 1 62 8
 319 000c 0AE0     		b	.L10
 320              	.L11:
  63:aes256ctr.c   **** 		br_enc32le(dst, *v ++);
 321              		.loc 1 63 22
 322 000e BB68     		ldr	r3, [r7, #8]
 323 0010 1A1D     		adds	r2, r3, #4
 324 0012 BA60     		str	r2, [r7, #8]
 325              		.loc 1 63 3
 326 0014 1B68     		ldr	r3, [r3]
 327 0016 1946     		mov	r1, r3
 328 0018 F868     		ldr	r0, [r7, #12]
 329 001a FFF7FEFF 		bl	br_enc32le
  64:aes256ctr.c   **** 		dst += 4;
 330              		.loc 1 64 7
 331 001e FB68     		ldr	r3, [r7, #12]
 332 0020 0433     		adds	r3, r3, #4
 333 0022 FB60     		str	r3, [r7, #12]
 334              	.L10:
  62:aes256ctr.c   **** 	while (num-- > 0) {
 335              		.loc 1 62 12
 336 0024 7B68     		ldr	r3, [r7, #4]
 337 0026 5A1E     		subs	r2, r3, #1
 338 0028 7A60     		str	r2, [r7, #4]
  62:aes256ctr.c   **** 	while (num-- > 0) {
 339              		.loc 1 62 8
 340 002a 002B     		cmp	r3, #0
 341 002c EFD1     		bne	.L11
  65:aes256ctr.c   **** 	}
  66:aes256ctr.c   **** }
 342              		.loc 1 66 1
 343 002e 00BF     		nop
 344 0030 00BF     		nop
 345 0032 1037     		adds	r7, r7, #16
 346              	.LCFI26:
 347              		.cfi_def_cfa_offset 8
 348 0034 BD46     		mov	sp, r7
 349              	.LCFI27:
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 0036 80BD     		pop	{r7, pc}
 353              		.cfi_endproc
 354              	.LFE4:
 356              		.section	.text.br_aes_ct64_bitslice_Sbox,"ax",%progbits
 357              		.align	1
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	br_aes_ct64_bitslice_Sbox:
 364              	.LFB5:
  67:aes256ctr.c   **** 
  68:aes256ctr.c   **** static void br_aes_ct64_bitslice_Sbox(uint64_t *q)
  69:aes256ctr.c   **** {
 365              		.loc 1 69 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 1920
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 371              	.LCFI28:
 372              		.cfi_def_cfa_offset 28
 373              		.cfi_offset 4, -28
 374              		.cfi_offset 5, -24
 375              		.cfi_offset 7, -20
 376              		.cfi_offset 8, -16
 377              		.cfi_offset 9, -12
 378              		.cfi_offset 10, -8
 379              		.cfi_offset 11, -4
 380 0004 ADF2847D 		subw	sp, sp, #1924
 381              	.LCFI29:
 382              		.cfi_def_cfa_offset 1952
 383 0008 00AF     		add	r7, sp, #0
 384              	.LCFI30:
 385              		.cfi_def_cfa_register 7
 386 000a 07F5F063 		add	r3, r7, #1920
 387 000e A3F57773 		sub	r3, r3, #988
 388 0012 1860     		str	r0, [r3]
  70:aes256ctr.c   **** 	/*
  71:aes256ctr.c   **** 	 * This S-box implementation is a straightforward translation of
  72:aes256ctr.c   **** 	 * the circuit described by Boyar and Peralta in "A new
  73:aes256ctr.c   **** 	 * combinational logic minimization technique with applications
  74:aes256ctr.c   **** 	 * to cryptology" (https://eprint.iacr.org/2009/191.pdf).
  75:aes256ctr.c   **** 	 *
  76:aes256ctr.c   **** 	 * Note that variables x* (input) and s* (output) are numbered
  77:aes256ctr.c   **** 	 * in "reverse" order (x0 is the high bit, x7 is the low bit).
  78:aes256ctr.c   **** 	 */
  79:aes256ctr.c   **** 
  80:aes256ctr.c   **** 	uint64_t x0, x1, x2, x3, x4, x5, x6, x7;
  81:aes256ctr.c   **** 	uint64_t y1, y2, y3, y4, y5, y6, y7, y8, y9;
  82:aes256ctr.c   **** 	uint64_t y10, y11, y12, y13, y14, y15, y16, y17, y18, y19;
  83:aes256ctr.c   **** 	uint64_t y20, y21;
  84:aes256ctr.c   **** 	uint64_t z0, z1, z2, z3, z4, z5, z6, z7, z8, z9;
  85:aes256ctr.c   **** 	uint64_t z10, z11, z12, z13, z14, z15, z16, z17;
  86:aes256ctr.c   **** 	uint64_t t0, t1, t2, t3, t4, t5, t6, t7, t8, t9;
  87:aes256ctr.c   **** 	uint64_t t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
  88:aes256ctr.c   **** 	uint64_t t20, t21, t22, t23, t24, t25, t26, t27, t28, t29;
  89:aes256ctr.c   **** 	uint64_t t30, t31, t32, t33, t34, t35, t36, t37, t38, t39;
  90:aes256ctr.c   **** 	uint64_t t40, t41, t42, t43, t44, t45, t46, t47, t48, t49;
  91:aes256ctr.c   **** 	uint64_t t50, t51, t52, t53, t54, t55, t56, t57, t58, t59;
  92:aes256ctr.c   **** 	uint64_t t60, t61, t62, t63, t64, t65, t66, t67;
  93:aes256ctr.c   **** 	uint64_t s0, s1, s2, s3, s4, s5, s6, s7;
  94:aes256ctr.c   **** 
  95:aes256ctr.c   **** 	x0 = q[7];
 389              		.loc 1 95 5
 390 0014 07F5F063 		add	r3, r7, #1920
 391 0018 A3F57773 		sub	r3, r3, #988
 392 001c 1B68     		ldr	r3, [r3]
 393 001e D3E90E23 		ldrd	r2, [r3, #56]
 394 0022 07F5EF61 		add	r1, r7, #1912
 395 0026 C1E90023 		strd	r2, [r1]
  96:aes256ctr.c   **** 	x1 = q[6];
 396              		.loc 1 96 5
 397 002a 07F5F063 		add	r3, r7, #1920
 398 002e A3F57773 		sub	r3, r3, #988
 399 0032 1B68     		ldr	r3, [r3]
 400 0034 D3E90C23 		ldrd	r2, [r3, #48]
 401 0038 07F5EE61 		add	r1, r7, #1904
 402 003c C1E90023 		strd	r2, [r1]
  97:aes256ctr.c   **** 	x2 = q[5];
 403              		.loc 1 97 5
 404 0040 07F5F063 		add	r3, r7, #1920
 405 0044 A3F57773 		sub	r3, r3, #988
 406 0048 1B68     		ldr	r3, [r3]
 407 004a D3E90A23 		ldrd	r2, [r3, #40]
 408 004e 07F5ED61 		add	r1, r7, #1896
 409 0052 C1E90023 		strd	r2, [r1]
  98:aes256ctr.c   **** 	x3 = q[4];
 410              		.loc 1 98 5
 411 0056 07F5F063 		add	r3, r7, #1920
 412 005a A3F57773 		sub	r3, r3, #988
 413 005e 1B68     		ldr	r3, [r3]
 414 0060 D3E90823 		ldrd	r2, [r3, #32]
 415 0064 07F5EC61 		add	r1, r7, #1888
 416 0068 C1E90023 		strd	r2, [r1]
  99:aes256ctr.c   **** 	x4 = q[3];
 417              		.loc 1 99 5
 418 006c 07F5F063 		add	r3, r7, #1920
 419 0070 A3F57773 		sub	r3, r3, #988
 420 0074 1B68     		ldr	r3, [r3]
 421 0076 D3E90623 		ldrd	r2, [r3, #24]
 422 007a 07F5EB61 		add	r1, r7, #1880
 423 007e C1E90023 		strd	r2, [r1]
 100:aes256ctr.c   **** 	x5 = q[2];
 424              		.loc 1 100 5
 425 0082 07F5F063 		add	r3, r7, #1920
 426 0086 A3F57773 		sub	r3, r3, #988
 427 008a 1B68     		ldr	r3, [r3]
 428 008c D3E90423 		ldrd	r2, [r3, #16]
 429 0090 07F5EA61 		add	r1, r7, #1872
 430 0094 C1E90023 		strd	r2, [r1]
 101:aes256ctr.c   **** 	x6 = q[1];
 431              		.loc 1 101 5
 432 0098 07F5F063 		add	r3, r7, #1920
 433 009c A3F57773 		sub	r3, r3, #988
 434 00a0 1B68     		ldr	r3, [r3]
 435 00a2 D3E90223 		ldrd	r2, [r3, #8]
 436 00a6 07F5E961 		add	r1, r7, #1864
 437 00aa C1E90023 		strd	r2, [r1]
 102:aes256ctr.c   **** 	x7 = q[0];
 438              		.loc 1 102 5
 439 00ae 07F5F063 		add	r3, r7, #1920
 440 00b2 A3F57773 		sub	r3, r3, #988
 441 00b6 1B68     		ldr	r3, [r3]
 442 00b8 D3E90023 		ldrd	r2, [r3]
 443 00bc 07F5E861 		add	r1, r7, #1856
 444 00c0 C1E90023 		strd	r2, [r1]
 103:aes256ctr.c   **** 
 104:aes256ctr.c   **** 	/*
 105:aes256ctr.c   **** 	 * Top linear transformation.
 106:aes256ctr.c   **** 	 */
 107:aes256ctr.c   **** 	y14 = x3 ^ x5;
 445              		.loc 1 107 6
 446 00c4 07F5EC63 		add	r3, r7, #1888
 447 00c8 D3E90001 		ldrd	r0, [r3]
 448 00cc 07F5EA63 		add	r3, r7, #1872
 449 00d0 D3E90023 		ldrd	r2, [r3]
 450 00d4 80EA0204 		eor	r4, r0, r2
 451 00d8 81EA0305 		eor	r5, r1, r3
 452 00dc 07F5E763 		add	r3, r7, #1848
 453 00e0 C3E90045 		strd	r4, [r3]
 108:aes256ctr.c   **** 	y13 = x0 ^ x6;
 454              		.loc 1 108 6
 455 00e4 07F5EF63 		add	r3, r7, #1912
 456 00e8 D3E90001 		ldrd	r0, [r3]
 457 00ec 07F5E963 		add	r3, r7, #1864
 458 00f0 D3E90023 		ldrd	r2, [r3]
 459 00f4 80EA0208 		eor	r8, r0, r2
 460 00f8 81EA0309 		eor	r9, r1, r3
 461 00fc 07F5E663 		add	r3, r7, #1840
 462 0100 C3E90089 		strd	r8, [r3]
 109:aes256ctr.c   **** 	y9 = x0 ^ x3;
 463              		.loc 1 109 5
 464 0104 07F5EF63 		add	r3, r7, #1912
 465 0108 D3E90001 		ldrd	r0, [r3]
 466 010c 07F5EC63 		add	r3, r7, #1888
 467 0110 D3E90023 		ldrd	r2, [r3]
 468 0114 80EA020A 		eor	r10, r0, r2
 469 0118 81EA030B 		eor	fp, r1, r3
 470 011c 07F5E563 		add	r3, r7, #1832
 471 0120 C3E900AB 		strd	r10, [r3]
 110:aes256ctr.c   **** 	y8 = x0 ^ x5;
 472              		.loc 1 110 5
 473 0124 07F5EF63 		add	r3, r7, #1912
 474 0128 D3E90001 		ldrd	r0, [r3]
 475 012c 07F5EA63 		add	r3, r7, #1872
 476 0130 D3E90023 		ldrd	r2, [r3]
 477 0134 80EA0204 		eor	r4, r0, r2
 478 0138 C7F87843 		str	r4, [r7, #888]
 479 013c 4B40     		eors	r3, r3, r1
 480 013e C7F87C33 		str	r3, [r7, #892]
 481 0142 D7E9DE34 		ldrd	r3, [r7, #888]
 482 0146 07F5E462 		add	r2, r7, #1824
 483 014a C2E90034 		strd	r3, [r2]
 111:aes256ctr.c   **** 	t0 = x1 ^ x2;
 484              		.loc 1 111 5
 485 014e 07F5EE63 		add	r3, r7, #1904
 486 0152 D3E90001 		ldrd	r0, [r3]
 487 0156 07F5ED63 		add	r3, r7, #1896
 488 015a D3E90023 		ldrd	r2, [r3]
 489 015e 80EA0204 		eor	r4, r0, r2
 490 0162 C7F87043 		str	r4, [r7, #880]
 491 0166 4B40     		eors	r3, r3, r1
 492 0168 C7F87433 		str	r3, [r7, #884]
 493 016c D7E9DC34 		ldrd	r3, [r7, #880]
 494 0170 07F5E362 		add	r2, r7, #1816
 495 0174 C2E90034 		strd	r3, [r2]
 112:aes256ctr.c   **** 	y1 = t0 ^ x7;
 496              		.loc 1 112 5
 497 0178 07F5E363 		add	r3, r7, #1816
 498 017c D3E90001 		ldrd	r0, [r3]
 499 0180 07F5E863 		add	r3, r7, #1856
 500 0184 D3E90023 		ldrd	r2, [r3]
 501 0188 80EA0204 		eor	r4, r0, r2
 502 018c C7F86843 		str	r4, [r7, #872]
 503 0190 4B40     		eors	r3, r3, r1
 504 0192 C7F86C33 		str	r3, [r7, #876]
 505 0196 D7E9DA34 		ldrd	r3, [r7, #872]
 506 019a 07F5E262 		add	r2, r7, #1808
 507 019e C2E90034 		strd	r3, [r2]
 113:aes256ctr.c   **** 	y4 = y1 ^ x3;
 508              		.loc 1 113 5
 509 01a2 07F5E263 		add	r3, r7, #1808
 510 01a6 D3E90001 		ldrd	r0, [r3]
 511 01aa 07F5EC63 		add	r3, r7, #1888
 512 01ae D3E90023 		ldrd	r2, [r3]
 513 01b2 80EA0204 		eor	r4, r0, r2
 514 01b6 C7F86043 		str	r4, [r7, #864]
 515 01ba 4B40     		eors	r3, r3, r1
 516 01bc C7F86433 		str	r3, [r7, #868]
 517 01c0 D7E9D834 		ldrd	r3, [r7, #864]
 518 01c4 07F5E162 		add	r2, r7, #1800
 519 01c8 C2E90034 		strd	r3, [r2]
 114:aes256ctr.c   **** 	y12 = y13 ^ y14;
 520              		.loc 1 114 6
 521 01cc 07F5E663 		add	r3, r7, #1840
 522 01d0 D3E90001 		ldrd	r0, [r3]
 523 01d4 07F5E763 		add	r3, r7, #1848
 524 01d8 D3E90023 		ldrd	r2, [r3]
 525 01dc 80EA0204 		eor	r4, r0, r2
 526 01e0 C7F85843 		str	r4, [r7, #856]
 527 01e4 4B40     		eors	r3, r3, r1
 528 01e6 C7F85C33 		str	r3, [r7, #860]
 529 01ea D7E9D634 		ldrd	r3, [r7, #856]
 530 01ee 07F5E062 		add	r2, r7, #1792
 531 01f2 C2E90034 		strd	r3, [r2]
 115:aes256ctr.c   **** 	y2 = y1 ^ x0;
 532              		.loc 1 115 5
 533 01f6 07F5E263 		add	r3, r7, #1808
 534 01fa D3E90001 		ldrd	r0, [r3]
 535 01fe 07F5EF63 		add	r3, r7, #1912
 536 0202 D3E90023 		ldrd	r2, [r3]
 537 0206 80EA0204 		eor	r4, r0, r2
 538 020a C7F85043 		str	r4, [r7, #848]
 539 020e 4B40     		eors	r3, r3, r1
 540 0210 C7F85433 		str	r3, [r7, #852]
 541 0214 D7E9D434 		ldrd	r3, [r7, #848]
 542 0218 07F5DF62 		add	r2, r7, #1784
 543 021c C2E90034 		strd	r3, [r2]
 116:aes256ctr.c   **** 	y5 = y1 ^ x6;
 544              		.loc 1 116 5
 545 0220 07F5E263 		add	r3, r7, #1808
 546 0224 D3E90001 		ldrd	r0, [r3]
 547 0228 07F5E963 		add	r3, r7, #1864
 548 022c D3E90023 		ldrd	r2, [r3]
 549 0230 80EA0204 		eor	r4, r0, r2
 550 0234 C7F84843 		str	r4, [r7, #840]
 551 0238 4B40     		eors	r3, r3, r1
 552 023a C7F84C33 		str	r3, [r7, #844]
 553 023e D7E9D234 		ldrd	r3, [r7, #840]
 554 0242 07F5DE62 		add	r2, r7, #1776
 555 0246 C2E90034 		strd	r3, [r2]
 117:aes256ctr.c   **** 	y3 = y5 ^ y8;
 556              		.loc 1 117 5
 557 024a 07F5DE63 		add	r3, r7, #1776
 558 024e D3E90001 		ldrd	r0, [r3]
 559 0252 07F5E463 		add	r3, r7, #1824
 560 0256 D3E90023 		ldrd	r2, [r3]
 561 025a 80EA0204 		eor	r4, r0, r2
 562 025e C7F84043 		str	r4, [r7, #832]
 563 0262 4B40     		eors	r3, r3, r1
 564 0264 C7F84433 		str	r3, [r7, #836]
 565 0268 D7E9D034 		ldrd	r3, [r7, #832]
 566 026c 07F5DD62 		add	r2, r7, #1768
 567 0270 C2E90034 		strd	r3, [r2]
 118:aes256ctr.c   **** 	t1 = x4 ^ y12;
 568              		.loc 1 118 5
 569 0274 07F5EB63 		add	r3, r7, #1880
 570 0278 D3E90001 		ldrd	r0, [r3]
 571 027c 07F5E063 		add	r3, r7, #1792
 572 0280 D3E90023 		ldrd	r2, [r3]
 573 0284 80EA0204 		eor	r4, r0, r2
 574 0288 C7F83843 		str	r4, [r7, #824]
 575 028c 4B40     		eors	r3, r3, r1
 576 028e C7F83C33 		str	r3, [r7, #828]
 577 0292 D7E9CE34 		ldrd	r3, [r7, #824]
 578 0296 07F5DC62 		add	r2, r7, #1760
 579 029a C2E90034 		strd	r3, [r2]
 119:aes256ctr.c   **** 	y15 = t1 ^ x5;
 580              		.loc 1 119 6
 581 029e 07F5DC63 		add	r3, r7, #1760
 582 02a2 D3E90001 		ldrd	r0, [r3]
 583 02a6 07F5EA63 		add	r3, r7, #1872
 584 02aa D3E90023 		ldrd	r2, [r3]
 585 02ae 80EA0204 		eor	r4, r0, r2
 586 02b2 C7F83043 		str	r4, [r7, #816]
 587 02b6 4B40     		eors	r3, r3, r1
 588 02b8 C7F83433 		str	r3, [r7, #820]
 589 02bc D7E9CC34 		ldrd	r3, [r7, #816]
 590 02c0 07F5DB62 		add	r2, r7, #1752
 591 02c4 C2E90034 		strd	r3, [r2]
 120:aes256ctr.c   **** 	y20 = t1 ^ x1;
 592              		.loc 1 120 6
 593 02c8 07F5DC63 		add	r3, r7, #1760
 594 02cc D3E90001 		ldrd	r0, [r3]
 595 02d0 07F5EE63 		add	r3, r7, #1904
 596 02d4 D3E90023 		ldrd	r2, [r3]
 597 02d8 80EA0204 		eor	r4, r0, r2
 598 02dc C7F82843 		str	r4, [r7, #808]
 599 02e0 4B40     		eors	r3, r3, r1
 600 02e2 C7F82C33 		str	r3, [r7, #812]
 601 02e6 D7E9CA34 		ldrd	r3, [r7, #808]
 602 02ea 07F5DA62 		add	r2, r7, #1744
 603 02ee C2E90034 		strd	r3, [r2]
 121:aes256ctr.c   **** 	y6 = y15 ^ x7;
 604              		.loc 1 121 5
 605 02f2 07F5DB63 		add	r3, r7, #1752
 606 02f6 D3E90001 		ldrd	r0, [r3]
 607 02fa 07F5E863 		add	r3, r7, #1856
 608 02fe D3E90023 		ldrd	r2, [r3]
 609 0302 80EA0204 		eor	r4, r0, r2
 610 0306 C7F82043 		str	r4, [r7, #800]
 611 030a 4B40     		eors	r3, r3, r1
 612 030c C7F82433 		str	r3, [r7, #804]
 613 0310 D7E9C834 		ldrd	r3, [r7, #800]
 614 0314 07F5D962 		add	r2, r7, #1736
 615 0318 C2E90034 		strd	r3, [r2]
 122:aes256ctr.c   **** 	y10 = y15 ^ t0;
 616              		.loc 1 122 6
 617 031c 07F5DB63 		add	r3, r7, #1752
 618 0320 D3E90001 		ldrd	r0, [r3]
 619 0324 07F5E363 		add	r3, r7, #1816
 620 0328 D3E90023 		ldrd	r2, [r3]
 621 032c 80EA0204 		eor	r4, r0, r2
 622 0330 C7F81843 		str	r4, [r7, #792]
 623 0334 4B40     		eors	r3, r3, r1
 624 0336 C7F81C33 		str	r3, [r7, #796]
 625 033a D7E9C634 		ldrd	r3, [r7, #792]
 626 033e 07F5D862 		add	r2, r7, #1728
 627 0342 C2E90034 		strd	r3, [r2]
 123:aes256ctr.c   **** 	y11 = y20 ^ y9;
 628              		.loc 1 123 6
 629 0346 07F5DA63 		add	r3, r7, #1744
 630 034a D3E90001 		ldrd	r0, [r3]
 631 034e 07F5E563 		add	r3, r7, #1832
 632 0352 D3E90023 		ldrd	r2, [r3]
 633 0356 80EA0204 		eor	r4, r0, r2
 634 035a C7F81043 		str	r4, [r7, #784]
 635 035e 4B40     		eors	r3, r3, r1
 636 0360 C7F81433 		str	r3, [r7, #788]
 637 0364 D7E9C434 		ldrd	r3, [r7, #784]
 638 0368 07F5D762 		add	r2, r7, #1720
 639 036c C2E90034 		strd	r3, [r2]
 124:aes256ctr.c   **** 	y7 = x7 ^ y11;
 640              		.loc 1 124 5
 641 0370 07F5E863 		add	r3, r7, #1856
 642 0374 D3E90001 		ldrd	r0, [r3]
 643 0378 07F5D763 		add	r3, r7, #1720
 644 037c D3E90023 		ldrd	r2, [r3]
 645 0380 80EA0204 		eor	r4, r0, r2
 646 0384 C7F80843 		str	r4, [r7, #776]
 647 0388 4B40     		eors	r3, r3, r1
 648 038a C7F80C33 		str	r3, [r7, #780]
 649 038e D7E9C234 		ldrd	r3, [r7, #776]
 650 0392 07F5D662 		add	r2, r7, #1712
 651 0396 C2E90034 		strd	r3, [r2]
 125:aes256ctr.c   **** 	y17 = y10 ^ y11;
 652              		.loc 1 125 6
 653 039a 07F5D863 		add	r3, r7, #1728
 654 039e D3E90001 		ldrd	r0, [r3]
 655 03a2 07F5D763 		add	r3, r7, #1720
 656 03a6 D3E90023 		ldrd	r2, [r3]
 657 03aa 80EA0204 		eor	r4, r0, r2
 658 03ae C7F80043 		str	r4, [r7, #768]
 659 03b2 4B40     		eors	r3, r3, r1
 660 03b4 C7F80433 		str	r3, [r7, #772]
 661 03b8 D7E9C034 		ldrd	r3, [r7, #768]
 662 03bc 07F5D562 		add	r2, r7, #1704
 663 03c0 C2E90034 		strd	r3, [r2]
 126:aes256ctr.c   **** 	y19 = y10 ^ y8;
 664              		.loc 1 126 6
 665 03c4 07F5D863 		add	r3, r7, #1728
 666 03c8 D3E90001 		ldrd	r0, [r3]
 667 03cc 07F5E463 		add	r3, r7, #1824
 668 03d0 D3E90023 		ldrd	r2, [r3]
 669 03d4 80EA0204 		eor	r4, r0, r2
 670 03d8 C7F8F842 		str	r4, [r7, #760]
 671 03dc 4B40     		eors	r3, r3, r1
 672 03de C7F8FC32 		str	r3, [r7, #764]
 673 03e2 D7E9BE34 		ldrd	r3, [r7, #760]
 674 03e6 07F5D462 		add	r2, r7, #1696
 675 03ea C2E90034 		strd	r3, [r2]
 127:aes256ctr.c   **** 	y16 = t0 ^ y11;
 676              		.loc 1 127 6
 677 03ee 07F5E363 		add	r3, r7, #1816
 678 03f2 D3E90001 		ldrd	r0, [r3]
 679 03f6 07F5D763 		add	r3, r7, #1720
 680 03fa D3E90023 		ldrd	r2, [r3]
 681 03fe 80EA0204 		eor	r4, r0, r2
 682 0402 C7F8F042 		str	r4, [r7, #752]
 683 0406 4B40     		eors	r3, r3, r1
 684 0408 C7F8F432 		str	r3, [r7, #756]
 685 040c D7E9BC34 		ldrd	r3, [r7, #752]
 686 0410 07F5D362 		add	r2, r7, #1688
 687 0414 C2E90034 		strd	r3, [r2]
 128:aes256ctr.c   **** 	y21 = y13 ^ y16;
 688              		.loc 1 128 6
 689 0418 07F5E663 		add	r3, r7, #1840
 690 041c D3E90001 		ldrd	r0, [r3]
 691 0420 07F5D363 		add	r3, r7, #1688
 692 0424 D3E90023 		ldrd	r2, [r3]
 693 0428 80EA0204 		eor	r4, r0, r2
 694 042c C7F8E842 		str	r4, [r7, #744]
 695 0430 4B40     		eors	r3, r3, r1
 696 0432 C7F8EC32 		str	r3, [r7, #748]
 697 0436 D7E9BA34 		ldrd	r3, [r7, #744]
 698 043a 07F5D262 		add	r2, r7, #1680
 699 043e C2E90034 		strd	r3, [r2]
 129:aes256ctr.c   **** 	y18 = x0 ^ y16;
 700              		.loc 1 129 6
 701 0442 07F5EF63 		add	r3, r7, #1912
 702 0446 D3E90001 		ldrd	r0, [r3]
 703 044a 07F5D363 		add	r3, r7, #1688
 704 044e D3E90023 		ldrd	r2, [r3]
 705 0452 80EA0204 		eor	r4, r0, r2
 706 0456 C7F8E042 		str	r4, [r7, #736]
 707 045a 4B40     		eors	r3, r3, r1
 708 045c C7F8E432 		str	r3, [r7, #740]
 709 0460 D7E9B834 		ldrd	r3, [r7, #736]
 710 0464 07F5D162 		add	r2, r7, #1672
 711 0468 C2E90034 		strd	r3, [r2]
 130:aes256ctr.c   **** 
 131:aes256ctr.c   **** 	/*
 132:aes256ctr.c   **** 	 * Non-linear section.
 133:aes256ctr.c   **** 	 */
 134:aes256ctr.c   **** 	t2 = y12 & y15;
 712              		.loc 1 134 5
 713 046c 07F5E063 		add	r3, r7, #1792
 714 0470 D3E90001 		ldrd	r0, [r3]
 715 0474 07F5DB63 		add	r3, r7, #1752
 716 0478 D3E90023 		ldrd	r2, [r3]
 717 047c 00EA0204 		and	r4, r0, r2
 718 0480 C7F8D842 		str	r4, [r7, #728]
 719 0484 0B40     		ands	r3, r3, r1
 720 0486 C7F8DC32 		str	r3, [r7, #732]
 721 048a D7E9B634 		ldrd	r3, [r7, #728]
 722 048e 07F5D062 		add	r2, r7, #1664
 723 0492 C2E90034 		strd	r3, [r2]
 135:aes256ctr.c   **** 	t3 = y3 & y6;
 724              		.loc 1 135 5
 725 0496 07F5DD63 		add	r3, r7, #1768
 726 049a D3E90001 		ldrd	r0, [r3]
 727 049e 07F5D963 		add	r3, r7, #1736
 728 04a2 D3E90023 		ldrd	r2, [r3]
 729 04a6 00EA0204 		and	r4, r0, r2
 730 04aa C7F8D042 		str	r4, [r7, #720]
 731 04ae 0B40     		ands	r3, r3, r1
 732 04b0 C7F8D432 		str	r3, [r7, #724]
 733 04b4 D7E9B434 		ldrd	r3, [r7, #720]
 734 04b8 07F5CF62 		add	r2, r7, #1656
 735 04bc C2E90034 		strd	r3, [r2]
 136:aes256ctr.c   **** 	t4 = t3 ^ t2;
 736              		.loc 1 136 5
 737 04c0 07F5CF63 		add	r3, r7, #1656
 738 04c4 D3E90001 		ldrd	r0, [r3]
 739 04c8 07F5D063 		add	r3, r7, #1664
 740 04cc D3E90023 		ldrd	r2, [r3]
 741 04d0 80EA0204 		eor	r4, r0, r2
 742 04d4 C7F8C842 		str	r4, [r7, #712]
 743 04d8 4B40     		eors	r3, r3, r1
 744 04da C7F8CC32 		str	r3, [r7, #716]
 745 04de D7E9B234 		ldrd	r3, [r7, #712]
 746 04e2 07F5CE62 		add	r2, r7, #1648
 747 04e6 C2E90034 		strd	r3, [r2]
 137:aes256ctr.c   **** 	t5 = y4 & x7;
 748              		.loc 1 137 5
 749 04ea 07F5E163 		add	r3, r7, #1800
 750 04ee D3E90001 		ldrd	r0, [r3]
 751 04f2 07F5E863 		add	r3, r7, #1856
 752 04f6 D3E90023 		ldrd	r2, [r3]
 753 04fa 00EA0204 		and	r4, r0, r2
 754 04fe C7F8C042 		str	r4, [r7, #704]
 755 0502 0B40     		ands	r3, r3, r1
 756 0504 C7F8C432 		str	r3, [r7, #708]
 757 0508 D7E9B034 		ldrd	r3, [r7, #704]
 758 050c 07F5CD62 		add	r2, r7, #1640
 759 0510 C2E90034 		strd	r3, [r2]
 138:aes256ctr.c   **** 	t6 = t5 ^ t2;
 760              		.loc 1 138 5
 761 0514 07F5CD63 		add	r3, r7, #1640
 762 0518 D3E90001 		ldrd	r0, [r3]
 763 051c 07F5D063 		add	r3, r7, #1664
 764 0520 D3E90023 		ldrd	r2, [r3]
 765 0524 80EA0204 		eor	r4, r0, r2
 766 0528 C7F8B842 		str	r4, [r7, #696]
 767 052c 4B40     		eors	r3, r3, r1
 768 052e C7F8BC32 		str	r3, [r7, #700]
 769 0532 D7E9AE34 		ldrd	r3, [r7, #696]
 770 0536 07F5CC62 		add	r2, r7, #1632
 771 053a C2E90034 		strd	r3, [r2]
 139:aes256ctr.c   **** 	t7 = y13 & y16;
 772              		.loc 1 139 5
 773 053e 07F5E663 		add	r3, r7, #1840
 774 0542 D3E90001 		ldrd	r0, [r3]
 775 0546 07F5D363 		add	r3, r7, #1688
 776 054a D3E90023 		ldrd	r2, [r3]
 777 054e 00EA0204 		and	r4, r0, r2
 778 0552 C7F8B042 		str	r4, [r7, #688]
 779 0556 0B40     		ands	r3, r3, r1
 780 0558 C7F8B432 		str	r3, [r7, #692]
 781 055c D7E9AC34 		ldrd	r3, [r7, #688]
 782 0560 07F5CB62 		add	r2, r7, #1624
 783 0564 C2E90034 		strd	r3, [r2]
 140:aes256ctr.c   **** 	t8 = y5 & y1;
 784              		.loc 1 140 5
 785 0568 07F5DE63 		add	r3, r7, #1776
 786 056c D3E90001 		ldrd	r0, [r3]
 787 0570 07F5E263 		add	r3, r7, #1808
 788 0574 D3E90023 		ldrd	r2, [r3]
 789 0578 00EA0204 		and	r4, r0, r2
 790 057c C7F8A842 		str	r4, [r7, #680]
 791 0580 0B40     		ands	r3, r3, r1
 792 0582 C7F8AC32 		str	r3, [r7, #684]
 793 0586 D7E9AA34 		ldrd	r3, [r7, #680]
 794 058a 07F5CA62 		add	r2, r7, #1616
 795 058e C2E90034 		strd	r3, [r2]
 141:aes256ctr.c   **** 	t9 = t8 ^ t7;
 796              		.loc 1 141 5
 797 0592 07F5CA63 		add	r3, r7, #1616
 798 0596 D3E90001 		ldrd	r0, [r3]
 799 059a 07F5CB63 		add	r3, r7, #1624
 800 059e D3E90023 		ldrd	r2, [r3]
 801 05a2 80EA0204 		eor	r4, r0, r2
 802 05a6 C7F8A042 		str	r4, [r7, #672]
 803 05aa 4B40     		eors	r3, r3, r1
 804 05ac C7F8A432 		str	r3, [r7, #676]
 805 05b0 D7E9A834 		ldrd	r3, [r7, #672]
 806 05b4 07F5C962 		add	r2, r7, #1608
 807 05b8 C2E90034 		strd	r3, [r2]
 142:aes256ctr.c   **** 	t10 = y2 & y7;
 808              		.loc 1 142 6
 809 05bc 07F5DF63 		add	r3, r7, #1784
 810 05c0 D3E90001 		ldrd	r0, [r3]
 811 05c4 07F5D663 		add	r3, r7, #1712
 812 05c8 D3E90023 		ldrd	r2, [r3]
 813 05cc 00EA0204 		and	r4, r0, r2
 814 05d0 C7F89842 		str	r4, [r7, #664]
 815 05d4 0B40     		ands	r3, r3, r1
 816 05d6 C7F89C32 		str	r3, [r7, #668]
 817 05da D7E9A634 		ldrd	r3, [r7, #664]
 818 05de 07F5C862 		add	r2, r7, #1600
 819 05e2 C2E90034 		strd	r3, [r2]
 143:aes256ctr.c   **** 	t11 = t10 ^ t7;
 820              		.loc 1 143 6
 821 05e6 07F5C863 		add	r3, r7, #1600
 822 05ea D3E90001 		ldrd	r0, [r3]
 823 05ee 07F5CB63 		add	r3, r7, #1624
 824 05f2 D3E90023 		ldrd	r2, [r3]
 825 05f6 80EA0204 		eor	r4, r0, r2
 826 05fa C7F89042 		str	r4, [r7, #656]
 827 05fe 4B40     		eors	r3, r3, r1
 828 0600 C7F89432 		str	r3, [r7, #660]
 829 0604 D7E9A434 		ldrd	r3, [r7, #656]
 830 0608 07F5C762 		add	r2, r7, #1592
 831 060c C2E90034 		strd	r3, [r2]
 144:aes256ctr.c   **** 	t12 = y9 & y11;
 832              		.loc 1 144 6
 833 0610 07F5E563 		add	r3, r7, #1832
 834 0614 D3E90001 		ldrd	r0, [r3]
 835 0618 07F5D763 		add	r3, r7, #1720
 836 061c D3E90023 		ldrd	r2, [r3]
 837 0620 00EA0204 		and	r4, r0, r2
 838 0624 C7F88842 		str	r4, [r7, #648]
 839 0628 0B40     		ands	r3, r3, r1
 840 062a C7F88C32 		str	r3, [r7, #652]
 841 062e D7E9A234 		ldrd	r3, [r7, #648]
 842 0632 07F5C662 		add	r2, r7, #1584
 843 0636 C2E90034 		strd	r3, [r2]
 145:aes256ctr.c   **** 	t13 = y14 & y17;
 844              		.loc 1 145 6
 845 063a 07F5E763 		add	r3, r7, #1848
 846 063e D3E90001 		ldrd	r0, [r3]
 847 0642 07F5D563 		add	r3, r7, #1704
 848 0646 D3E90023 		ldrd	r2, [r3]
 849 064a 00EA0204 		and	r4, r0, r2
 850 064e C7F88042 		str	r4, [r7, #640]
 851 0652 0B40     		ands	r3, r3, r1
 852 0654 C7F88432 		str	r3, [r7, #644]
 853 0658 D7E9A034 		ldrd	r3, [r7, #640]
 854 065c 07F5C562 		add	r2, r7, #1576
 855 0660 C2E90034 		strd	r3, [r2]
 146:aes256ctr.c   **** 	t14 = t13 ^ t12;
 856              		.loc 1 146 6
 857 0664 07F5C563 		add	r3, r7, #1576
 858 0668 D3E90001 		ldrd	r0, [r3]
 859 066c 07F5C663 		add	r3, r7, #1584
 860 0670 D3E90023 		ldrd	r2, [r3]
 861 0674 80EA0204 		eor	r4, r0, r2
 862 0678 C7F87842 		str	r4, [r7, #632]
 863 067c 4B40     		eors	r3, r3, r1
 864 067e C7F87C32 		str	r3, [r7, #636]
 865 0682 D7E99E34 		ldrd	r3, [r7, #632]
 866 0686 07F5C462 		add	r2, r7, #1568
 867 068a C2E90034 		strd	r3, [r2]
 147:aes256ctr.c   **** 	t15 = y8 & y10;
 868              		.loc 1 147 6
 869 068e 07F5E463 		add	r3, r7, #1824
 870 0692 D3E90001 		ldrd	r0, [r3]
 871 0696 07F5D863 		add	r3, r7, #1728
 872 069a D3E90023 		ldrd	r2, [r3]
 873 069e 00EA0204 		and	r4, r0, r2
 874 06a2 C7F87042 		str	r4, [r7, #624]
 875 06a6 0B40     		ands	r3, r3, r1
 876 06a8 C7F87432 		str	r3, [r7, #628]
 877 06ac D7E99C34 		ldrd	r3, [r7, #624]
 878 06b0 07F5C362 		add	r2, r7, #1560
 879 06b4 C2E90034 		strd	r3, [r2]
 148:aes256ctr.c   **** 	t16 = t15 ^ t12;
 880              		.loc 1 148 6
 881 06b8 07F5C363 		add	r3, r7, #1560
 882 06bc D3E90001 		ldrd	r0, [r3]
 883 06c0 07F5C663 		add	r3, r7, #1584
 884 06c4 D3E90023 		ldrd	r2, [r3]
 885 06c8 80EA0204 		eor	r4, r0, r2
 886 06cc C7F86842 		str	r4, [r7, #616]
 887 06d0 4B40     		eors	r3, r3, r1
 888 06d2 C7F86C32 		str	r3, [r7, #620]
 889 06d6 D7E99A34 		ldrd	r3, [r7, #616]
 890 06da 07F5C262 		add	r2, r7, #1552
 891 06de C2E90034 		strd	r3, [r2]
 149:aes256ctr.c   **** 	t17 = t4 ^ t14;
 892              		.loc 1 149 6
 893 06e2 07F5CE63 		add	r3, r7, #1648
 894 06e6 D3E90001 		ldrd	r0, [r3]
 895 06ea 07F5C463 		add	r3, r7, #1568
 896 06ee D3E90023 		ldrd	r2, [r3]
 897 06f2 80EA0204 		eor	r4, r0, r2
 898 06f6 C7F86042 		str	r4, [r7, #608]
 899 06fa 4B40     		eors	r3, r3, r1
 900 06fc C7F86432 		str	r3, [r7, #612]
 901 0700 D7E99834 		ldrd	r3, [r7, #608]
 902 0704 07F5C162 		add	r2, r7, #1544
 903 0708 C2E90034 		strd	r3, [r2]
 150:aes256ctr.c   **** 	t18 = t6 ^ t16;
 904              		.loc 1 150 6
 905 070c 07F5CC63 		add	r3, r7, #1632
 906 0710 D3E90001 		ldrd	r0, [r3]
 907 0714 07F5C263 		add	r3, r7, #1552
 908 0718 D3E90023 		ldrd	r2, [r3]
 909 071c 80EA0204 		eor	r4, r0, r2
 910 0720 C7F85842 		str	r4, [r7, #600]
 911 0724 4B40     		eors	r3, r3, r1
 912 0726 C7F85C32 		str	r3, [r7, #604]
 913 072a D7E99634 		ldrd	r3, [r7, #600]
 914 072e 07F5C062 		add	r2, r7, #1536
 915 0732 C2E90034 		strd	r3, [r2]
 151:aes256ctr.c   **** 	t19 = t9 ^ t14;
 916              		.loc 1 151 6
 917 0736 07F5C963 		add	r3, r7, #1608
 918 073a D3E90001 		ldrd	r0, [r3]
 919 073e 07F5C463 		add	r3, r7, #1568
 920 0742 D3E90023 		ldrd	r2, [r3]
 921 0746 80EA0204 		eor	r4, r0, r2
 922 074a C7F85042 		str	r4, [r7, #592]
 923 074e 4B40     		eors	r3, r3, r1
 924 0750 C7F85432 		str	r3, [r7, #596]
 925 0754 D7E99434 		ldrd	r3, [r7, #592]
 926 0758 07F5BF62 		add	r2, r7, #1528
 927 075c C2E90034 		strd	r3, [r2]
 152:aes256ctr.c   **** 	t20 = t11 ^ t16;
 928              		.loc 1 152 6
 929 0760 07F5C763 		add	r3, r7, #1592
 930 0764 D3E90001 		ldrd	r0, [r3]
 931 0768 07F5C263 		add	r3, r7, #1552
 932 076c D3E90023 		ldrd	r2, [r3]
 933 0770 80EA0204 		eor	r4, r0, r2
 934 0774 C7F84842 		str	r4, [r7, #584]
 935 0778 4B40     		eors	r3, r3, r1
 936 077a C7F84C32 		str	r3, [r7, #588]
 937 077e D7E99234 		ldrd	r3, [r7, #584]
 938 0782 07F5BE62 		add	r2, r7, #1520
 939 0786 C2E90034 		strd	r3, [r2]
 153:aes256ctr.c   **** 	t21 = t17 ^ y20;
 940              		.loc 1 153 6
 941 078a 07F5C163 		add	r3, r7, #1544
 942 078e D3E90001 		ldrd	r0, [r3]
 943 0792 07F5DA63 		add	r3, r7, #1744
 944 0796 D3E90023 		ldrd	r2, [r3]
 945 079a 80EA0204 		eor	r4, r0, r2
 946 079e C7F84042 		str	r4, [r7, #576]
 947 07a2 4B40     		eors	r3, r3, r1
 948 07a4 C7F84432 		str	r3, [r7, #580]
 949 07a8 D7E99034 		ldrd	r3, [r7, #576]
 950 07ac 07F5BD62 		add	r2, r7, #1512
 951 07b0 C2E90034 		strd	r3, [r2]
 154:aes256ctr.c   **** 	t22 = t18 ^ y19;
 952              		.loc 1 154 6
 953 07b4 07F5C063 		add	r3, r7, #1536
 954 07b8 D3E90001 		ldrd	r0, [r3]
 955 07bc 07F5D463 		add	r3, r7, #1696
 956 07c0 D3E90023 		ldrd	r2, [r3]
 957 07c4 80EA0204 		eor	r4, r0, r2
 958 07c8 C7F83842 		str	r4, [r7, #568]
 959 07cc 4B40     		eors	r3, r3, r1
 960 07ce C7F83C32 		str	r3, [r7, #572]
 961 07d2 D7E98E34 		ldrd	r3, [r7, #568]
 962 07d6 07F5BC62 		add	r2, r7, #1504
 963 07da C2E90034 		strd	r3, [r2]
 155:aes256ctr.c   **** 	t23 = t19 ^ y21;
 964              		.loc 1 155 6
 965 07de 07F5BF63 		add	r3, r7, #1528
 966 07e2 D3E90001 		ldrd	r0, [r3]
 967 07e6 07F5D263 		add	r3, r7, #1680
 968 07ea D3E90023 		ldrd	r2, [r3]
 969 07ee 80EA0204 		eor	r4, r0, r2
 970 07f2 C7F83042 		str	r4, [r7, #560]
 971 07f6 4B40     		eors	r3, r3, r1
 972 07f8 C7F83432 		str	r3, [r7, #564]
 973 07fc D7E98C34 		ldrd	r3, [r7, #560]
 974 0800 07F5BB62 		add	r2, r7, #1496
 975 0804 C2E90034 		strd	r3, [r2]
 156:aes256ctr.c   **** 	t24 = t20 ^ y18;
 976              		.loc 1 156 6
 977 0808 07F5BE63 		add	r3, r7, #1520
 978 080c D3E90001 		ldrd	r0, [r3]
 979 0810 07F5D163 		add	r3, r7, #1672
 980 0814 D3E90023 		ldrd	r2, [r3]
 981 0818 80EA0204 		eor	r4, r0, r2
 982 081c C7F82842 		str	r4, [r7, #552]
 983 0820 4B40     		eors	r3, r3, r1
 984 0822 C7F82C32 		str	r3, [r7, #556]
 985 0826 D7E98A34 		ldrd	r3, [r7, #552]
 986 082a 07F5BA62 		add	r2, r7, #1488
 987 082e C2E90034 		strd	r3, [r2]
 157:aes256ctr.c   **** 
 158:aes256ctr.c   **** 	t25 = t21 ^ t22;
 988              		.loc 1 158 6
 989 0832 07F5BD63 		add	r3, r7, #1512
 990 0836 D3E90001 		ldrd	r0, [r3]
 991 083a 07F5BC63 		add	r3, r7, #1504
 992 083e D3E90023 		ldrd	r2, [r3]
 993 0842 80EA0204 		eor	r4, r0, r2
 994 0846 C7F82042 		str	r4, [r7, #544]
 995 084a 4B40     		eors	r3, r3, r1
 996 084c C7F82432 		str	r3, [r7, #548]
 997 0850 D7E98834 		ldrd	r3, [r7, #544]
 998 0854 07F5B962 		add	r2, r7, #1480
 999 0858 C2E90034 		strd	r3, [r2]
 159:aes256ctr.c   **** 	t26 = t21 & t23;
 1000              		.loc 1 159 6
 1001 085c 07F5BD63 		add	r3, r7, #1512
 1002 0860 D3E90001 		ldrd	r0, [r3]
 1003 0864 07F5BB63 		add	r3, r7, #1496
 1004 0868 D3E90023 		ldrd	r2, [r3]
 1005 086c 00EA0204 		and	r4, r0, r2
 1006 0870 C7F81842 		str	r4, [r7, #536]
 1007 0874 0B40     		ands	r3, r3, r1
 1008 0876 C7F81C32 		str	r3, [r7, #540]
 1009 087a D7E98634 		ldrd	r3, [r7, #536]
 1010 087e 07F5B862 		add	r2, r7, #1472
 1011 0882 C2E90034 		strd	r3, [r2]
 160:aes256ctr.c   **** 	t27 = t24 ^ t26;
 1012              		.loc 1 160 6
 1013 0886 07F5BA63 		add	r3, r7, #1488
 1014 088a D3E90001 		ldrd	r0, [r3]
 1015 088e 07F5B863 		add	r3, r7, #1472
 1016 0892 D3E90023 		ldrd	r2, [r3]
 1017 0896 80EA0204 		eor	r4, r0, r2
 1018 089a C7F81042 		str	r4, [r7, #528]
 1019 089e 4B40     		eors	r3, r3, r1
 1020 08a0 C7F81432 		str	r3, [r7, #532]
 1021 08a4 D7E98434 		ldrd	r3, [r7, #528]
 1022 08a8 07F5B762 		add	r2, r7, #1464
 1023 08ac C2E90034 		strd	r3, [r2]
 161:aes256ctr.c   **** 	t28 = t25 & t27;
 1024              		.loc 1 161 6
 1025 08b0 07F5B963 		add	r3, r7, #1480
 1026 08b4 D3E90001 		ldrd	r0, [r3]
 1027 08b8 07F5B763 		add	r3, r7, #1464
 1028 08bc D3E90023 		ldrd	r2, [r3]
 1029 08c0 00EA0204 		and	r4, r0, r2
 1030 08c4 C7F80842 		str	r4, [r7, #520]
 1031 08c8 0B40     		ands	r3, r3, r1
 1032 08ca C7F80C32 		str	r3, [r7, #524]
 1033 08ce D7E98234 		ldrd	r3, [r7, #520]
 1034 08d2 07F5B662 		add	r2, r7, #1456
 1035 08d6 C2E90034 		strd	r3, [r2]
 162:aes256ctr.c   **** 	t29 = t28 ^ t22;
 1036              		.loc 1 162 6
 1037 08da 07F5B663 		add	r3, r7, #1456
 1038 08de D3E90001 		ldrd	r0, [r3]
 1039 08e2 07F5BC63 		add	r3, r7, #1504
 1040 08e6 D3E90023 		ldrd	r2, [r3]
 1041 08ea 80EA0204 		eor	r4, r0, r2
 1042 08ee C7F80042 		str	r4, [r7, #512]
 1043 08f2 4B40     		eors	r3, r3, r1
 1044 08f4 C7F80432 		str	r3, [r7, #516]
 1045 08f8 D7E98034 		ldrd	r3, [r7, #512]
 1046 08fc 07F5B562 		add	r2, r7, #1448
 1047 0900 C2E90034 		strd	r3, [r2]
 163:aes256ctr.c   **** 	t30 = t23 ^ t24;
 1048              		.loc 1 163 6
 1049 0904 07F5BB63 		add	r3, r7, #1496
 1050 0908 D3E90001 		ldrd	r0, [r3]
 1051 090c 07F5BA63 		add	r3, r7, #1488
 1052 0910 D3E90023 		ldrd	r2, [r3]
 1053 0914 80EA0204 		eor	r4, r0, r2
 1054 0918 C7F8F841 		str	r4, [r7, #504]
 1055 091c 4B40     		eors	r3, r3, r1
 1056 091e C7F8FC31 		str	r3, [r7, #508]
 1057 0922 D7E97E34 		ldrd	r3, [r7, #504]
 1058 0926 07F5B462 		add	r2, r7, #1440
 1059 092a C2E90034 		strd	r3, [r2]
 164:aes256ctr.c   **** 	t31 = t22 ^ t26;
 1060              		.loc 1 164 6
 1061 092e 07F5BC63 		add	r3, r7, #1504
 1062 0932 D3E90001 		ldrd	r0, [r3]
 1063 0936 07F5B863 		add	r3, r7, #1472
 1064 093a D3E90023 		ldrd	r2, [r3]
 1065 093e 80EA0204 		eor	r4, r0, r2
 1066 0942 C7F8F041 		str	r4, [r7, #496]
 1067 0946 4B40     		eors	r3, r3, r1
 1068 0948 C7F8F431 		str	r3, [r7, #500]
 1069 094c D7E97C34 		ldrd	r3, [r7, #496]
 1070 0950 07F5B362 		add	r2, r7, #1432
 1071 0954 C2E90034 		strd	r3, [r2]
 165:aes256ctr.c   **** 	t32 = t31 & t30;
 1072              		.loc 1 165 6
 1073 0958 07F5B363 		add	r3, r7, #1432
 1074 095c D3E90001 		ldrd	r0, [r3]
 1075 0960 07F5B463 		add	r3, r7, #1440
 1076 0964 D3E90023 		ldrd	r2, [r3]
 1077 0968 00EA0204 		and	r4, r0, r2
 1078 096c C7F8E841 		str	r4, [r7, #488]
 1079 0970 0B40     		ands	r3, r3, r1
 1080 0972 C7F8EC31 		str	r3, [r7, #492]
 1081 0976 D7E97A34 		ldrd	r3, [r7, #488]
 1082 097a 07F5B262 		add	r2, r7, #1424
 1083 097e C2E90034 		strd	r3, [r2]
 166:aes256ctr.c   **** 	t33 = t32 ^ t24;
 1084              		.loc 1 166 6
 1085 0982 07F5B263 		add	r3, r7, #1424
 1086 0986 D3E90001 		ldrd	r0, [r3]
 1087 098a 07F5BA63 		add	r3, r7, #1488
 1088 098e D3E90023 		ldrd	r2, [r3]
 1089 0992 80EA0204 		eor	r4, r0, r2
 1090 0996 C7F8E041 		str	r4, [r7, #480]
 1091 099a 4B40     		eors	r3, r3, r1
 1092 099c C7F8E431 		str	r3, [r7, #484]
 1093 09a0 D7E97834 		ldrd	r3, [r7, #480]
 1094 09a4 07F5B162 		add	r2, r7, #1416
 1095 09a8 C2E90034 		strd	r3, [r2]
 167:aes256ctr.c   **** 	t34 = t23 ^ t33;
 1096              		.loc 1 167 6
 1097 09ac 07F5BB63 		add	r3, r7, #1496
 1098 09b0 D3E90001 		ldrd	r0, [r3]
 1099 09b4 07F5B163 		add	r3, r7, #1416
 1100 09b8 D3E90023 		ldrd	r2, [r3]
 1101 09bc 80EA0204 		eor	r4, r0, r2
 1102 09c0 C7F8D841 		str	r4, [r7, #472]
 1103 09c4 4B40     		eors	r3, r3, r1
 1104 09c6 C7F8DC31 		str	r3, [r7, #476]
 1105 09ca D7E97634 		ldrd	r3, [r7, #472]
 1106 09ce 07F5B062 		add	r2, r7, #1408
 1107 09d2 C2E90034 		strd	r3, [r2]
 168:aes256ctr.c   **** 	t35 = t27 ^ t33;
 1108              		.loc 1 168 6
 1109 09d6 07F5B763 		add	r3, r7, #1464
 1110 09da D3E90001 		ldrd	r0, [r3]
 1111 09de 07F5B163 		add	r3, r7, #1416
 1112 09e2 D3E90023 		ldrd	r2, [r3]
 1113 09e6 80EA0204 		eor	r4, r0, r2
 1114 09ea C7F8D041 		str	r4, [r7, #464]
 1115 09ee 4B40     		eors	r3, r3, r1
 1116 09f0 C7F8D431 		str	r3, [r7, #468]
 1117 09f4 D7E97434 		ldrd	r3, [r7, #464]
 1118 09f8 07F5AF62 		add	r2, r7, #1400
 1119 09fc C2E90034 		strd	r3, [r2]
 169:aes256ctr.c   **** 	t36 = t24 & t35;
 1120              		.loc 1 169 6
 1121 0a00 07F5BA63 		add	r3, r7, #1488
 1122 0a04 D3E90001 		ldrd	r0, [r3]
 1123 0a08 07F5AF63 		add	r3, r7, #1400
 1124 0a0c D3E90023 		ldrd	r2, [r3]
 1125 0a10 00EA0204 		and	r4, r0, r2
 1126 0a14 C7F8C841 		str	r4, [r7, #456]
 1127 0a18 0B40     		ands	r3, r3, r1
 1128 0a1a C7F8CC31 		str	r3, [r7, #460]
 1129 0a1e D7E97234 		ldrd	r3, [r7, #456]
 1130 0a22 07F5AE62 		add	r2, r7, #1392
 1131 0a26 C2E90034 		strd	r3, [r2]
 170:aes256ctr.c   **** 	t37 = t36 ^ t34;
 1132              		.loc 1 170 6
 1133 0a2a 07F5AE63 		add	r3, r7, #1392
 1134 0a2e D3E90001 		ldrd	r0, [r3]
 1135 0a32 07F5B063 		add	r3, r7, #1408
 1136 0a36 D3E90023 		ldrd	r2, [r3]
 1137 0a3a 80EA0204 		eor	r4, r0, r2
 1138 0a3e C7F8C041 		str	r4, [r7, #448]
 1139 0a42 4B40     		eors	r3, r3, r1
 1140 0a44 C7F8C431 		str	r3, [r7, #452]
 1141 0a48 D7E97034 		ldrd	r3, [r7, #448]
 1142 0a4c 07F5AD62 		add	r2, r7, #1384
 1143 0a50 C2E90034 		strd	r3, [r2]
 171:aes256ctr.c   **** 	t38 = t27 ^ t36;
 1144              		.loc 1 171 6
 1145 0a54 07F5B763 		add	r3, r7, #1464
 1146 0a58 D3E90001 		ldrd	r0, [r3]
 1147 0a5c 07F5AE63 		add	r3, r7, #1392
 1148 0a60 D3E90023 		ldrd	r2, [r3]
 1149 0a64 80EA0204 		eor	r4, r0, r2
 1150 0a68 C7F8B841 		str	r4, [r7, #440]
 1151 0a6c 4B40     		eors	r3, r3, r1
 1152 0a6e C7F8BC31 		str	r3, [r7, #444]
 1153 0a72 D7E96E34 		ldrd	r3, [r7, #440]
 1154 0a76 07F5AC62 		add	r2, r7, #1376
 1155 0a7a C2E90034 		strd	r3, [r2]
 172:aes256ctr.c   **** 	t39 = t29 & t38;
 1156              		.loc 1 172 6
 1157 0a7e 07F5B563 		add	r3, r7, #1448
 1158 0a82 D3E90001 		ldrd	r0, [r3]
 1159 0a86 07F5AC63 		add	r3, r7, #1376
 1160 0a8a D3E90023 		ldrd	r2, [r3]
 1161 0a8e 00EA0204 		and	r4, r0, r2
 1162 0a92 C7F8B041 		str	r4, [r7, #432]
 1163 0a96 0B40     		ands	r3, r3, r1
 1164 0a98 C7F8B431 		str	r3, [r7, #436]
 1165 0a9c D7E96C34 		ldrd	r3, [r7, #432]
 1166 0aa0 07F5AB62 		add	r2, r7, #1368
 1167 0aa4 C2E90034 		strd	r3, [r2]
 173:aes256ctr.c   **** 	t40 = t25 ^ t39;
 1168              		.loc 1 173 6
 1169 0aa8 07F5B963 		add	r3, r7, #1480
 1170 0aac D3E90001 		ldrd	r0, [r3]
 1171 0ab0 07F5AB63 		add	r3, r7, #1368
 1172 0ab4 D3E90023 		ldrd	r2, [r3]
 1173 0ab8 80EA0204 		eor	r4, r0, r2
 1174 0abc C7F8A841 		str	r4, [r7, #424]
 1175 0ac0 4B40     		eors	r3, r3, r1
 1176 0ac2 C7F8AC31 		str	r3, [r7, #428]
 1177 0ac6 D7E96A34 		ldrd	r3, [r7, #424]
 1178 0aca 07F5AA62 		add	r2, r7, #1360
 1179 0ace C2E90034 		strd	r3, [r2]
 174:aes256ctr.c   **** 
 175:aes256ctr.c   **** 	t41 = t40 ^ t37;
 1180              		.loc 1 175 6
 1181 0ad2 07F5AA63 		add	r3, r7, #1360
 1182 0ad6 D3E90001 		ldrd	r0, [r3]
 1183 0ada 07F5AD63 		add	r3, r7, #1384
 1184 0ade D3E90023 		ldrd	r2, [r3]
 1185 0ae2 80EA0204 		eor	r4, r0, r2
 1186 0ae6 C7F8A041 		str	r4, [r7, #416]
 1187 0aea 4B40     		eors	r3, r3, r1
 1188 0aec C7F8A431 		str	r3, [r7, #420]
 1189 0af0 D7E96834 		ldrd	r3, [r7, #416]
 1190 0af4 07F5A962 		add	r2, r7, #1352
 1191 0af8 C2E90034 		strd	r3, [r2]
 176:aes256ctr.c   **** 	t42 = t29 ^ t33;
 1192              		.loc 1 176 6
 1193 0afc 07F5B563 		add	r3, r7, #1448
 1194 0b00 D3E90001 		ldrd	r0, [r3]
 1195 0b04 07F5B163 		add	r3, r7, #1416
 1196 0b08 D3E90023 		ldrd	r2, [r3]
 1197 0b0c 80EA0204 		eor	r4, r0, r2
 1198 0b10 C7F89841 		str	r4, [r7, #408]
 1199 0b14 4B40     		eors	r3, r3, r1
 1200 0b16 C7F89C31 		str	r3, [r7, #412]
 1201 0b1a D7E96634 		ldrd	r3, [r7, #408]
 1202 0b1e 07F5A862 		add	r2, r7, #1344
 1203 0b22 C2E90034 		strd	r3, [r2]
 177:aes256ctr.c   **** 	t43 = t29 ^ t40;
 1204              		.loc 1 177 6
 1205 0b26 07F5B563 		add	r3, r7, #1448
 1206 0b2a D3E90001 		ldrd	r0, [r3]
 1207 0b2e 07F5AA63 		add	r3, r7, #1360
 1208 0b32 D3E90023 		ldrd	r2, [r3]
 1209 0b36 80EA0204 		eor	r4, r0, r2
 1210 0b3a C7F89041 		str	r4, [r7, #400]
 1211 0b3e 4B40     		eors	r3, r3, r1
 1212 0b40 C7F89431 		str	r3, [r7, #404]
 1213 0b44 D7E96434 		ldrd	r3, [r7, #400]
 1214 0b48 07F5A762 		add	r2, r7, #1336
 1215 0b4c C2E90034 		strd	r3, [r2]
 178:aes256ctr.c   **** 	t44 = t33 ^ t37;
 1216              		.loc 1 178 6
 1217 0b50 07F5B163 		add	r3, r7, #1416
 1218 0b54 D3E90001 		ldrd	r0, [r3]
 1219 0b58 07F5AD63 		add	r3, r7, #1384
 1220 0b5c D3E90023 		ldrd	r2, [r3]
 1221 0b60 80EA0204 		eor	r4, r0, r2
 1222 0b64 C7F88841 		str	r4, [r7, #392]
 1223 0b68 4B40     		eors	r3, r3, r1
 1224 0b6a C7F88C31 		str	r3, [r7, #396]
 1225 0b6e D7E96234 		ldrd	r3, [r7, #392]
 1226 0b72 07F5A662 		add	r2, r7, #1328
 1227 0b76 C2E90034 		strd	r3, [r2]
 179:aes256ctr.c   **** 	t45 = t42 ^ t41;
 1228              		.loc 1 179 6
 1229 0b7a 07F5A863 		add	r3, r7, #1344
 1230 0b7e D3E90001 		ldrd	r0, [r3]
 1231 0b82 07F5A963 		add	r3, r7, #1352
 1232 0b86 D3E90023 		ldrd	r2, [r3]
 1233 0b8a 80EA0204 		eor	r4, r0, r2
 1234 0b8e C7F88041 		str	r4, [r7, #384]
 1235 0b92 4B40     		eors	r3, r3, r1
 1236 0b94 C7F88431 		str	r3, [r7, #388]
 1237 0b98 D7E96034 		ldrd	r3, [r7, #384]
 1238 0b9c 07F5A562 		add	r2, r7, #1320
 1239 0ba0 C2E90034 		strd	r3, [r2]
 180:aes256ctr.c   **** 	z0 = t44 & y15;
 1240              		.loc 1 180 5
 1241 0ba4 07F5A663 		add	r3, r7, #1328
 1242 0ba8 D3E90001 		ldrd	r0, [r3]
 1243 0bac 07F5DB63 		add	r3, r7, #1752
 1244 0bb0 D3E90023 		ldrd	r2, [r3]
 1245 0bb4 00EA0204 		and	r4, r0, r2
 1246 0bb8 C7F87841 		str	r4, [r7, #376]
 1247 0bbc 0B40     		ands	r3, r3, r1
 1248 0bbe C7F87C31 		str	r3, [r7, #380]
 1249 0bc2 D7E95E34 		ldrd	r3, [r7, #376]
 1250 0bc6 07F5A462 		add	r2, r7, #1312
 1251 0bca C2E90034 		strd	r3, [r2]
 181:aes256ctr.c   **** 	z1 = t37 & y6;
 1252              		.loc 1 181 5
 1253 0bce 07F5AD63 		add	r3, r7, #1384
 1254 0bd2 D3E90001 		ldrd	r0, [r3]
 1255 0bd6 07F5D963 		add	r3, r7, #1736
 1256 0bda D3E90023 		ldrd	r2, [r3]
 1257 0bde 00EA0204 		and	r4, r0, r2
 1258 0be2 C7F87041 		str	r4, [r7, #368]
 1259 0be6 0B40     		ands	r3, r3, r1
 1260 0be8 C7F87431 		str	r3, [r7, #372]
 1261 0bec D7E95C34 		ldrd	r3, [r7, #368]
 1262 0bf0 07F5A362 		add	r2, r7, #1304
 1263 0bf4 C2E90034 		strd	r3, [r2]
 182:aes256ctr.c   **** 	z2 = t33 & x7;
 1264              		.loc 1 182 5
 1265 0bf8 07F5B163 		add	r3, r7, #1416
 1266 0bfc D3E90001 		ldrd	r0, [r3]
 1267 0c00 07F5E863 		add	r3, r7, #1856
 1268 0c04 D3E90023 		ldrd	r2, [r3]
 1269 0c08 00EA0204 		and	r4, r0, r2
 1270 0c0c C7F86841 		str	r4, [r7, #360]
 1271 0c10 0B40     		ands	r3, r3, r1
 1272 0c12 C7F86C31 		str	r3, [r7, #364]
 1273 0c16 D7E95A34 		ldrd	r3, [r7, #360]
 1274 0c1a 07F5A262 		add	r2, r7, #1296
 1275 0c1e C2E90034 		strd	r3, [r2]
 183:aes256ctr.c   **** 	z3 = t43 & y16;
 1276              		.loc 1 183 5
 1277 0c22 07F5A763 		add	r3, r7, #1336
 1278 0c26 D3E90001 		ldrd	r0, [r3]
 1279 0c2a 07F5D363 		add	r3, r7, #1688
 1280 0c2e D3E90023 		ldrd	r2, [r3]
 1281 0c32 00EA0204 		and	r4, r0, r2
 1282 0c36 C7F86041 		str	r4, [r7, #352]
 1283 0c3a 0B40     		ands	r3, r3, r1
 1284 0c3c C7F86431 		str	r3, [r7, #356]
 1285 0c40 D7E95834 		ldrd	r3, [r7, #352]
 1286 0c44 07F5A162 		add	r2, r7, #1288
 1287 0c48 C2E90034 		strd	r3, [r2]
 184:aes256ctr.c   **** 	z4 = t40 & y1;
 1288              		.loc 1 184 5
 1289 0c4c 07F5AA63 		add	r3, r7, #1360
 1290 0c50 D3E90001 		ldrd	r0, [r3]
 1291 0c54 07F5E263 		add	r3, r7, #1808
 1292 0c58 D3E90023 		ldrd	r2, [r3]
 1293 0c5c 00EA0204 		and	r4, r0, r2
 1294 0c60 C7F85841 		str	r4, [r7, #344]
 1295 0c64 0B40     		ands	r3, r3, r1
 1296 0c66 C7F85C31 		str	r3, [r7, #348]
 1297 0c6a D7E95634 		ldrd	r3, [r7, #344]
 1298 0c6e 07F5A062 		add	r2, r7, #1280
 1299 0c72 C2E90034 		strd	r3, [r2]
 185:aes256ctr.c   **** 	z5 = t29 & y7;
 1300              		.loc 1 185 5
 1301 0c76 07F5B563 		add	r3, r7, #1448
 1302 0c7a D3E90001 		ldrd	r0, [r3]
 1303 0c7e 07F5D663 		add	r3, r7, #1712
 1304 0c82 D3E90023 		ldrd	r2, [r3]
 1305 0c86 00EA0204 		and	r4, r0, r2
 1306 0c8a C7F85041 		str	r4, [r7, #336]
 1307 0c8e 0B40     		ands	r3, r3, r1
 1308 0c90 C7F85431 		str	r3, [r7, #340]
 1309 0c94 D7E95434 		ldrd	r3, [r7, #336]
 1310 0c98 07F59F62 		add	r2, r7, #1272
 1311 0c9c C2E90034 		strd	r3, [r2]
 186:aes256ctr.c   **** 	z6 = t42 & y11;
 1312              		.loc 1 186 5
 1313 0ca0 07F5A863 		add	r3, r7, #1344
 1314 0ca4 D3E90001 		ldrd	r0, [r3]
 1315 0ca8 07F5D763 		add	r3, r7, #1720
 1316 0cac D3E90023 		ldrd	r2, [r3]
 1317 0cb0 00EA0204 		and	r4, r0, r2
 1318 0cb4 C7F84841 		str	r4, [r7, #328]
 1319 0cb8 0B40     		ands	r3, r3, r1
 1320 0cba C7F84C31 		str	r3, [r7, #332]
 1321 0cbe D7E95234 		ldrd	r3, [r7, #328]
 1322 0cc2 07F59E62 		add	r2, r7, #1264
 1323 0cc6 C2E90034 		strd	r3, [r2]
 187:aes256ctr.c   **** 	z7 = t45 & y17;
 1324              		.loc 1 187 5
 1325 0cca 07F5A563 		add	r3, r7, #1320
 1326 0cce D3E90001 		ldrd	r0, [r3]
 1327 0cd2 07F5D563 		add	r3, r7, #1704
 1328 0cd6 D3E90023 		ldrd	r2, [r3]
 1329 0cda 00EA0204 		and	r4, r0, r2
 1330 0cde C7F84041 		str	r4, [r7, #320]
 1331 0ce2 0B40     		ands	r3, r3, r1
 1332 0ce4 C7F84431 		str	r3, [r7, #324]
 1333 0ce8 D7E95034 		ldrd	r3, [r7, #320]
 1334 0cec 07F59D62 		add	r2, r7, #1256
 1335 0cf0 C2E90034 		strd	r3, [r2]
 188:aes256ctr.c   **** 	z8 = t41 & y10;
 1336              		.loc 1 188 5
 1337 0cf4 07F5A963 		add	r3, r7, #1352
 1338 0cf8 D3E90001 		ldrd	r0, [r3]
 1339 0cfc 07F5D863 		add	r3, r7, #1728
 1340 0d00 D3E90023 		ldrd	r2, [r3]
 1341 0d04 00EA0204 		and	r4, r0, r2
 1342 0d08 C7F83841 		str	r4, [r7, #312]
 1343 0d0c 0B40     		ands	r3, r3, r1
 1344 0d0e C7F83C31 		str	r3, [r7, #316]
 1345 0d12 D7E94E34 		ldrd	r3, [r7, #312]
 1346 0d16 07F59C62 		add	r2, r7, #1248
 1347 0d1a C2E90034 		strd	r3, [r2]
 189:aes256ctr.c   **** 	z9 = t44 & y12;
 1348              		.loc 1 189 5
 1349 0d1e 07F5A663 		add	r3, r7, #1328
 1350 0d22 D3E90001 		ldrd	r0, [r3]
 1351 0d26 07F5E063 		add	r3, r7, #1792
 1352 0d2a D3E90023 		ldrd	r2, [r3]
 1353 0d2e 00EA0204 		and	r4, r0, r2
 1354 0d32 C7F83041 		str	r4, [r7, #304]
 1355 0d36 0B40     		ands	r3, r3, r1
 1356 0d38 C7F83431 		str	r3, [r7, #308]
 1357 0d3c D7E94C34 		ldrd	r3, [r7, #304]
 1358 0d40 07F59B62 		add	r2, r7, #1240
 1359 0d44 C2E90034 		strd	r3, [r2]
 190:aes256ctr.c   **** 	z10 = t37 & y3;
 1360              		.loc 1 190 6
 1361 0d48 07F5AD63 		add	r3, r7, #1384
 1362 0d4c D3E90001 		ldrd	r0, [r3]
 1363 0d50 07F5DD63 		add	r3, r7, #1768
 1364 0d54 D3E90023 		ldrd	r2, [r3]
 1365 0d58 00EA0204 		and	r4, r0, r2
 1366 0d5c C7F82841 		str	r4, [r7, #296]
 1367 0d60 0B40     		ands	r3, r3, r1
 1368 0d62 C7F82C31 		str	r3, [r7, #300]
 1369 0d66 D7E94A34 		ldrd	r3, [r7, #296]
 1370 0d6a 07F59A62 		add	r2, r7, #1232
 1371 0d6e C2E90034 		strd	r3, [r2]
 191:aes256ctr.c   **** 	z11 = t33 & y4;
 1372              		.loc 1 191 6
 1373 0d72 07F5B163 		add	r3, r7, #1416
 1374 0d76 D3E90001 		ldrd	r0, [r3]
 1375 0d7a 07F5E163 		add	r3, r7, #1800
 1376 0d7e D3E90023 		ldrd	r2, [r3]
 1377 0d82 00EA0204 		and	r4, r0, r2
 1378 0d86 C7F82041 		str	r4, [r7, #288]
 1379 0d8a 0B40     		ands	r3, r3, r1
 1380 0d8c C7F82431 		str	r3, [r7, #292]
 1381 0d90 D7E94834 		ldrd	r3, [r7, #288]
 1382 0d94 07F59962 		add	r2, r7, #1224
 1383 0d98 C2E90034 		strd	r3, [r2]
 192:aes256ctr.c   **** 	z12 = t43 & y13;
 1384              		.loc 1 192 6
 1385 0d9c 07F5A763 		add	r3, r7, #1336
 1386 0da0 D3E90001 		ldrd	r0, [r3]
 1387 0da4 07F5E663 		add	r3, r7, #1840
 1388 0da8 D3E90023 		ldrd	r2, [r3]
 1389 0dac 00EA0204 		and	r4, r0, r2
 1390 0db0 C7F81841 		str	r4, [r7, #280]
 1391 0db4 0B40     		ands	r3, r3, r1
 1392 0db6 C7F81C31 		str	r3, [r7, #284]
 1393 0dba D7E94634 		ldrd	r3, [r7, #280]
 1394 0dbe 07F59862 		add	r2, r7, #1216
 1395 0dc2 C2E90034 		strd	r3, [r2]
 193:aes256ctr.c   **** 	z13 = t40 & y5;
 1396              		.loc 1 193 6
 1397 0dc6 07F5AA63 		add	r3, r7, #1360
 1398 0dca D3E90001 		ldrd	r0, [r3]
 1399 0dce 07F5DE63 		add	r3, r7, #1776
 1400 0dd2 D3E90023 		ldrd	r2, [r3]
 1401 0dd6 00EA0204 		and	r4, r0, r2
 1402 0dda C7F81041 		str	r4, [r7, #272]
 1403 0dde 0B40     		ands	r3, r3, r1
 1404 0de0 C7F81431 		str	r3, [r7, #276]
 1405 0de4 D7E94434 		ldrd	r3, [r7, #272]
 1406 0de8 07F59762 		add	r2, r7, #1208
 1407 0dec C2E90034 		strd	r3, [r2]
 194:aes256ctr.c   **** 	z14 = t29 & y2;
 1408              		.loc 1 194 6
 1409 0df0 07F5B563 		add	r3, r7, #1448
 1410 0df4 D3E90001 		ldrd	r0, [r3]
 1411 0df8 07F5DF63 		add	r3, r7, #1784
 1412 0dfc D3E90023 		ldrd	r2, [r3]
 1413 0e00 00EA0204 		and	r4, r0, r2
 1414 0e04 C7F80841 		str	r4, [r7, #264]
 1415 0e08 0B40     		ands	r3, r3, r1
 1416 0e0a C7F80C31 		str	r3, [r7, #268]
 1417 0e0e D7E94234 		ldrd	r3, [r7, #264]
 1418 0e12 07F59662 		add	r2, r7, #1200
 1419 0e16 C2E90034 		strd	r3, [r2]
 195:aes256ctr.c   **** 	z15 = t42 & y9;
 1420              		.loc 1 195 6
 1421 0e1a 07F5A863 		add	r3, r7, #1344
 1422 0e1e D3E90001 		ldrd	r0, [r3]
 1423 0e22 07F5E563 		add	r3, r7, #1832
 1424 0e26 D3E90023 		ldrd	r2, [r3]
 1425 0e2a 00EA0204 		and	r4, r0, r2
 1426 0e2e C7F80041 		str	r4, [r7, #256]
 1427 0e32 0B40     		ands	r3, r3, r1
 1428 0e34 C7F80431 		str	r3, [r7, #260]
 1429 0e38 D7E94034 		ldrd	r3, [r7, #256]
 1430 0e3c 07F59562 		add	r2, r7, #1192
 1431 0e40 C2E90034 		strd	r3, [r2]
 196:aes256ctr.c   **** 	z16 = t45 & y14;
 1432              		.loc 1 196 6
 1433 0e44 07F5A563 		add	r3, r7, #1320
 1434 0e48 D3E90001 		ldrd	r0, [r3]
 1435 0e4c 07F5E763 		add	r3, r7, #1848
 1436 0e50 D3E90023 		ldrd	r2, [r3]
 1437 0e54 00EA0204 		and	r4, r0, r2
 1438 0e58 C7F8F840 		str	r4, [r7, #248]
 1439 0e5c 0B40     		ands	r3, r3, r1
 1440 0e5e C7F8FC30 		str	r3, [r7, #252]
 1441 0e62 D7E93E34 		ldrd	r3, [r7, #248]
 1442 0e66 07F59462 		add	r2, r7, #1184
 1443 0e6a C2E90034 		strd	r3, [r2]
 197:aes256ctr.c   **** 	z17 = t41 & y8;
 1444              		.loc 1 197 6
 1445 0e6e 07F5A963 		add	r3, r7, #1352
 1446 0e72 D3E90001 		ldrd	r0, [r3]
 1447 0e76 07F5E463 		add	r3, r7, #1824
 1448 0e7a D3E90023 		ldrd	r2, [r3]
 1449 0e7e 00EA0204 		and	r4, r0, r2
 1450 0e82 C7F8F040 		str	r4, [r7, #240]
 1451 0e86 0B40     		ands	r3, r3, r1
 1452 0e88 C7F8F430 		str	r3, [r7, #244]
 1453 0e8c D7E93C34 		ldrd	r3, [r7, #240]
 1454 0e90 07F59362 		add	r2, r7, #1176
 1455 0e94 C2E90034 		strd	r3, [r2]
 198:aes256ctr.c   **** 
 199:aes256ctr.c   **** 	/*
 200:aes256ctr.c   **** 	 * Bottom linear transformation.
 201:aes256ctr.c   **** 	 */
 202:aes256ctr.c   **** 	t46 = z15 ^ z16;
 1456              		.loc 1 202 6
 1457 0e98 07F59563 		add	r3, r7, #1192
 1458 0e9c D3E90001 		ldrd	r0, [r3]
 1459 0ea0 07F59463 		add	r3, r7, #1184
 1460 0ea4 D3E90023 		ldrd	r2, [r3]
 1461 0ea8 80EA0204 		eor	r4, r0, r2
 1462 0eac C7F8E840 		str	r4, [r7, #232]
 1463 0eb0 4B40     		eors	r3, r3, r1
 1464 0eb2 C7F8EC30 		str	r3, [r7, #236]
 1465 0eb6 D7E93A34 		ldrd	r3, [r7, #232]
 1466 0eba 07F59262 		add	r2, r7, #1168
 1467 0ebe C2E90034 		strd	r3, [r2]
 203:aes256ctr.c   **** 	t47 = z10 ^ z11;
 1468              		.loc 1 203 6
 1469 0ec2 07F59A63 		add	r3, r7, #1232
 1470 0ec6 D3E90001 		ldrd	r0, [r3]
 1471 0eca 07F59963 		add	r3, r7, #1224
 1472 0ece D3E90023 		ldrd	r2, [r3]
 1473 0ed2 80EA0204 		eor	r4, r0, r2
 1474 0ed6 C7F8E040 		str	r4, [r7, #224]
 1475 0eda 4B40     		eors	r3, r3, r1
 1476 0edc C7F8E430 		str	r3, [r7, #228]
 1477 0ee0 D7E93834 		ldrd	r3, [r7, #224]
 1478 0ee4 07F59162 		add	r2, r7, #1160
 1479 0ee8 C2E90034 		strd	r3, [r2]
 204:aes256ctr.c   **** 	t48 = z5 ^ z13;
 1480              		.loc 1 204 6
 1481 0eec 07F59F63 		add	r3, r7, #1272
 1482 0ef0 D3E90001 		ldrd	r0, [r3]
 1483 0ef4 07F59763 		add	r3, r7, #1208
 1484 0ef8 D3E90023 		ldrd	r2, [r3]
 1485 0efc 80EA0204 		eor	r4, r0, r2
 1486 0f00 C7F8D840 		str	r4, [r7, #216]
 1487 0f04 4B40     		eors	r3, r3, r1
 1488 0f06 C7F8DC30 		str	r3, [r7, #220]
 1489 0f0a D7E93634 		ldrd	r3, [r7, #216]
 1490 0f0e 07F59062 		add	r2, r7, #1152
 1491 0f12 C2E90034 		strd	r3, [r2]
 205:aes256ctr.c   **** 	t49 = z9 ^ z10;
 1492              		.loc 1 205 6
 1493 0f16 07F59B63 		add	r3, r7, #1240
 1494 0f1a D3E90001 		ldrd	r0, [r3]
 1495 0f1e 07F59A63 		add	r3, r7, #1232
 1496 0f22 D3E90023 		ldrd	r2, [r3]
 1497 0f26 80EA0204 		eor	r4, r0, r2
 1498 0f2a C7F8D040 		str	r4, [r7, #208]
 1499 0f2e 4B40     		eors	r3, r3, r1
 1500 0f30 C7F8D430 		str	r3, [r7, #212]
 1501 0f34 D7E93434 		ldrd	r3, [r7, #208]
 1502 0f38 07F58F62 		add	r2, r7, #1144
 1503 0f3c C2E90034 		strd	r3, [r2]
 206:aes256ctr.c   **** 	t50 = z2 ^ z12;
 1504              		.loc 1 206 6
 1505 0f40 07F5A263 		add	r3, r7, #1296
 1506 0f44 D3E90001 		ldrd	r0, [r3]
 1507 0f48 07F59863 		add	r3, r7, #1216
 1508 0f4c D3E90023 		ldrd	r2, [r3]
 1509 0f50 80EA0204 		eor	r4, r0, r2
 1510 0f54 C7F8C840 		str	r4, [r7, #200]
 1511 0f58 4B40     		eors	r3, r3, r1
 1512 0f5a C7F8CC30 		str	r3, [r7, #204]
 1513 0f5e D7E93234 		ldrd	r3, [r7, #200]
 1514 0f62 07F58E62 		add	r2, r7, #1136
 1515 0f66 C2E90034 		strd	r3, [r2]
 207:aes256ctr.c   **** 	t51 = z2 ^ z5;
 1516              		.loc 1 207 6
 1517 0f6a 07F5A263 		add	r3, r7, #1296
 1518 0f6e D3E90001 		ldrd	r0, [r3]
 1519 0f72 07F59F63 		add	r3, r7, #1272
 1520 0f76 D3E90023 		ldrd	r2, [r3]
 1521 0f7a 80EA0204 		eor	r4, r0, r2
 1522 0f7e C7F8C040 		str	r4, [r7, #192]
 1523 0f82 4B40     		eors	r3, r3, r1
 1524 0f84 C7F8C430 		str	r3, [r7, #196]
 1525 0f88 D7E93034 		ldrd	r3, [r7, #192]
 1526 0f8c 07F58D62 		add	r2, r7, #1128
 1527 0f90 C2E90034 		strd	r3, [r2]
 208:aes256ctr.c   **** 	t52 = z7 ^ z8;
 1528              		.loc 1 208 6
 1529 0f94 07F59D63 		add	r3, r7, #1256
 1530 0f98 D3E90001 		ldrd	r0, [r3]
 1531 0f9c 07F59C63 		add	r3, r7, #1248
 1532 0fa0 D3E90023 		ldrd	r2, [r3]
 1533 0fa4 80EA0204 		eor	r4, r0, r2
 1534 0fa8 C7F8B840 		str	r4, [r7, #184]
 1535 0fac 4B40     		eors	r3, r3, r1
 1536 0fae C7F8BC30 		str	r3, [r7, #188]
 1537 0fb2 D7E92E34 		ldrd	r3, [r7, #184]
 1538 0fb6 07F58C62 		add	r2, r7, #1120
 1539 0fba C2E90034 		strd	r3, [r2]
 209:aes256ctr.c   **** 	t53 = z0 ^ z3;
 1540              		.loc 1 209 6
 1541 0fbe 07F5A463 		add	r3, r7, #1312
 1542 0fc2 D3E90001 		ldrd	r0, [r3]
 1543 0fc6 07F5A163 		add	r3, r7, #1288
 1544 0fca D3E90023 		ldrd	r2, [r3]
 1545 0fce 80EA0204 		eor	r4, r0, r2
 1546 0fd2 C7F8B040 		str	r4, [r7, #176]
 1547 0fd6 4B40     		eors	r3, r3, r1
 1548 0fd8 C7F8B430 		str	r3, [r7, #180]
 1549 0fdc D7E92C34 		ldrd	r3, [r7, #176]
 1550 0fe0 07F58B62 		add	r2, r7, #1112
 1551 0fe4 C2E90034 		strd	r3, [r2]
 210:aes256ctr.c   **** 	t54 = z6 ^ z7;
 1552              		.loc 1 210 6
 1553 0fe8 07F59E63 		add	r3, r7, #1264
 1554 0fec D3E90001 		ldrd	r0, [r3]
 1555 0ff0 07F59D63 		add	r3, r7, #1256
 1556 0ff4 D3E90023 		ldrd	r2, [r3]
 1557 0ff8 80EA0204 		eor	r4, r0, r2
 1558 0ffc C7F8A840 		str	r4, [r7, #168]
 1559 1000 4B40     		eors	r3, r3, r1
 1560 1002 C7F8AC30 		str	r3, [r7, #172]
 1561 1006 D7E92A34 		ldrd	r3, [r7, #168]
 1562 100a 07F58A62 		add	r2, r7, #1104
 1563 100e C2E90034 		strd	r3, [r2]
 211:aes256ctr.c   **** 	t55 = z16 ^ z17;
 1564              		.loc 1 211 6
 1565 1012 07F59463 		add	r3, r7, #1184
 1566 1016 D3E90001 		ldrd	r0, [r3]
 1567 101a 07F59363 		add	r3, r7, #1176
 1568 101e D3E90023 		ldrd	r2, [r3]
 1569 1022 80EA0204 		eor	r4, r0, r2
 1570 1026 C7F8A040 		str	r4, [r7, #160]
 1571 102a 4B40     		eors	r3, r3, r1
 1572 102c C7F8A430 		str	r3, [r7, #164]
 1573 1030 D7E92834 		ldrd	r3, [r7, #160]
 1574 1034 07F58962 		add	r2, r7, #1096
 1575 1038 C2E90034 		strd	r3, [r2]
 212:aes256ctr.c   **** 	t56 = z12 ^ t48;
 1576              		.loc 1 212 6
 1577 103c 07F59863 		add	r3, r7, #1216
 1578 1040 D3E90001 		ldrd	r0, [r3]
 1579 1044 07F59063 		add	r3, r7, #1152
 1580 1048 D3E90023 		ldrd	r2, [r3]
 1581 104c 80EA0204 		eor	r4, r0, r2
 1582 1050 C7F89840 		str	r4, [r7, #152]
 1583 1054 4B40     		eors	r3, r3, r1
 1584 1056 C7F89C30 		str	r3, [r7, #156]
 1585 105a D7E92634 		ldrd	r3, [r7, #152]
 1586 105e 07F58862 		add	r2, r7, #1088
 1587 1062 C2E90034 		strd	r3, [r2]
 213:aes256ctr.c   **** 	t57 = t50 ^ t53;
 1588              		.loc 1 213 6
 1589 1066 07F58E63 		add	r3, r7, #1136
 1590 106a D3E90001 		ldrd	r0, [r3]
 1591 106e 07F58B63 		add	r3, r7, #1112
 1592 1072 D3E90023 		ldrd	r2, [r3]
 1593 1076 80EA0204 		eor	r4, r0, r2
 1594 107a C7F89040 		str	r4, [r7, #144]
 1595 107e 4B40     		eors	r3, r3, r1
 1596 1080 C7F89430 		str	r3, [r7, #148]
 1597 1084 D7E92434 		ldrd	r3, [r7, #144]
 1598 1088 07F58762 		add	r2, r7, #1080
 1599 108c C2E90034 		strd	r3, [r2]
 214:aes256ctr.c   **** 	t58 = z4 ^ t46;
 1600              		.loc 1 214 6
 1601 1090 07F5A063 		add	r3, r7, #1280
 1602 1094 D3E90001 		ldrd	r0, [r3]
 1603 1098 07F59263 		add	r3, r7, #1168
 1604 109c D3E90023 		ldrd	r2, [r3]
 1605 10a0 80EA0204 		eor	r4, r0, r2
 1606 10a4 C7F88840 		str	r4, [r7, #136]
 1607 10a8 4B40     		eors	r3, r3, r1
 1608 10aa C7F88C30 		str	r3, [r7, #140]
 1609 10ae D7E92234 		ldrd	r3, [r7, #136]
 1610 10b2 07F58662 		add	r2, r7, #1072
 1611 10b6 C2E90034 		strd	r3, [r2]
 215:aes256ctr.c   **** 	t59 = z3 ^ t54;
 1612              		.loc 1 215 6
 1613 10ba 07F5A163 		add	r3, r7, #1288
 1614 10be D3E90001 		ldrd	r0, [r3]
 1615 10c2 07F58A63 		add	r3, r7, #1104
 1616 10c6 D3E90023 		ldrd	r2, [r3]
 1617 10ca 80EA0204 		eor	r4, r0, r2
 1618 10ce C7F88040 		str	r4, [r7, #128]
 1619 10d2 4B40     		eors	r3, r3, r1
 1620 10d4 C7F88430 		str	r3, [r7, #132]
 1621 10d8 D7E92034 		ldrd	r3, [r7, #128]
 1622 10dc 07F58562 		add	r2, r7, #1064
 1623 10e0 C2E90034 		strd	r3, [r2]
 216:aes256ctr.c   **** 	t60 = t46 ^ t57;
 1624              		.loc 1 216 6
 1625 10e4 07F59263 		add	r3, r7, #1168
 1626 10e8 D3E90001 		ldrd	r0, [r3]
 1627 10ec 07F58763 		add	r3, r7, #1080
 1628 10f0 D3E90023 		ldrd	r2, [r3]
 1629 10f4 80EA0204 		eor	r4, r0, r2
 1630 10f8 BC67     		str	r4, [r7, #120]
 1631 10fa 4B40     		eors	r3, r3, r1
 1632 10fc FB67     		str	r3, [r7, #124]
 1633 10fe D7E91E34 		ldrd	r3, [r7, #120]
 1634 1102 07F58462 		add	r2, r7, #1056
 1635 1106 C2E90034 		strd	r3, [r2]
 217:aes256ctr.c   **** 	t61 = z14 ^ t57;
 1636              		.loc 1 217 6
 1637 110a 07F59663 		add	r3, r7, #1200
 1638 110e D3E90001 		ldrd	r0, [r3]
 1639 1112 07F58763 		add	r3, r7, #1080
 1640 1116 D3E90023 		ldrd	r2, [r3]
 1641 111a 80EA0204 		eor	r4, r0, r2
 1642 111e 3C67     		str	r4, [r7, #112]
 1643 1120 4B40     		eors	r3, r3, r1
 1644 1122 7B67     		str	r3, [r7, #116]
 1645 1124 D7E91C34 		ldrd	r3, [r7, #112]
 1646 1128 07F58362 		add	r2, r7, #1048
 1647 112c C2E90034 		strd	r3, [r2]
 218:aes256ctr.c   **** 	t62 = t52 ^ t58;
 1648              		.loc 1 218 6
 1649 1130 07F58C63 		add	r3, r7, #1120
 1650 1134 D3E90001 		ldrd	r0, [r3]
 1651 1138 07F58663 		add	r3, r7, #1072
 1652 113c D3E90023 		ldrd	r2, [r3]
 1653 1140 80EA0204 		eor	r4, r0, r2
 1654 1144 BC66     		str	r4, [r7, #104]
 1655 1146 4B40     		eors	r3, r3, r1
 1656 1148 FB66     		str	r3, [r7, #108]
 1657 114a D7E91A34 		ldrd	r3, [r7, #104]
 1658 114e 07F58262 		add	r2, r7, #1040
 1659 1152 C2E90034 		strd	r3, [r2]
 219:aes256ctr.c   **** 	t63 = t49 ^ t58;
 1660              		.loc 1 219 6
 1661 1156 07F58F63 		add	r3, r7, #1144
 1662 115a D3E90001 		ldrd	r0, [r3]
 1663 115e 07F58663 		add	r3, r7, #1072
 1664 1162 D3E90023 		ldrd	r2, [r3]
 1665 1166 80EA0204 		eor	r4, r0, r2
 1666 116a 3C66     		str	r4, [r7, #96]
 1667 116c 4B40     		eors	r3, r3, r1
 1668 116e 7B66     		str	r3, [r7, #100]
 1669 1170 D7E91834 		ldrd	r3, [r7, #96]
 1670 1174 07F58162 		add	r2, r7, #1032
 1671 1178 C2E90034 		strd	r3, [r2]
 220:aes256ctr.c   **** 	t64 = z4 ^ t59;
 1672              		.loc 1 220 6
 1673 117c 07F5A063 		add	r3, r7, #1280
 1674 1180 D3E90001 		ldrd	r0, [r3]
 1675 1184 07F58563 		add	r3, r7, #1064
 1676 1188 D3E90023 		ldrd	r2, [r3]
 1677 118c 80EA0204 		eor	r4, r0, r2
 1678 1190 BC65     		str	r4, [r7, #88]
 1679 1192 4B40     		eors	r3, r3, r1
 1680 1194 FB65     		str	r3, [r7, #92]
 1681 1196 D7E91634 		ldrd	r3, [r7, #88]
 1682 119a 07F58062 		add	r2, r7, #1024
 1683 119e C2E90034 		strd	r3, [r2]
 221:aes256ctr.c   **** 	t65 = t61 ^ t62;
 1684              		.loc 1 221 6
 1685 11a2 07F58363 		add	r3, r7, #1048
 1686 11a6 D3E90001 		ldrd	r0, [r3]
 1687 11aa 07F58263 		add	r3, r7, #1040
 1688 11ae D3E90023 		ldrd	r2, [r3]
 1689 11b2 80EA0204 		eor	r4, r0, r2
 1690 11b6 3C65     		str	r4, [r7, #80]
 1691 11b8 4B40     		eors	r3, r3, r1
 1692 11ba 7B65     		str	r3, [r7, #84]
 1693 11bc D7E91434 		ldrd	r3, [r7, #80]
 1694 11c0 C7E9FE34 		strd	r3, [r7, #1016]
 222:aes256ctr.c   **** 	t66 = z1 ^ t63;
 1695              		.loc 1 222 6
 1696 11c4 07F5A363 		add	r3, r7, #1304
 1697 11c8 D3E90001 		ldrd	r0, [r3]
 1698 11cc 07F58163 		add	r3, r7, #1032
 1699 11d0 D3E90023 		ldrd	r2, [r3]
 1700 11d4 80EA0204 		eor	r4, r0, r2
 1701 11d8 BC64     		str	r4, [r7, #72]
 1702 11da 4B40     		eors	r3, r3, r1
 1703 11dc FB64     		str	r3, [r7, #76]
 1704 11de D7E91234 		ldrd	r3, [r7, #72]
 1705 11e2 C7E9FC34 		strd	r3, [r7, #1008]
 223:aes256ctr.c   **** 	s0 = t59 ^ t63;
 1706              		.loc 1 223 5
 1707 11e6 07F58563 		add	r3, r7, #1064
 1708 11ea D3E90001 		ldrd	r0, [r3]
 1709 11ee 07F58163 		add	r3, r7, #1032
 1710 11f2 D3E90023 		ldrd	r2, [r3]
 1711 11f6 80EA0204 		eor	r4, r0, r2
 1712 11fa 3C64     		str	r4, [r7, #64]
 1713 11fc 4B40     		eors	r3, r3, r1
 1714 11fe 7B64     		str	r3, [r7, #68]
 1715 1200 D7E91034 		ldrd	r3, [r7, #64]
 1716 1204 C7E9FA34 		strd	r3, [r7, #1000]
 224:aes256ctr.c   **** 	s6 = t56 ^ ~t62;
 1717              		.loc 1 224 11
 1718 1208 07F58263 		add	r3, r7, #1040
 1719 120c D3E90001 		ldrd	r0, [r3]
 1720 1210 07F58863 		add	r3, r7, #1088
 1721 1214 D3E90023 		ldrd	r2, [r3]
 1722 1218 80EA0204 		eor	r4, r0, r2
 1723 121c C7F89843 		str	r4, [r7, #920]
 1724 1220 4B40     		eors	r3, r3, r1
 1725 1222 C7F89C33 		str	r3, [r7, #924]
 1726              		.loc 1 224 5
 1727 1226 D7E9E612 		ldrd	r1, [r7, #920]
 1728 122a 0B46     		mov	r3, r1
 1729 122c DB43     		mvns	r3, r3
 1730 122e BB63     		str	r3, [r7, #56]
 1731 1230 1346     		mov	r3, r2
 1732 1232 DB43     		mvns	r3, r3
 1733 1234 FB63     		str	r3, [r7, #60]
 1734 1236 D7E90E34 		ldrd	r3, [r7, #56]
 1735 123a C7E9F834 		strd	r3, [r7, #992]
 225:aes256ctr.c   **** 	s7 = t48 ^ ~t60;
 1736              		.loc 1 225 11
 1737 123e 07F58463 		add	r3, r7, #1056
 1738 1242 D3E90001 		ldrd	r0, [r3]
 1739 1246 07F59063 		add	r3, r7, #1152
 1740 124a D3E90023 		ldrd	r2, [r3]
 1741 124e 80EA0204 		eor	r4, r0, r2
 1742 1252 C7F89043 		str	r4, [r7, #912]
 1743 1256 4B40     		eors	r3, r3, r1
 1744 1258 C7F89433 		str	r3, [r7, #916]
 1745              		.loc 1 225 5
 1746 125c D7E9E412 		ldrd	r1, [r7, #912]
 1747 1260 0B46     		mov	r3, r1
 1748 1262 DB43     		mvns	r3, r3
 1749 1264 3B63     		str	r3, [r7, #48]
 1750 1266 1346     		mov	r3, r2
 1751 1268 DB43     		mvns	r3, r3
 1752 126a 7B63     		str	r3, [r7, #52]
 1753 126c D7E90C34 		ldrd	r3, [r7, #48]
 1754 1270 C7E9F634 		strd	r3, [r7, #984]
 226:aes256ctr.c   **** 	t67 = t64 ^ t65;
 1755              		.loc 1 226 6
 1756 1274 07F58063 		add	r3, r7, #1024
 1757 1278 D3E90001 		ldrd	r0, [r3]
 1758 127c D7E9FE23 		ldrd	r2, [r7, #1016]
 1759 1280 80EA0204 		eor	r4, r0, r2
 1760 1284 BC62     		str	r4, [r7, #40]
 1761 1286 4B40     		eors	r3, r3, r1
 1762 1288 FB62     		str	r3, [r7, #44]
 1763 128a D7E90A34 		ldrd	r3, [r7, #40]
 1764 128e C7E9F434 		strd	r3, [r7, #976]
 227:aes256ctr.c   **** 	s3 = t53 ^ t66;
 1765              		.loc 1 227 5
 1766 1292 07F58B63 		add	r3, r7, #1112
 1767 1296 D3E90001 		ldrd	r0, [r3]
 1768 129a D7E9FC23 		ldrd	r2, [r7, #1008]
 1769 129e 80EA0204 		eor	r4, r0, r2
 1770 12a2 3C62     		str	r4, [r7, #32]
 1771 12a4 4B40     		eors	r3, r3, r1
 1772 12a6 7B62     		str	r3, [r7, #36]
 1773 12a8 D7E90834 		ldrd	r3, [r7, #32]
 1774 12ac C7E9F234 		strd	r3, [r7, #968]
 228:aes256ctr.c   **** 	s4 = t51 ^ t66;
 1775              		.loc 1 228 5
 1776 12b0 07F58D63 		add	r3, r7, #1128
 1777 12b4 D3E90001 		ldrd	r0, [r3]
 1778 12b8 D7E9FC23 		ldrd	r2, [r7, #1008]
 1779 12bc 80EA0204 		eor	r4, r0, r2
 1780 12c0 BC61     		str	r4, [r7, #24]
 1781 12c2 4B40     		eors	r3, r3, r1
 1782 12c4 FB61     		str	r3, [r7, #28]
 1783 12c6 D7E90634 		ldrd	r3, [r7, #24]
 1784 12ca C7E9F034 		strd	r3, [r7, #960]
 229:aes256ctr.c   **** 	s5 = t47 ^ t65;
 1785              		.loc 1 229 5
 1786 12ce 07F59163 		add	r3, r7, #1160
 1787 12d2 D3E90001 		ldrd	r0, [r3]
 1788 12d6 D7E9FE23 		ldrd	r2, [r7, #1016]
 1789 12da 80EA0204 		eor	r4, r0, r2
 1790 12de 3C61     		str	r4, [r7, #16]
 1791 12e0 4B40     		eors	r3, r3, r1
 1792 12e2 7B61     		str	r3, [r7, #20]
 1793 12e4 D7E90434 		ldrd	r3, [r7, #16]
 1794 12e8 C7E9EE34 		strd	r3, [r7, #952]
 230:aes256ctr.c   **** 	s1 = t64 ^ ~s3;
 1795              		.loc 1 230 11
 1796 12ec D7E9F201 		ldrd	r0, [r7, #968]
 1797 12f0 07F58063 		add	r3, r7, #1024
 1798 12f4 D3E90023 		ldrd	r2, [r3]
 1799 12f8 80EA0204 		eor	r4, r0, r2
 1800 12fc C7F88843 		str	r4, [r7, #904]
 1801 1300 4B40     		eors	r3, r3, r1
 1802 1302 C7F88C33 		str	r3, [r7, #908]
 1803              		.loc 1 230 5
 1804 1306 D7E9E212 		ldrd	r1, [r7, #904]
 1805 130a 0B46     		mov	r3, r1
 1806 130c DB43     		mvns	r3, r3
 1807 130e BB60     		str	r3, [r7, #8]
 1808 1310 1346     		mov	r3, r2
 1809 1312 DB43     		mvns	r3, r3
 1810 1314 FB60     		str	r3, [r7, #12]
 1811 1316 D7E90234 		ldrd	r3, [r7, #8]
 1812 131a C7E9EC34 		strd	r3, [r7, #944]
 231:aes256ctr.c   **** 	s2 = t55 ^ ~t67;
 1813              		.loc 1 231 11
 1814 131e D7E9F401 		ldrd	r0, [r7, #976]
 1815 1322 07F58963 		add	r3, r7, #1096
 1816 1326 D3E90023 		ldrd	r2, [r3]
 1817 132a 80EA0204 		eor	r4, r0, r2
 1818 132e C7F88043 		str	r4, [r7, #896]
 1819 1332 4B40     		eors	r3, r3, r1
 1820 1334 C7F88433 		str	r3, [r7, #900]
 1821              		.loc 1 231 5
 1822 1338 D7E9E012 		ldrd	r1, [r7, #896]
 1823 133c 0B46     		mov	r3, r1
 1824 133e DB43     		mvns	r3, r3
 1825 1340 3B60     		str	r3, [r7]
 1826 1342 1346     		mov	r3, r2
 1827 1344 DB43     		mvns	r3, r3
 1828 1346 7B60     		str	r3, [r7, #4]
 1829 1348 D7E90034 		ldrd	r3, [r7]
 1830 134c C7E9EA34 		strd	r3, [r7, #936]
 232:aes256ctr.c   **** 
 233:aes256ctr.c   **** 	q[7] = s0;
 1831              		.loc 1 233 3
 1832 1350 07F5F063 		add	r3, r7, #1920
 1833 1354 A3F57773 		sub	r3, r3, #988
 1834 1358 1B68     		ldr	r3, [r3]
 1835 135a 03F13801 		add	r1, r3, #56
 1836              		.loc 1 233 7
 1837 135e D7E9FA23 		ldrd	r2, [r7, #1000]
 1838 1362 C1E90023 		strd	r2, [r1]
 234:aes256ctr.c   **** 	q[6] = s1;
 1839              		.loc 1 234 3
 1840 1366 07F5F063 		add	r3, r7, #1920
 1841 136a A3F57773 		sub	r3, r3, #988
 1842 136e 1B68     		ldr	r3, [r3]
 1843 1370 03F13001 		add	r1, r3, #48
 1844              		.loc 1 234 7
 1845 1374 D7E9EC23 		ldrd	r2, [r7, #944]
 1846 1378 C1E90023 		strd	r2, [r1]
 235:aes256ctr.c   **** 	q[5] = s2;
 1847              		.loc 1 235 3
 1848 137c 07F5F063 		add	r3, r7, #1920
 1849 1380 A3F57773 		sub	r3, r3, #988
 1850 1384 1B68     		ldr	r3, [r3]
 1851 1386 03F12801 		add	r1, r3, #40
 1852              		.loc 1 235 7
 1853 138a D7E9EA23 		ldrd	r2, [r7, #936]
 1854 138e C1E90023 		strd	r2, [r1]
 236:aes256ctr.c   **** 	q[4] = s3;
 1855              		.loc 1 236 3
 1856 1392 07F5F063 		add	r3, r7, #1920
 1857 1396 A3F57773 		sub	r3, r3, #988
 1858 139a 1B68     		ldr	r3, [r3]
 1859 139c 03F12001 		add	r1, r3, #32
 1860              		.loc 1 236 7
 1861 13a0 D7E9F223 		ldrd	r2, [r7, #968]
 1862 13a4 C1E90023 		strd	r2, [r1]
 237:aes256ctr.c   **** 	q[3] = s4;
 1863              		.loc 1 237 3
 1864 13a8 07F5F063 		add	r3, r7, #1920
 1865 13ac A3F57773 		sub	r3, r3, #988
 1866 13b0 1B68     		ldr	r3, [r3]
 1867 13b2 03F11801 		add	r1, r3, #24
 1868              		.loc 1 237 7
 1869 13b6 D7E9F023 		ldrd	r2, [r7, #960]
 1870 13ba C1E90023 		strd	r2, [r1]
 238:aes256ctr.c   **** 	q[2] = s5;
 1871              		.loc 1 238 3
 1872 13be 07F5F063 		add	r3, r7, #1920
 1873 13c2 A3F57773 		sub	r3, r3, #988
 1874 13c6 1B68     		ldr	r3, [r3]
 1875 13c8 03F11001 		add	r1, r3, #16
 1876              		.loc 1 238 7
 1877 13cc D7E9EE23 		ldrd	r2, [r7, #952]
 1878 13d0 C1E90023 		strd	r2, [r1]
 239:aes256ctr.c   **** 	q[1] = s6;
 1879              		.loc 1 239 3
 1880 13d4 07F5F063 		add	r3, r7, #1920
 1881 13d8 A3F57773 		sub	r3, r3, #988
 1882 13dc 1B68     		ldr	r3, [r3]
 1883 13de 03F10801 		add	r1, r3, #8
 1884              		.loc 1 239 7
 1885 13e2 D7E9F823 		ldrd	r2, [r7, #992]
 1886 13e6 C1E90023 		strd	r2, [r1]
 240:aes256ctr.c   **** 	q[0] = s7;
 1887              		.loc 1 240 7
 1888 13ea 07F5F063 		add	r3, r7, #1920
 1889 13ee A3F57773 		sub	r3, r3, #988
 1890 13f2 1968     		ldr	r1, [r3]
 1891 13f4 D7E9F623 		ldrd	r2, [r7, #984]
 1892 13f8 C1E90023 		strd	r2, [r1]
 241:aes256ctr.c   **** }
 1893              		.loc 1 241 1
 1894 13fc 00BF     		nop
 1895 13fe 07F28477 		addw	r7, r7, #1924
 1896              	.LCFI31:
 1897              		.cfi_def_cfa_offset 28
 1898 1402 BD46     		mov	sp, r7
 1899              	.LCFI32:
 1900              		.cfi_def_cfa_register 13
 1901              		@ sp needed
 1902 1404 BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 1903              	.LCFI33:
 1904              		.cfi_restore 11
 1905              		.cfi_restore 10
 1906              		.cfi_restore 9
 1907              		.cfi_restore 8
 1908              		.cfi_restore 7
 1909              		.cfi_restore 5
 1910              		.cfi_restore 4
 1911              		.cfi_def_cfa_offset 0
 1912 1408 7047     		bx	lr
 1913              		.cfi_endproc
 1914              	.LFE5:
 1916              		.section	.text.br_aes_ct64_ortho,"ax",%progbits
 1917              		.align	1
 1918              		.syntax unified
 1919              		.thumb
 1920              		.thumb_func
 1921              		.fpu softvfp
 1923              	br_aes_ct64_ortho:
 1924              	.LFB6:
 242:aes256ctr.c   **** 
 243:aes256ctr.c   **** static void br_aes_ct64_ortho(uint64_t *q)
 244:aes256ctr.c   **** {
 1925              		.loc 1 244 1
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 784
 1928              		@ frame_needed = 1, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
 1930 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 1931              	.LCFI34:
 1932              		.cfi_def_cfa_offset 28
 1933              		.cfi_offset 4, -28
 1934              		.cfi_offset 5, -24
 1935              		.cfi_offset 7, -20
 1936              		.cfi_offset 8, -16
 1937              		.cfi_offset 9, -12
 1938              		.cfi_offset 10, -8
 1939              		.cfi_offset 11, -4
 1940 0004 ADF5457D 		sub	sp, sp, #788
 1941              	.LCFI35:
 1942              		.cfi_def_cfa_offset 816
 1943 0008 00AF     		add	r7, sp, #0
 1944              	.LCFI36:
 1945              		.cfi_def_cfa_register 7
 1946 000a C7F84C02 		str	r0, [r7, #588]
 1947              	.LBB2:
 245:aes256ctr.c   **** #define SWAPN(cl, ch, s, x, y)   do { \
 246:aes256ctr.c   **** 		uint64_t a, b; \
 247:aes256ctr.c   **** 		a = (x); \
 248:aes256ctr.c   **** 		b = (y); \
 249:aes256ctr.c   **** 		(x) = (a & (uint64_t)cl) | ((b & (uint64_t)cl) << (s)); \
 250:aes256ctr.c   **** 		(y) = ((a & (uint64_t)ch) >> (s)) | (b & (uint64_t)ch); \
 251:aes256ctr.c   **** 	} while (0)
 252:aes256ctr.c   **** 
 253:aes256ctr.c   **** #define SWAP2(x, y)    SWAPN(0x5555555555555555, 0xAAAAAAAAAAAAAAAA,  1, x, y)
 254:aes256ctr.c   **** #define SWAP4(x, y)    SWAPN(0x3333333333333333, 0xCCCCCCCCCCCCCCCC,  2, x, y)
 255:aes256ctr.c   **** #define SWAP8(x, y)    SWAPN(0x0F0F0F0F0F0F0F0F, 0xF0F0F0F0F0F0F0F0,  4, x, y)
 256:aes256ctr.c   **** 
 257:aes256ctr.c   **** 	SWAP2(q[0], q[1]);
 1948              		.loc 1 257 2
 1949 000e D7F84C32 		ldr	r3, [r7, #588]
 1950 0012 D3E90023 		ldrd	r2, [r3]
 1951 0016 C7E9C223 		strd	r2, [r7, #776]
 1952 001a D7F84C32 		ldr	r3, [r7, #588]
 1953 001e D3E90223 		ldrd	r2, [r3, #8]
 1954 0022 C7E9C023 		strd	r2, [r7, #768]
 1955 0026 D7E9C223 		ldrd	r2, [r7, #776]
 1956 002a 02F05538 		and	r8, r2, #1431655765
 1957 002e 03F05539 		and	r9, r3, #1431655765
 1958 0032 D7E9C023 		ldrd	r2, [r7, #768]
 1959 0036 9118     		adds	r1, r2, r2
 1960 0038 B961     		str	r1, [r7, #24]
 1961 003a 5B41     		adcs	r3, r3, r3
 1962 003c FB61     		str	r3, [r7, #28]
 1963 003e D7E90623 		ldrd	r2, [r7, #24]
 1964 0042 02F0AA34 		and	r4, r2, #-1431655766
 1965 0046 03F0AA35 		and	r5, r3, #-1431655766
 1966 004a 48EA0403 		orr	r3, r8, r4
 1967 004e C7F84032 		str	r3, [r7, #576]
 1968 0052 49EA0503 		orr	r3, r9, r5
 1969 0056 C7F84432 		str	r3, [r7, #580]
 1970 005a D7F84C32 		ldr	r3, [r7, #588]
 1971 005e D7E99012 		ldrd	r1, [r7, #576]
 1972 0062 C3E90012 		strd	r1, [r3]
 1973 0066 D7E9C223 		ldrd	r2, [r7, #776]
 1974 006a 4FF00000 		mov	r0, #0
 1975 006e 4FF00001 		mov	r1, #0
 1976 0072 5008     		lsrs	r0, r2, #1
 1977 0074 40EAC370 		orr	r0, r0, r3, lsl #31
 1978 0078 5908     		lsrs	r1, r3, #1
 1979 007a 00F05533 		and	r3, r0, #1431655765
 1980 007e C7F83832 		str	r3, [r7, #568]
 1981 0082 01F05533 		and	r3, r1, #1431655765
 1982 0086 C7F83C32 		str	r3, [r7, #572]
 1983 008a D7E9C023 		ldrd	r2, [r7, #768]
 1984 008e 02F0AA3A 		and	r10, r2, #-1431655766
 1985 0092 03F0AA3B 		and	fp, r3, #-1431655766
 1986 0096 D7F84C32 		ldr	r3, [r7, #588]
 1987 009a 0833     		adds	r3, r3, #8
 1988 009c D7E98E12 		ldrd	r1, [r7, #568]
 1989 00a0 0846     		mov	r0, r1
 1990 00a2 40EA0A00 		orr	r0, r0, r10
 1991 00a6 C7F83002 		str	r0, [r7, #560]
 1992 00aa 42EA0B02 		orr	r2, r2, fp
 1993 00ae C7F83422 		str	r2, [r7, #564]
 1994 00b2 D7E98C12 		ldrd	r1, [r7, #560]
 1995 00b6 C3E90012 		strd	r1, [r3]
 1996              	.LBE2:
 1997              	.LBB3:
 258:aes256ctr.c   **** 	SWAP2(q[2], q[3]);
 1998              		.loc 1 258 2
 1999 00ba D7F84C32 		ldr	r3, [r7, #588]
 2000 00be D3E90423 		ldrd	r2, [r3, #16]
 2001 00c2 C7E9BE23 		strd	r2, [r7, #760]
 2002 00c6 D7F84C32 		ldr	r3, [r7, #588]
 2003 00ca D3E90623 		ldrd	r2, [r3, #24]
 2004 00ce C7E9BC23 		strd	r2, [r7, #752]
 2005 00d2 D7E9BE23 		ldrd	r2, [r7, #760]
 2006 00d6 02F05531 		and	r1, r2, #1431655765
 2007 00da C7F82812 		str	r1, [r7, #552]
 2008 00de 03F05533 		and	r3, r3, #1431655765
 2009 00e2 C7F82C32 		str	r3, [r7, #556]
 2010 00e6 D7E9BC23 		ldrd	r2, [r7, #752]
 2011 00ea 9118     		adds	r1, r2, r2
 2012 00ec 3961     		str	r1, [r7, #16]
 2013 00ee 5B41     		adcs	r3, r3, r3
 2014 00f0 7B61     		str	r3, [r7, #20]
 2015 00f2 D7E90423 		ldrd	r2, [r7, #16]
 2016 00f6 02F0AA31 		and	r1, r2, #-1431655766
 2017 00fa C7F82012 		str	r1, [r7, #544]
 2018 00fe 03F0AA33 		and	r3, r3, #-1431655766
 2019 0102 C7F82432 		str	r3, [r7, #548]
 2020 0106 D7F84C32 		ldr	r3, [r7, #588]
 2021 010a 1033     		adds	r3, r3, #16
 2022 010c D7E98A45 		ldrd	r4, [r7, #552]
 2023 0110 2246     		mov	r2, r4
 2024 0112 D7E98801 		ldrd	r0, [r7, #544]
 2025 0116 8446     		mov	ip, r0
 2026 0118 42EA0C02 		orr	r2, r2, ip
 2027 011c C7F81822 		str	r2, [r7, #536]
 2028 0120 2A46     		mov	r2, r5
 2029 0122 0A43     		orrs	r2, r2, r1
 2030 0124 C7F81C22 		str	r2, [r7, #540]
 2031 0128 D7E98612 		ldrd	r1, [r7, #536]
 2032 012c C3E90012 		strd	r1, [r3]
 2033 0130 D7E9BE23 		ldrd	r2, [r7, #760]
 2034 0134 4FF00000 		mov	r0, #0
 2035 0138 4FF00001 		mov	r1, #0
 2036 013c 5008     		lsrs	r0, r2, #1
 2037 013e 40EAC370 		orr	r0, r0, r3, lsl #31
 2038 0142 5908     		lsrs	r1, r3, #1
 2039 0144 00F05533 		and	r3, r0, #1431655765
 2040 0148 C7F81032 		str	r3, [r7, #528]
 2041 014c 01F05533 		and	r3, r1, #1431655765
 2042 0150 C7F81432 		str	r3, [r7, #532]
 2043 0154 D7E9BC23 		ldrd	r2, [r7, #752]
 2044 0158 02F0AA31 		and	r1, r2, #-1431655766
 2045 015c C7F80812 		str	r1, [r7, #520]
 2046 0160 03F0AA33 		and	r3, r3, #-1431655766
 2047 0164 C7F80C32 		str	r3, [r7, #524]
 2048 0168 D7F84C32 		ldr	r3, [r7, #588]
 2049 016c 1833     		adds	r3, r3, #24
 2050 016e D7E98445 		ldrd	r4, [r7, #528]
 2051 0172 2246     		mov	r2, r4
 2052 0174 D7E98201 		ldrd	r0, [r7, #520]
 2053 0178 8446     		mov	ip, r0
 2054 017a 42EA0C02 		orr	r2, r2, ip
 2055 017e C7F80022 		str	r2, [r7, #512]
 2056 0182 2A46     		mov	r2, r5
 2057 0184 0A43     		orrs	r2, r2, r1
 2058 0186 C7F80422 		str	r2, [r7, #516]
 2059 018a D7E98012 		ldrd	r1, [r7, #512]
 2060 018e C3E90012 		strd	r1, [r3]
 2061              	.LBE3:
 2062              	.LBB4:
 259:aes256ctr.c   **** 	SWAP2(q[4], q[5]);
 2063              		.loc 1 259 2
 2064 0192 D7F84C32 		ldr	r3, [r7, #588]
 2065 0196 D3E90823 		ldrd	r2, [r3, #32]
 2066 019a C7E9BA23 		strd	r2, [r7, #744]
 2067 019e D7F84C32 		ldr	r3, [r7, #588]
 2068 01a2 D3E90A23 		ldrd	r2, [r3, #40]
 2069 01a6 C7E9B823 		strd	r2, [r7, #736]
 2070 01aa D7E9BA23 		ldrd	r2, [r7, #744]
 2071 01ae 02F05531 		and	r1, r2, #1431655765
 2072 01b2 C7F8F811 		str	r1, [r7, #504]
 2073 01b6 03F05533 		and	r3, r3, #1431655765
 2074 01ba C7F8FC31 		str	r3, [r7, #508]
 2075 01be D7E9B823 		ldrd	r2, [r7, #736]
 2076 01c2 9118     		adds	r1, r2, r2
 2077 01c4 B960     		str	r1, [r7, #8]
 2078 01c6 5B41     		adcs	r3, r3, r3
 2079 01c8 FB60     		str	r3, [r7, #12]
 2080 01ca D7E90223 		ldrd	r2, [r7, #8]
 2081 01ce 02F0AA31 		and	r1, r2, #-1431655766
 2082 01d2 C7F8F011 		str	r1, [r7, #496]
 2083 01d6 03F0AA33 		and	r3, r3, #-1431655766
 2084 01da C7F8F431 		str	r3, [r7, #500]
 2085 01de D7F84C32 		ldr	r3, [r7, #588]
 2086 01e2 2033     		adds	r3, r3, #32
 2087 01e4 D7E97E45 		ldrd	r4, [r7, #504]
 2088 01e8 2246     		mov	r2, r4
 2089 01ea D7E97C01 		ldrd	r0, [r7, #496]
 2090 01ee 8446     		mov	ip, r0
 2091 01f0 42EA0C02 		orr	r2, r2, ip
 2092 01f4 C7F8E821 		str	r2, [r7, #488]
 2093 01f8 2A46     		mov	r2, r5
 2094 01fa 0A43     		orrs	r2, r2, r1
 2095 01fc C7F8EC21 		str	r2, [r7, #492]
 2096 0200 D7E97A12 		ldrd	r1, [r7, #488]
 2097 0204 C3E90012 		strd	r1, [r3]
 2098 0208 D7E9BA23 		ldrd	r2, [r7, #744]
 2099 020c 4FF00000 		mov	r0, #0
 2100 0210 4FF00001 		mov	r1, #0
 2101 0214 5008     		lsrs	r0, r2, #1
 2102 0216 40EAC370 		orr	r0, r0, r3, lsl #31
 2103 021a 5908     		lsrs	r1, r3, #1
 2104 021c 00F05533 		and	r3, r0, #1431655765
 2105 0220 C7F8E031 		str	r3, [r7, #480]
 2106 0224 01F05533 		and	r3, r1, #1431655765
 2107 0228 C7F8E431 		str	r3, [r7, #484]
 2108 022c D7E9B823 		ldrd	r2, [r7, #736]
 2109 0230 02F0AA31 		and	r1, r2, #-1431655766
 2110 0234 C7F8D811 		str	r1, [r7, #472]
 2111 0238 03F0AA33 		and	r3, r3, #-1431655766
 2112 023c C7F8DC31 		str	r3, [r7, #476]
 2113 0240 D7F84C32 		ldr	r3, [r7, #588]
 2114 0244 2833     		adds	r3, r3, #40
 2115 0246 D7E97845 		ldrd	r4, [r7, #480]
 2116 024a 2246     		mov	r2, r4
 2117 024c D7E97601 		ldrd	r0, [r7, #472]
 2118 0250 8446     		mov	ip, r0
 2119 0252 42EA0C02 		orr	r2, r2, ip
 2120 0256 C7F8D021 		str	r2, [r7, #464]
 2121 025a 2A46     		mov	r2, r5
 2122 025c 0A43     		orrs	r2, r2, r1
 2123 025e C7F8D421 		str	r2, [r7, #468]
 2124 0262 D7E97412 		ldrd	r1, [r7, #464]
 2125 0266 C3E90012 		strd	r1, [r3]
 2126              	.LBE4:
 2127              	.LBB5:
 260:aes256ctr.c   **** 	SWAP2(q[6], q[7]);
 2128              		.loc 1 260 2
 2129 026a D7F84C32 		ldr	r3, [r7, #588]
 2130 026e D3E90C23 		ldrd	r2, [r3, #48]
 2131 0272 C7E9B623 		strd	r2, [r7, #728]
 2132 0276 D7F84C32 		ldr	r3, [r7, #588]
 2133 027a D3E90E23 		ldrd	r2, [r3, #56]
 2134 027e C7E9B423 		strd	r2, [r7, #720]
 2135 0282 D7E9B623 		ldrd	r2, [r7, #728]
 2136 0286 02F05531 		and	r1, r2, #1431655765
 2137 028a C7F8C811 		str	r1, [r7, #456]
 2138 028e 03F05533 		and	r3, r3, #1431655765
 2139 0292 C7F8CC31 		str	r3, [r7, #460]
 2140 0296 D7E9B423 		ldrd	r2, [r7, #720]
 2141 029a 9118     		adds	r1, r2, r2
 2142 029c 3960     		str	r1, [r7]
 2143 029e 5B41     		adcs	r3, r3, r3
 2144 02a0 7B60     		str	r3, [r7, #4]
 2145 02a2 D7E90023 		ldrd	r2, [r7]
 2146 02a6 02F0AA31 		and	r1, r2, #-1431655766
 2147 02aa C7F8C011 		str	r1, [r7, #448]
 2148 02ae 03F0AA33 		and	r3, r3, #-1431655766
 2149 02b2 C7F8C431 		str	r3, [r7, #452]
 2150 02b6 D7F84C32 		ldr	r3, [r7, #588]
 2151 02ba 3033     		adds	r3, r3, #48
 2152 02bc D7E97245 		ldrd	r4, [r7, #456]
 2153 02c0 2246     		mov	r2, r4
 2154 02c2 D7E97001 		ldrd	r0, [r7, #448]
 2155 02c6 8446     		mov	ip, r0
 2156 02c8 42EA0C02 		orr	r2, r2, ip
 2157 02cc C7F8B821 		str	r2, [r7, #440]
 2158 02d0 2A46     		mov	r2, r5
 2159 02d2 0A43     		orrs	r2, r2, r1
 2160 02d4 C7F8BC21 		str	r2, [r7, #444]
 2161 02d8 D7E96E12 		ldrd	r1, [r7, #440]
 2162 02dc C3E90012 		strd	r1, [r3]
 2163 02e0 D7E9B623 		ldrd	r2, [r7, #728]
 2164 02e4 4FF00000 		mov	r0, #0
 2165 02e8 4FF00001 		mov	r1, #0
 2166 02ec 5008     		lsrs	r0, r2, #1
 2167 02ee 40EAC370 		orr	r0, r0, r3, lsl #31
 2168 02f2 5908     		lsrs	r1, r3, #1
 2169 02f4 00F05533 		and	r3, r0, #1431655765
 2170 02f8 C7F8B031 		str	r3, [r7, #432]
 2171 02fc 01F05533 		and	r3, r1, #1431655765
 2172 0300 C7F8B431 		str	r3, [r7, #436]
 2173 0304 D7E9B423 		ldrd	r2, [r7, #720]
 2174 0308 02F0AA31 		and	r1, r2, #-1431655766
 2175 030c C7F8A811 		str	r1, [r7, #424]
 2176 0310 03F0AA33 		and	r3, r3, #-1431655766
 2177 0314 C7F8AC31 		str	r3, [r7, #428]
 2178 0318 D7F84C32 		ldr	r3, [r7, #588]
 2179 031c 3833     		adds	r3, r3, #56
 2180 031e D7E96C45 		ldrd	r4, [r7, #432]
 2181 0322 2246     		mov	r2, r4
 2182 0324 D7E96A01 		ldrd	r0, [r7, #424]
 2183 0328 8446     		mov	ip, r0
 2184 032a 42EA0C02 		orr	r2, r2, ip
 2185 032e C7F8A021 		str	r2, [r7, #416]
 2186 0332 2A46     		mov	r2, r5
 2187 0334 0A43     		orrs	r2, r2, r1
 2188 0336 C7F8A421 		str	r2, [r7, #420]
 2189 033a D7E96812 		ldrd	r1, [r7, #416]
 2190 033e C3E90012 		strd	r1, [r3]
 2191              	.LBE5:
 2192              	.LBB6:
 261:aes256ctr.c   **** 
 262:aes256ctr.c   **** 	SWAP4(q[0], q[2]);
 2193              		.loc 1 262 2
 2194 0342 D7F84C32 		ldr	r3, [r7, #588]
 2195 0346 D3E90023 		ldrd	r2, [r3]
 2196 034a C7E9B223 		strd	r2, [r7, #712]
 2197 034e D7F84C32 		ldr	r3, [r7, #588]
 2198 0352 D3E90423 		ldrd	r2, [r3, #16]
 2199 0356 C7E9B023 		strd	r2, [r7, #704]
 2200 035a D7E9B223 		ldrd	r2, [r7, #712]
 2201 035e 02F03331 		and	r1, r2, #858993459
 2202 0362 C7F89811 		str	r1, [r7, #408]
 2203 0366 03F03333 		and	r3, r3, #858993459
 2204 036a C7F89C31 		str	r3, [r7, #412]
 2205 036e D7E9B023 		ldrd	r2, [r7, #704]
 2206 0372 4FF00000 		mov	r0, #0
 2207 0376 4FF00001 		mov	r1, #0
 2208 037a 9900     		lsls	r1, r3, #2
 2209 037c 41EA9271 		orr	r1, r1, r2, lsr #30
 2210 0380 9000     		lsls	r0, r2, #2
 2211 0382 00F0CC33 		and	r3, r0, #-858993460
 2212 0386 C7F89031 		str	r3, [r7, #400]
 2213 038a 01F0CC33 		and	r3, r1, #-858993460
 2214 038e C7F89431 		str	r3, [r7, #404]
 2215 0392 D7E96634 		ldrd	r3, [r7, #408]
 2216 0396 1846     		mov	r0, r3
 2217 0398 D7E96412 		ldrd	r1, [r7, #400]
 2218 039c 0D46     		mov	r5, r1
 2219 039e 2843     		orrs	r0, r0, r5
 2220 03a0 C7F88801 		str	r0, [r7, #392]
 2221 03a4 2346     		mov	r3, r4
 2222 03a6 1343     		orrs	r3, r3, r2
 2223 03a8 C7F88C31 		str	r3, [r7, #396]
 2224 03ac D7F84C32 		ldr	r3, [r7, #588]
 2225 03b0 D7E96212 		ldrd	r1, [r7, #392]
 2226 03b4 C3E90012 		strd	r1, [r3]
 2227 03b8 D7E9B223 		ldrd	r2, [r7, #712]
 2228 03bc 4FF00000 		mov	r0, #0
 2229 03c0 4FF00001 		mov	r1, #0
 2230 03c4 9008     		lsrs	r0, r2, #2
 2231 03c6 40EA8370 		orr	r0, r0, r3, lsl #30
 2232 03ca 9908     		lsrs	r1, r3, #2
 2233 03cc 00F03333 		and	r3, r0, #858993459
 2234 03d0 C7F88031 		str	r3, [r7, #384]
 2235 03d4 01F03333 		and	r3, r1, #858993459
 2236 03d8 C7F88431 		str	r3, [r7, #388]
 2237 03dc D7E9B023 		ldrd	r2, [r7, #704]
 2238 03e0 02F0CC31 		and	r1, r2, #-858993460
 2239 03e4 C7F87811 		str	r1, [r7, #376]
 2240 03e8 03F0CC33 		and	r3, r3, #-858993460
 2241 03ec C7F87C31 		str	r3, [r7, #380]
 2242 03f0 D7F84C32 		ldr	r3, [r7, #588]
 2243 03f4 1033     		adds	r3, r3, #16
 2244 03f6 D7E96045 		ldrd	r4, [r7, #384]
 2245 03fa 2246     		mov	r2, r4
 2246 03fc D7E95E01 		ldrd	r0, [r7, #376]
 2247 0400 8446     		mov	ip, r0
 2248 0402 42EA0C02 		orr	r2, r2, ip
 2249 0406 C7F87021 		str	r2, [r7, #368]
 2250 040a 2A46     		mov	r2, r5
 2251 040c 0A43     		orrs	r2, r2, r1
 2252 040e C7F87421 		str	r2, [r7, #372]
 2253 0412 D7E95C12 		ldrd	r1, [r7, #368]
 2254 0416 C3E90012 		strd	r1, [r3]
 2255              	.LBE6:
 2256              	.LBB7:
 263:aes256ctr.c   **** 	SWAP4(q[1], q[3]);
 2257              		.loc 1 263 2
 2258 041a D7F84C32 		ldr	r3, [r7, #588]
 2259 041e D3E90223 		ldrd	r2, [r3, #8]
 2260 0422 C7E9AE23 		strd	r2, [r7, #696]
 2261 0426 D7F84C32 		ldr	r3, [r7, #588]
 2262 042a D3E90623 		ldrd	r2, [r3, #24]
 2263 042e C7E9AC23 		strd	r2, [r7, #688]
 2264 0432 D7E9AE23 		ldrd	r2, [r7, #696]
 2265 0436 02F03331 		and	r1, r2, #858993459
 2266 043a C7F86811 		str	r1, [r7, #360]
 2267 043e 03F03333 		and	r3, r3, #858993459
 2268 0442 C7F86C31 		str	r3, [r7, #364]
 2269 0446 D7E9AC23 		ldrd	r2, [r7, #688]
 2270 044a 4FF00000 		mov	r0, #0
 2271 044e 4FF00001 		mov	r1, #0
 2272 0452 9900     		lsls	r1, r3, #2
 2273 0454 41EA9271 		orr	r1, r1, r2, lsr #30
 2274 0458 9000     		lsls	r0, r2, #2
 2275 045a 00F0CC33 		and	r3, r0, #-858993460
 2276 045e C7F86031 		str	r3, [r7, #352]
 2277 0462 01F0CC33 		and	r3, r1, #-858993460
 2278 0466 C7F86431 		str	r3, [r7, #356]
 2279 046a D7F84C32 		ldr	r3, [r7, #588]
 2280 046e 0833     		adds	r3, r3, #8
 2281 0470 D7E95A45 		ldrd	r4, [r7, #360]
 2282 0474 2246     		mov	r2, r4
 2283 0476 D7E95801 		ldrd	r0, [r7, #352]
 2284 047a 8446     		mov	ip, r0
 2285 047c 42EA0C02 		orr	r2, r2, ip
 2286 0480 C7F85821 		str	r2, [r7, #344]
 2287 0484 2A46     		mov	r2, r5
 2288 0486 0A43     		orrs	r2, r2, r1
 2289 0488 C7F85C21 		str	r2, [r7, #348]
 2290 048c D7E95612 		ldrd	r1, [r7, #344]
 2291 0490 C3E90012 		strd	r1, [r3]
 2292 0494 D7E9AE23 		ldrd	r2, [r7, #696]
 2293 0498 4FF00000 		mov	r0, #0
 2294 049c 4FF00001 		mov	r1, #0
 2295 04a0 9008     		lsrs	r0, r2, #2
 2296 04a2 40EA8370 		orr	r0, r0, r3, lsl #30
 2297 04a6 9908     		lsrs	r1, r3, #2
 2298 04a8 00F03333 		and	r3, r0, #858993459
 2299 04ac C7F85031 		str	r3, [r7, #336]
 2300 04b0 01F03333 		and	r3, r1, #858993459
 2301 04b4 C7F85431 		str	r3, [r7, #340]
 2302 04b8 D7E9AC23 		ldrd	r2, [r7, #688]
 2303 04bc 02F0CC31 		and	r1, r2, #-858993460
 2304 04c0 C7F84811 		str	r1, [r7, #328]
 2305 04c4 03F0CC33 		and	r3, r3, #-858993460
 2306 04c8 C7F84C31 		str	r3, [r7, #332]
 2307 04cc D7F84C32 		ldr	r3, [r7, #588]
 2308 04d0 1833     		adds	r3, r3, #24
 2309 04d2 D7E95445 		ldrd	r4, [r7, #336]
 2310 04d6 2246     		mov	r2, r4
 2311 04d8 D7E95201 		ldrd	r0, [r7, #328]
 2312 04dc 8446     		mov	ip, r0
 2313 04de 42EA0C02 		orr	r2, r2, ip
 2314 04e2 C7F84021 		str	r2, [r7, #320]
 2315 04e6 2A46     		mov	r2, r5
 2316 04e8 0A43     		orrs	r2, r2, r1
 2317 04ea C7F84421 		str	r2, [r7, #324]
 2318 04ee D7E95012 		ldrd	r1, [r7, #320]
 2319 04f2 C3E90012 		strd	r1, [r3]
 2320              	.LBE7:
 2321              	.LBB8:
 264:aes256ctr.c   **** 	SWAP4(q[4], q[6]);
 2322              		.loc 1 264 2
 2323 04f6 D7F84C32 		ldr	r3, [r7, #588]
 2324 04fa D3E90823 		ldrd	r2, [r3, #32]
 2325 04fe C7E9AA23 		strd	r2, [r7, #680]
 2326 0502 D7F84C32 		ldr	r3, [r7, #588]
 2327 0506 D3E90C23 		ldrd	r2, [r3, #48]
 2328 050a C7E9A823 		strd	r2, [r7, #672]
 2329 050e D7E9AA23 		ldrd	r2, [r7, #680]
 2330 0512 02F03331 		and	r1, r2, #858993459
 2331 0516 C7F83811 		str	r1, [r7, #312]
 2332 051a 03F03333 		and	r3, r3, #858993459
 2333 051e C7F83C31 		str	r3, [r7, #316]
 2334 0522 D7E9A823 		ldrd	r2, [r7, #672]
 2335 0526 4FF00000 		mov	r0, #0
 2336 052a 4FF00001 		mov	r1, #0
 2337 052e 9900     		lsls	r1, r3, #2
 2338 0530 41EA9271 		orr	r1, r1, r2, lsr #30
 2339 0534 9000     		lsls	r0, r2, #2
 2340 0536 00F0CC33 		and	r3, r0, #-858993460
 2341 053a C7F83031 		str	r3, [r7, #304]
 2342 053e 01F0CC33 		and	r3, r1, #-858993460
 2343 0542 C7F83431 		str	r3, [r7, #308]
 2344 0546 D7F84C32 		ldr	r3, [r7, #588]
 2345 054a 2033     		adds	r3, r3, #32
 2346 054c D7E94E45 		ldrd	r4, [r7, #312]
 2347 0550 2246     		mov	r2, r4
 2348 0552 D7E94C01 		ldrd	r0, [r7, #304]
 2349 0556 8446     		mov	ip, r0
 2350 0558 42EA0C02 		orr	r2, r2, ip
 2351 055c C7F82821 		str	r2, [r7, #296]
 2352 0560 2A46     		mov	r2, r5
 2353 0562 0A43     		orrs	r2, r2, r1
 2354 0564 C7F82C21 		str	r2, [r7, #300]
 2355 0568 D7E94A12 		ldrd	r1, [r7, #296]
 2356 056c C3E90012 		strd	r1, [r3]
 2357 0570 D7E9AA23 		ldrd	r2, [r7, #680]
 2358 0574 4FF00000 		mov	r0, #0
 2359 0578 4FF00001 		mov	r1, #0
 2360 057c 9008     		lsrs	r0, r2, #2
 2361 057e 40EA8370 		orr	r0, r0, r3, lsl #30
 2362 0582 9908     		lsrs	r1, r3, #2
 2363 0584 00F03333 		and	r3, r0, #858993459
 2364 0588 C7F82031 		str	r3, [r7, #288]
 2365 058c 01F03333 		and	r3, r1, #858993459
 2366 0590 C7F82431 		str	r3, [r7, #292]
 2367 0594 D7E9A823 		ldrd	r2, [r7, #672]
 2368 0598 02F0CC31 		and	r1, r2, #-858993460
 2369 059c C7F81811 		str	r1, [r7, #280]
 2370 05a0 03F0CC33 		and	r3, r3, #-858993460
 2371 05a4 C7F81C31 		str	r3, [r7, #284]
 2372 05a8 D7F84C32 		ldr	r3, [r7, #588]
 2373 05ac 3033     		adds	r3, r3, #48
 2374 05ae D7E94845 		ldrd	r4, [r7, #288]
 2375 05b2 2246     		mov	r2, r4
 2376 05b4 D7E94601 		ldrd	r0, [r7, #280]
 2377 05b8 8446     		mov	ip, r0
 2378 05ba 42EA0C02 		orr	r2, r2, ip
 2379 05be C7F81021 		str	r2, [r7, #272]
 2380 05c2 2A46     		mov	r2, r5
 2381 05c4 0A43     		orrs	r2, r2, r1
 2382 05c6 C7F81421 		str	r2, [r7, #276]
 2383 05ca D7E94412 		ldrd	r1, [r7, #272]
 2384 05ce C3E90012 		strd	r1, [r3]
 2385              	.LBE8:
 2386              	.LBB9:
 265:aes256ctr.c   **** 	SWAP4(q[5], q[7]);
 2387              		.loc 1 265 2
 2388 05d2 D7F84C32 		ldr	r3, [r7, #588]
 2389 05d6 D3E90A23 		ldrd	r2, [r3, #40]
 2390 05da C7E9A623 		strd	r2, [r7, #664]
 2391 05de D7F84C32 		ldr	r3, [r7, #588]
 2392 05e2 D3E90E23 		ldrd	r2, [r3, #56]
 2393 05e6 C7E9A423 		strd	r2, [r7, #656]
 2394 05ea D7E9A623 		ldrd	r2, [r7, #664]
 2395 05ee 02F03331 		and	r1, r2, #858993459
 2396 05f2 C7F80811 		str	r1, [r7, #264]
 2397 05f6 03F03333 		and	r3, r3, #858993459
 2398 05fa C7F80C31 		str	r3, [r7, #268]
 2399 05fe D7E9A423 		ldrd	r2, [r7, #656]
 2400 0602 4FF00000 		mov	r0, #0
 2401 0606 4FF00001 		mov	r1, #0
 2402 060a 9900     		lsls	r1, r3, #2
 2403 060c 41EA9271 		orr	r1, r1, r2, lsr #30
 2404 0610 9000     		lsls	r0, r2, #2
 2405 0612 00F0CC33 		and	r3, r0, #-858993460
 2406 0616 C7F80031 		str	r3, [r7, #256]
 2407 061a 01F0CC33 		and	r3, r1, #-858993460
 2408 061e C7F80431 		str	r3, [r7, #260]
 2409 0622 D7F84C32 		ldr	r3, [r7, #588]
 2410 0626 2833     		adds	r3, r3, #40
 2411 0628 D7E94245 		ldrd	r4, [r7, #264]
 2412 062c 2246     		mov	r2, r4
 2413 062e D7E94001 		ldrd	r0, [r7, #256]
 2414 0632 8446     		mov	ip, r0
 2415 0634 42EA0C02 		orr	r2, r2, ip
 2416 0638 C7F8F820 		str	r2, [r7, #248]
 2417 063c 2A46     		mov	r2, r5
 2418 063e 0A43     		orrs	r2, r2, r1
 2419 0640 C7F8FC20 		str	r2, [r7, #252]
 2420 0644 D7E93E12 		ldrd	r1, [r7, #248]
 2421 0648 C3E90012 		strd	r1, [r3]
 2422 064c D7E9A623 		ldrd	r2, [r7, #664]
 2423 0650 4FF00000 		mov	r0, #0
 2424 0654 4FF00001 		mov	r1, #0
 2425 0658 9008     		lsrs	r0, r2, #2
 2426 065a 40EA8370 		orr	r0, r0, r3, lsl #30
 2427 065e 9908     		lsrs	r1, r3, #2
 2428 0660 00F03333 		and	r3, r0, #858993459
 2429 0664 C7F8F030 		str	r3, [r7, #240]
 2430 0668 01F03333 		and	r3, r1, #858993459
 2431 066c C7F8F430 		str	r3, [r7, #244]
 2432 0670 D7E9A423 		ldrd	r2, [r7, #656]
 2433 0674 02F0CC31 		and	r1, r2, #-858993460
 2434 0678 C7F8E810 		str	r1, [r7, #232]
 2435 067c 03F0CC33 		and	r3, r3, #-858993460
 2436 0680 C7F8EC30 		str	r3, [r7, #236]
 2437 0684 D7F84C32 		ldr	r3, [r7, #588]
 2438 0688 3833     		adds	r3, r3, #56
 2439 068a D7E93C45 		ldrd	r4, [r7, #240]
 2440 068e 2246     		mov	r2, r4
 2441 0690 D7E93A01 		ldrd	r0, [r7, #232]
 2442 0694 8446     		mov	ip, r0
 2443 0696 42EA0C02 		orr	r2, r2, ip
 2444 069a C7F8E020 		str	r2, [r7, #224]
 2445 069e 2A46     		mov	r2, r5
 2446 06a0 0A43     		orrs	r2, r2, r1
 2447 06a2 C7F8E420 		str	r2, [r7, #228]
 2448 06a6 D7E93812 		ldrd	r1, [r7, #224]
 2449 06aa C3E90012 		strd	r1, [r3]
 2450              	.LBE9:
 2451              	.LBB10:
 266:aes256ctr.c   **** 
 267:aes256ctr.c   **** 	SWAP8(q[0], q[4]);
 2452              		.loc 1 267 2
 2453 06ae D7F84C32 		ldr	r3, [r7, #588]
 2454 06b2 D3E90023 		ldrd	r2, [r3]
 2455 06b6 C7E9A223 		strd	r2, [r7, #648]
 2456 06ba D7F84C32 		ldr	r3, [r7, #588]
 2457 06be D3E90823 		ldrd	r2, [r3, #32]
 2458 06c2 C7E9A023 		strd	r2, [r7, #640]
 2459 06c6 D7E9A223 		ldrd	r2, [r7, #648]
 2460 06ca 02F00F31 		and	r1, r2, #252645135
 2461 06ce C7F8D810 		str	r1, [r7, #216]
 2462 06d2 03F00F33 		and	r3, r3, #252645135
 2463 06d6 C7F8DC30 		str	r3, [r7, #220]
 2464 06da D7E9A023 		ldrd	r2, [r7, #640]
 2465 06de 4FF00000 		mov	r0, #0
 2466 06e2 4FF00001 		mov	r1, #0
 2467 06e6 1901     		lsls	r1, r3, #4
 2468 06e8 41EA1271 		orr	r1, r1, r2, lsr #28
 2469 06ec 1001     		lsls	r0, r2, #4
 2470 06ee 00F0F033 		and	r3, r0, #-252645136
 2471 06f2 C7F8D030 		str	r3, [r7, #208]
 2472 06f6 01F0F033 		and	r3, r1, #-252645136
 2473 06fa C7F8D430 		str	r3, [r7, #212]
 2474 06fe D7E93634 		ldrd	r3, [r7, #216]
 2475 0702 1846     		mov	r0, r3
 2476 0704 D7E93412 		ldrd	r1, [r7, #208]
 2477 0708 0D46     		mov	r5, r1
 2478 070a 2843     		orrs	r0, r0, r5
 2479 070c C7F8C800 		str	r0, [r7, #200]
 2480 0710 2346     		mov	r3, r4
 2481 0712 1343     		orrs	r3, r3, r2
 2482 0714 C7F8CC30 		str	r3, [r7, #204]
 2483 0718 D7F84C32 		ldr	r3, [r7, #588]
 2484 071c D7E93212 		ldrd	r1, [r7, #200]
 2485 0720 C3E90012 		strd	r1, [r3]
 2486 0724 D7E9A223 		ldrd	r2, [r7, #648]
 2487 0728 4FF00000 		mov	r0, #0
 2488 072c 4FF00001 		mov	r1, #0
 2489 0730 1009     		lsrs	r0, r2, #4
 2490 0732 40EA0370 		orr	r0, r0, r3, lsl #28
 2491 0736 1909     		lsrs	r1, r3, #4
 2492 0738 00F00F33 		and	r3, r0, #252645135
 2493 073c C7F8C030 		str	r3, [r7, #192]
 2494 0740 01F00F33 		and	r3, r1, #252645135
 2495 0744 C7F8C430 		str	r3, [r7, #196]
 2496 0748 D7E9A023 		ldrd	r2, [r7, #640]
 2497 074c 02F0F031 		and	r1, r2, #-252645136
 2498 0750 C7F8B810 		str	r1, [r7, #184]
 2499 0754 03F0F033 		and	r3, r3, #-252645136
 2500 0758 C7F8BC30 		str	r3, [r7, #188]
 2501 075c D7F84C32 		ldr	r3, [r7, #588]
 2502 0760 2033     		adds	r3, r3, #32
 2503 0762 D7E93045 		ldrd	r4, [r7, #192]
 2504 0766 2246     		mov	r2, r4
 2505 0768 D7E92E01 		ldrd	r0, [r7, #184]
 2506 076c 8446     		mov	ip, r0
 2507 076e 42EA0C02 		orr	r2, r2, ip
 2508 0772 C7F8B020 		str	r2, [r7, #176]
 2509 0776 2A46     		mov	r2, r5
 2510 0778 0A43     		orrs	r2, r2, r1
 2511 077a C7F8B420 		str	r2, [r7, #180]
 2512 077e D7E92C12 		ldrd	r1, [r7, #176]
 2513 0782 C3E90012 		strd	r1, [r3]
 2514              	.LBE10:
 2515              	.LBB11:
 268:aes256ctr.c   **** 	SWAP8(q[1], q[5]);
 2516              		.loc 1 268 2
 2517 0786 D7F84C32 		ldr	r3, [r7, #588]
 2518 078a D3E90223 		ldrd	r2, [r3, #8]
 2519 078e C7E99E23 		strd	r2, [r7, #632]
 2520 0792 D7F84C32 		ldr	r3, [r7, #588]
 2521 0796 D3E90A23 		ldrd	r2, [r3, #40]
 2522 079a C7E99C23 		strd	r2, [r7, #624]
 2523 079e D7E99E23 		ldrd	r2, [r7, #632]
 2524 07a2 02F00F31 		and	r1, r2, #252645135
 2525 07a6 C7F8A810 		str	r1, [r7, #168]
 2526 07aa 03F00F33 		and	r3, r3, #252645135
 2527 07ae C7F8AC30 		str	r3, [r7, #172]
 2528 07b2 D7E99C23 		ldrd	r2, [r7, #624]
 2529 07b6 4FF00000 		mov	r0, #0
 2530 07ba 4FF00001 		mov	r1, #0
 2531 07be 1901     		lsls	r1, r3, #4
 2532 07c0 41EA1271 		orr	r1, r1, r2, lsr #28
 2533 07c4 1001     		lsls	r0, r2, #4
 2534 07c6 00F0F033 		and	r3, r0, #-252645136
 2535 07ca C7F8A030 		str	r3, [r7, #160]
 2536 07ce 01F0F033 		and	r3, r1, #-252645136
 2537 07d2 C7F8A430 		str	r3, [r7, #164]
 2538 07d6 D7F84C32 		ldr	r3, [r7, #588]
 2539 07da 0833     		adds	r3, r3, #8
 2540 07dc D7E92A45 		ldrd	r4, [r7, #168]
 2541 07e0 2246     		mov	r2, r4
 2542 07e2 D7E92801 		ldrd	r0, [r7, #160]
 2543 07e6 8446     		mov	ip, r0
 2544 07e8 42EA0C02 		orr	r2, r2, ip
 2545 07ec C7F89820 		str	r2, [r7, #152]
 2546 07f0 2A46     		mov	r2, r5
 2547 07f2 0A43     		orrs	r2, r2, r1
 2548 07f4 C7F89C20 		str	r2, [r7, #156]
 2549 07f8 D7E92612 		ldrd	r1, [r7, #152]
 2550 07fc C3E90012 		strd	r1, [r3]
 2551 0800 D7E99E23 		ldrd	r2, [r7, #632]
 2552 0804 4FF00000 		mov	r0, #0
 2553 0808 4FF00001 		mov	r1, #0
 2554 080c 1009     		lsrs	r0, r2, #4
 2555 080e 40EA0370 		orr	r0, r0, r3, lsl #28
 2556 0812 1909     		lsrs	r1, r3, #4
 2557 0814 00F00F33 		and	r3, r0, #252645135
 2558 0818 C7F89030 		str	r3, [r7, #144]
 2559 081c 01F00F33 		and	r3, r1, #252645135
 2560 0820 C7F89430 		str	r3, [r7, #148]
 2561 0824 D7E99C23 		ldrd	r2, [r7, #624]
 2562 0828 02F0F031 		and	r1, r2, #-252645136
 2563 082c C7F88810 		str	r1, [r7, #136]
 2564 0830 03F0F033 		and	r3, r3, #-252645136
 2565 0834 C7F88C30 		str	r3, [r7, #140]
 2566 0838 D7F84C32 		ldr	r3, [r7, #588]
 2567 083c 2833     		adds	r3, r3, #40
 2568 083e D7E92445 		ldrd	r4, [r7, #144]
 2569 0842 2246     		mov	r2, r4
 2570 0844 D7E92201 		ldrd	r0, [r7, #136]
 2571 0848 8446     		mov	ip, r0
 2572 084a 42EA0C02 		orr	r2, r2, ip
 2573 084e C7F88020 		str	r2, [r7, #128]
 2574 0852 2A46     		mov	r2, r5
 2575 0854 0A43     		orrs	r2, r2, r1
 2576 0856 C7F88420 		str	r2, [r7, #132]
 2577 085a D7E92012 		ldrd	r1, [r7, #128]
 2578 085e C3E90012 		strd	r1, [r3]
 2579              	.LBE11:
 2580              	.LBB12:
 269:aes256ctr.c   **** 	SWAP8(q[2], q[6]);
 2581              		.loc 1 269 2
 2582 0862 D7F84C32 		ldr	r3, [r7, #588]
 2583 0866 D3E90423 		ldrd	r2, [r3, #16]
 2584 086a C7E99A23 		strd	r2, [r7, #616]
 2585 086e D7F84C32 		ldr	r3, [r7, #588]
 2586 0872 D3E90C23 		ldrd	r2, [r3, #48]
 2587 0876 C7E99823 		strd	r2, [r7, #608]
 2588 087a D7E99A23 		ldrd	r2, [r7, #616]
 2589 087e 02F00F31 		and	r1, r2, #252645135
 2590 0882 B967     		str	r1, [r7, #120]
 2591 0884 03F00F33 		and	r3, r3, #252645135
 2592 0888 FB67     		str	r3, [r7, #124]
 2593 088a D7E99823 		ldrd	r2, [r7, #608]
 2594 088e 4FF00000 		mov	r0, #0
 2595 0892 4FF00001 		mov	r1, #0
 2596 0896 1901     		lsls	r1, r3, #4
 2597 0898 41EA1271 		orr	r1, r1, r2, lsr #28
 2598 089c 1001     		lsls	r0, r2, #4
 2599 089e 00F0F033 		and	r3, r0, #-252645136
 2600 08a2 3B67     		str	r3, [r7, #112]
 2601 08a4 01F0F033 		and	r3, r1, #-252645136
 2602 08a8 7B67     		str	r3, [r7, #116]
 2603 08aa D7F84C32 		ldr	r3, [r7, #588]
 2604 08ae 1033     		adds	r3, r3, #16
 2605 08b0 D7E91E45 		ldrd	r4, [r7, #120]
 2606 08b4 2246     		mov	r2, r4
 2607 08b6 D7E91C01 		ldrd	r0, [r7, #112]
 2608 08ba 8446     		mov	ip, r0
 2609 08bc 42EA0C02 		orr	r2, r2, ip
 2610 08c0 BA66     		str	r2, [r7, #104]
 2611 08c2 2A46     		mov	r2, r5
 2612 08c4 0A43     		orrs	r2, r2, r1
 2613 08c6 FA66     		str	r2, [r7, #108]
 2614 08c8 D7E91A12 		ldrd	r1, [r7, #104]
 2615 08cc C3E90012 		strd	r1, [r3]
 2616 08d0 D7E99A23 		ldrd	r2, [r7, #616]
 2617 08d4 4FF00000 		mov	r0, #0
 2618 08d8 4FF00001 		mov	r1, #0
 2619 08dc 1009     		lsrs	r0, r2, #4
 2620 08de 40EA0370 		orr	r0, r0, r3, lsl #28
 2621 08e2 1909     		lsrs	r1, r3, #4
 2622 08e4 00F00F33 		and	r3, r0, #252645135
 2623 08e8 3B66     		str	r3, [r7, #96]
 2624 08ea 01F00F33 		and	r3, r1, #252645135
 2625 08ee 7B66     		str	r3, [r7, #100]
 2626 08f0 D7E99823 		ldrd	r2, [r7, #608]
 2627 08f4 02F0F031 		and	r1, r2, #-252645136
 2628 08f8 B965     		str	r1, [r7, #88]
 2629 08fa 03F0F033 		and	r3, r3, #-252645136
 2630 08fe FB65     		str	r3, [r7, #92]
 2631 0900 D7F84C32 		ldr	r3, [r7, #588]
 2632 0904 3033     		adds	r3, r3, #48
 2633 0906 D7E91845 		ldrd	r4, [r7, #96]
 2634 090a 2246     		mov	r2, r4
 2635 090c D7E91601 		ldrd	r0, [r7, #88]
 2636 0910 8446     		mov	ip, r0
 2637 0912 42EA0C02 		orr	r2, r2, ip
 2638 0916 3A65     		str	r2, [r7, #80]
 2639 0918 2A46     		mov	r2, r5
 2640 091a 0A43     		orrs	r2, r2, r1
 2641 091c 7A65     		str	r2, [r7, #84]
 2642 091e D7E91412 		ldrd	r1, [r7, #80]
 2643 0922 C3E90012 		strd	r1, [r3]
 2644              	.LBE12:
 2645              	.LBB13:
 270:aes256ctr.c   **** 	SWAP8(q[3], q[7]);
 2646              		.loc 1 270 2
 2647 0926 D7F84C32 		ldr	r3, [r7, #588]
 2648 092a D3E90623 		ldrd	r2, [r3, #24]
 2649 092e C7E99623 		strd	r2, [r7, #600]
 2650 0932 D7F84C32 		ldr	r3, [r7, #588]
 2651 0936 D3E90E23 		ldrd	r2, [r3, #56]
 2652 093a C7E99423 		strd	r2, [r7, #592]
 2653 093e D7E99623 		ldrd	r2, [r7, #600]
 2654 0942 02F00F31 		and	r1, r2, #252645135
 2655 0946 B964     		str	r1, [r7, #72]
 2656 0948 03F00F33 		and	r3, r3, #252645135
 2657 094c FB64     		str	r3, [r7, #76]
 2658 094e D7E99423 		ldrd	r2, [r7, #592]
 2659 0952 4FF00000 		mov	r0, #0
 2660 0956 4FF00001 		mov	r1, #0
 2661 095a 1901     		lsls	r1, r3, #4
 2662 095c 41EA1271 		orr	r1, r1, r2, lsr #28
 2663 0960 1001     		lsls	r0, r2, #4
 2664 0962 00F0F033 		and	r3, r0, #-252645136
 2665 0966 3B64     		str	r3, [r7, #64]
 2666 0968 01F0F033 		and	r3, r1, #-252645136
 2667 096c 7B64     		str	r3, [r7, #68]
 2668 096e D7F84C32 		ldr	r3, [r7, #588]
 2669 0972 1833     		adds	r3, r3, #24
 2670 0974 D7E91245 		ldrd	r4, [r7, #72]
 2671 0978 2246     		mov	r2, r4
 2672 097a D7E91001 		ldrd	r0, [r7, #64]
 2673 097e 8446     		mov	ip, r0
 2674 0980 42EA0C02 		orr	r2, r2, ip
 2675 0984 BA63     		str	r2, [r7, #56]
 2676 0986 2A46     		mov	r2, r5
 2677 0988 0A43     		orrs	r2, r2, r1
 2678 098a FA63     		str	r2, [r7, #60]
 2679 098c D7E90E12 		ldrd	r1, [r7, #56]
 2680 0990 C3E90012 		strd	r1, [r3]
 2681 0994 D7E99601 		ldrd	r0, [r7, #600]
 2682 0998 4FF00002 		mov	r2, #0
 2683 099c 4FF00003 		mov	r3, #0
 2684 09a0 0209     		lsrs	r2, r0, #4
 2685 09a2 42EA0172 		orr	r2, r2, r1, lsl #28
 2686 09a6 0B09     		lsrs	r3, r1, #4
 2687 09a8 02F00F31 		and	r1, r2, #252645135
 2688 09ac 3963     		str	r1, [r7, #48]
 2689 09ae 03F00F33 		and	r3, r3, #252645135
 2690 09b2 7B63     		str	r3, [r7, #52]
 2691 09b4 D7E99423 		ldrd	r2, [r7, #592]
 2692 09b8 02F0F031 		and	r1, r2, #-252645136
 2693 09bc B962     		str	r1, [r7, #40]
 2694 09be 03F0F033 		and	r3, r3, #-252645136
 2695 09c2 FB62     		str	r3, [r7, #44]
 2696 09c4 D7F84C32 		ldr	r3, [r7, #588]
 2697 09c8 3833     		adds	r3, r3, #56
 2698 09ca D7E90C45 		ldrd	r4, [r7, #48]
 2699 09ce 2246     		mov	r2, r4
 2700 09d0 D7E90A01 		ldrd	r0, [r7, #40]
 2701 09d4 8446     		mov	ip, r0
 2702 09d6 42EA0C02 		orr	r2, r2, ip
 2703 09da 3A62     		str	r2, [r7, #32]
 2704 09dc 2A46     		mov	r2, r5
 2705 09de 0A43     		orrs	r2, r2, r1
 2706 09e0 7A62     		str	r2, [r7, #36]
 2707 09e2 D7E90812 		ldrd	r1, [r7, #32]
 2708 09e6 C3E90012 		strd	r1, [r3]
 2709              	.LBE13:
 271:aes256ctr.c   **** }
 2710              		.loc 1 271 1
 2711 09ea 00BF     		nop
 2712 09ec 07F54577 		add	r7, r7, #788
 2713              	.LCFI37:
 2714              		.cfi_def_cfa_offset 28
 2715 09f0 BD46     		mov	sp, r7
 2716              	.LCFI38:
 2717              		.cfi_def_cfa_register 13
 2718              		@ sp needed
 2719 09f2 BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 2720              	.LCFI39:
 2721              		.cfi_restore 11
 2722              		.cfi_restore 10
 2723              		.cfi_restore 9
 2724              		.cfi_restore 8
 2725              		.cfi_restore 7
 2726              		.cfi_restore 5
 2727              		.cfi_restore 4
 2728              		.cfi_def_cfa_offset 0
 2729 09f6 7047     		bx	lr
 2730              		.cfi_endproc
 2731              	.LFE6:
 2733              		.section	.text.br_aes_ct64_interleave_in,"ax",%progbits
 2734              		.align	1
 2735              		.syntax unified
 2736              		.thumb
 2737              		.thumb_func
 2738              		.fpu softvfp
 2740              	br_aes_ct64_interleave_in:
 2741              	.LFB7:
 272:aes256ctr.c   **** 
 273:aes256ctr.c   **** static void br_aes_ct64_interleave_in(uint64_t *q0, uint64_t *q1, const uint32_t *w)
 274:aes256ctr.c   **** {
 2742              		.loc 1 274 1
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 232
 2745              		@ frame_needed = 1, uses_anonymous_args = 0
 2746              		@ link register save eliminated.
 2747 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 2748              	.LCFI40:
 2749              		.cfi_def_cfa_offset 28
 2750              		.cfi_offset 4, -28
 2751              		.cfi_offset 5, -24
 2752              		.cfi_offset 7, -20
 2753              		.cfi_offset 8, -16
 2754              		.cfi_offset 9, -12
 2755              		.cfi_offset 10, -8
 2756              		.cfi_offset 11, -4
 2757 0004 BBB0     		sub	sp, sp, #236
 2758              	.LCFI41:
 2759              		.cfi_def_cfa_offset 264
 2760 0006 00AF     		add	r7, sp, #0
 2761              	.LCFI42:
 2762              		.cfi_def_cfa_register 7
 2763 0008 C7F8C400 		str	r0, [r7, #196]
 2764 000c C7F8C010 		str	r1, [r7, #192]
 2765 0010 C7F8BC20 		str	r2, [r7, #188]
 275:aes256ctr.c   **** 	uint64_t x0, x1, x2, x3;
 276:aes256ctr.c   **** 
 277:aes256ctr.c   **** 	x0 = w[0];
 2766              		.loc 1 277 8
 2767 0014 D7F8BC30 		ldr	r3, [r7, #188]
 2768 0018 1B68     		ldr	r3, [r3]
 2769              		.loc 1 277 5
 2770 001a 0022     		movs	r2, #0
 2771 001c 9A46     		mov	r10, r3
 2772 001e 9346     		mov	fp, r2
 2773 0020 C7E938AB 		strd	r10, [r7, #224]
 278:aes256ctr.c   **** 	x1 = w[1];
 2774              		.loc 1 278 8
 2775 0024 D7F8BC30 		ldr	r3, [r7, #188]
 2776 0028 0433     		adds	r3, r3, #4
 2777 002a 1B68     		ldr	r3, [r3]
 2778              		.loc 1 278 5
 2779 002c 0022     		movs	r2, #0
 2780 002e C7F89030 		str	r3, [r7, #144]
 2781 0032 C7F89420 		str	r2, [r7, #148]
 2782 0036 D7E92423 		ldrd	r2, [r7, #144]
 2783 003a C7E93623 		strd	r2, [r7, #216]
 279:aes256ctr.c   **** 	x2 = w[2];
 2784              		.loc 1 279 8
 2785 003e D7F8BC30 		ldr	r3, [r7, #188]
 2786 0042 0833     		adds	r3, r3, #8
 2787 0044 1B68     		ldr	r3, [r3]
 2788              		.loc 1 279 5
 2789 0046 0022     		movs	r2, #0
 2790 0048 C7F88830 		str	r3, [r7, #136]
 2791 004c C7F88C20 		str	r2, [r7, #140]
 2792 0050 D7E92223 		ldrd	r2, [r7, #136]
 2793 0054 C7E93423 		strd	r2, [r7, #208]
 280:aes256ctr.c   **** 	x3 = w[3];
 2794              		.loc 1 280 8
 2795 0058 D7F8BC30 		ldr	r3, [r7, #188]
 2796 005c 0C33     		adds	r3, r3, #12
 2797 005e 1B68     		ldr	r3, [r3]
 2798              		.loc 1 280 5
 2799 0060 0022     		movs	r2, #0
 2800 0062 C7F88030 		str	r3, [r7, #128]
 2801 0066 C7F88420 		str	r2, [r7, #132]
 2802 006a D7E92023 		ldrd	r2, [r7, #128]
 2803 006e C7E93223 		strd	r2, [r7, #200]
 281:aes256ctr.c   **** 	x0 |= (x0 << 16);
 2804              		.loc 1 281 12
 2805 0072 D7F8E030 		ldr	r3, [r7, #224]
 2806 0076 1D0C     		lsrs	r5, r3, #16
 2807 0078 D7F8E030 		ldr	r3, [r7, #224]
 2808 007c 1C04     		lsls	r4, r3, #16
 2809              		.loc 1 281 5
 2810 007e D7E93823 		ldrd	r2, [r7, #224]
 2811 0082 42EA0401 		orr	r1, r2, r4
 2812 0086 B967     		str	r1, [r7, #120]
 2813 0088 2B43     		orrs	r3, r3, r5
 2814 008a FB67     		str	r3, [r7, #124]
 2815 008c D7E91E34 		ldrd	r3, [r7, #120]
 2816 0090 C7E93834 		strd	r3, [r7, #224]
 282:aes256ctr.c   **** 	x1 |= (x1 << 16);
 2817              		.loc 1 282 12
 2818 0094 D7F8D830 		ldr	r3, [r7, #216]
 2819 0098 4FEA1349 		lsr	r9, r3, #16
 2820 009c D7F8D830 		ldr	r3, [r7, #216]
 2821 00a0 4FEA0348 		lsl	r8, r3, #16
 2822              		.loc 1 282 5
 2823 00a4 D7E93623 		ldrd	r2, [r7, #216]
 2824 00a8 42EA0801 		orr	r1, r2, r8
 2825 00ac 3967     		str	r1, [r7, #112]
 2826 00ae 43EA0903 		orr	r3, r3, r9
 2827 00b2 7B67     		str	r3, [r7, #116]
 2828 00b4 D7E91C34 		ldrd	r3, [r7, #112]
 2829 00b8 C7E93634 		strd	r3, [r7, #216]
 283:aes256ctr.c   **** 	x2 |= (x2 << 16);
 2830              		.loc 1 283 12
 2831 00bc D7F8D030 		ldr	r3, [r7, #208]
 2832 00c0 1B0C     		lsrs	r3, r3, #16
 2833 00c2 C7F8B430 		str	r3, [r7, #180]
 2834 00c6 D7F8D030 		ldr	r3, [r7, #208]
 2835 00ca 1B04     		lsls	r3, r3, #16
 2836 00cc C7F8B030 		str	r3, [r7, #176]
 2837              		.loc 1 283 5
 2838 00d0 D7E93423 		ldrd	r2, [r7, #208]
 2839 00d4 D7E92C01 		ldrd	r0, [r7, #176]
 2840 00d8 0446     		mov	r4, r0
 2841 00da 1443     		orrs	r4, r4, r2
 2842 00dc BC66     		str	r4, [r7, #104]
 2843 00de 1943     		orrs	r1, r1, r3
 2844 00e0 F966     		str	r1, [r7, #108]
 2845 00e2 D7E91A34 		ldrd	r3, [r7, #104]
 2846 00e6 C7E93434 		strd	r3, [r7, #208]
 284:aes256ctr.c   **** 	x3 |= (x3 << 16);
 2847              		.loc 1 284 12
 2848 00ea D7F8C830 		ldr	r3, [r7, #200]
 2849 00ee 1B0C     		lsrs	r3, r3, #16
 2850 00f0 C7F8AC30 		str	r3, [r7, #172]
 2851 00f4 D7F8C830 		ldr	r3, [r7, #200]
 2852 00f8 1B04     		lsls	r3, r3, #16
 2853 00fa C7F8A830 		str	r3, [r7, #168]
 2854              		.loc 1 284 5
 2855 00fe D7E93223 		ldrd	r2, [r7, #200]
 2856 0102 D7E92A01 		ldrd	r0, [r7, #168]
 2857 0106 0446     		mov	r4, r0
 2858 0108 1443     		orrs	r4, r4, r2
 2859 010a 3C66     		str	r4, [r7, #96]
 2860 010c 1943     		orrs	r1, r1, r3
 2861 010e 7966     		str	r1, [r7, #100]
 2862 0110 D7E91834 		ldrd	r3, [r7, #96]
 2863 0114 C7E93234 		strd	r3, [r7, #200]
 285:aes256ctr.c   **** 	x0 &= (uint64_t)0x0000FFFF0000FFFF;
 2864              		.loc 1 285 5
 2865 0118 D7E93801 		ldrd	r0, [r7, #224]
 2866 011c 4FF6FF72 		movw	r2, #65535
 2867 0120 4FF6FF73 		movw	r3, #65535
 2868 0124 00EA0204 		and	r4, r0, r2
 2869 0128 BC65     		str	r4, [r7, #88]
 2870 012a 0B40     		ands	r3, r3, r1
 2871 012c FB65     		str	r3, [r7, #92]
 2872 012e D7E91634 		ldrd	r3, [r7, #88]
 2873 0132 C7E93834 		strd	r3, [r7, #224]
 286:aes256ctr.c   **** 	x1 &= (uint64_t)0x0000FFFF0000FFFF;
 2874              		.loc 1 286 5
 2875 0136 D7E93601 		ldrd	r0, [r7, #216]
 2876 013a 4FF6FF72 		movw	r2, #65535
 2877 013e 4FF6FF73 		movw	r3, #65535
 2878 0142 00EA0204 		and	r4, r0, r2
 2879 0146 3C65     		str	r4, [r7, #80]
 2880 0148 0B40     		ands	r3, r3, r1
 2881 014a 7B65     		str	r3, [r7, #84]
 2882 014c D7E91434 		ldrd	r3, [r7, #80]
 2883 0150 C7E93634 		strd	r3, [r7, #216]
 287:aes256ctr.c   **** 	x2 &= (uint64_t)0x0000FFFF0000FFFF;
 2884              		.loc 1 287 5
 2885 0154 D7E93401 		ldrd	r0, [r7, #208]
 2886 0158 4FF6FF72 		movw	r2, #65535
 2887 015c 4FF6FF73 		movw	r3, #65535
 2888 0160 00EA0204 		and	r4, r0, r2
 2889 0164 BC64     		str	r4, [r7, #72]
 2890 0166 0B40     		ands	r3, r3, r1
 2891 0168 FB64     		str	r3, [r7, #76]
 2892 016a D7E91234 		ldrd	r3, [r7, #72]
 2893 016e C7E93434 		strd	r3, [r7, #208]
 288:aes256ctr.c   **** 	x3 &= (uint64_t)0x0000FFFF0000FFFF;
 2894              		.loc 1 288 5
 2895 0172 D7E93201 		ldrd	r0, [r7, #200]
 2896 0176 4FF6FF72 		movw	r2, #65535
 2897 017a 4FF6FF73 		movw	r3, #65535
 2898 017e 00EA0204 		and	r4, r0, r2
 2899 0182 3C64     		str	r4, [r7, #64]
 2900 0184 0B40     		ands	r3, r3, r1
 2901 0186 7B64     		str	r3, [r7, #68]
 2902 0188 D7E91034 		ldrd	r3, [r7, #64]
 2903 018c C7E93234 		strd	r3, [r7, #200]
 289:aes256ctr.c   **** 	x0 |= (x0 << 8);
 2904              		.loc 1 289 12
 2905 0190 D7E93823 		ldrd	r2, [r7, #224]
 2906 0194 4FF00000 		mov	r0, #0
 2907 0198 4FF00001 		mov	r1, #0
 2908 019c 1902     		lsls	r1, r3, #8
 2909 019e 41EA1261 		orr	r1, r1, r2, lsr #24
 2910 01a2 1002     		lsls	r0, r2, #8
 2911              		.loc 1 289 5
 2912 01a4 D7E93823 		ldrd	r2, [r7, #224]
 2913 01a8 42EA0004 		orr	r4, r2, r0
 2914 01ac BC63     		str	r4, [r7, #56]
 2915 01ae 0B43     		orrs	r3, r3, r1
 2916 01b0 FB63     		str	r3, [r7, #60]
 2917 01b2 D7E90E34 		ldrd	r3, [r7, #56]
 2918 01b6 C7E93834 		strd	r3, [r7, #224]
 290:aes256ctr.c   **** 	x1 |= (x1 << 8);
 2919              		.loc 1 290 12
 2920 01ba D7E93623 		ldrd	r2, [r7, #216]
 2921 01be 4FF00000 		mov	r0, #0
 2922 01c2 4FF00001 		mov	r1, #0
 2923 01c6 1902     		lsls	r1, r3, #8
 2924 01c8 41EA1261 		orr	r1, r1, r2, lsr #24
 2925 01cc 1002     		lsls	r0, r2, #8
 2926              		.loc 1 290 5
 2927 01ce D7E93623 		ldrd	r2, [r7, #216]
 2928 01d2 42EA0004 		orr	r4, r2, r0
 2929 01d6 3C63     		str	r4, [r7, #48]
 2930 01d8 0B43     		orrs	r3, r3, r1
 2931 01da 7B63     		str	r3, [r7, #52]
 2932 01dc D7E90C34 		ldrd	r3, [r7, #48]
 2933 01e0 C7E93634 		strd	r3, [r7, #216]
 291:aes256ctr.c   **** 	x2 |= (x2 << 8);
 2934              		.loc 1 291 12
 2935 01e4 D7E93423 		ldrd	r2, [r7, #208]
 2936 01e8 4FF00000 		mov	r0, #0
 2937 01ec 4FF00001 		mov	r1, #0
 2938 01f0 1902     		lsls	r1, r3, #8
 2939 01f2 41EA1261 		orr	r1, r1, r2, lsr #24
 2940 01f6 1002     		lsls	r0, r2, #8
 2941              		.loc 1 291 5
 2942 01f8 D7E93423 		ldrd	r2, [r7, #208]
 2943 01fc 42EA0004 		orr	r4, r2, r0
 2944 0200 BC62     		str	r4, [r7, #40]
 2945 0202 0B43     		orrs	r3, r3, r1
 2946 0204 FB62     		str	r3, [r7, #44]
 2947 0206 D7E90A34 		ldrd	r3, [r7, #40]
 2948 020a C7E93434 		strd	r3, [r7, #208]
 292:aes256ctr.c   **** 	x3 |= (x3 << 8);
 2949              		.loc 1 292 12
 2950 020e D7E93223 		ldrd	r2, [r7, #200]
 2951 0212 4FF00000 		mov	r0, #0
 2952 0216 4FF00001 		mov	r1, #0
 2953 021a 1902     		lsls	r1, r3, #8
 2954 021c 41EA1261 		orr	r1, r1, r2, lsr #24
 2955 0220 1002     		lsls	r0, r2, #8
 2956              		.loc 1 292 5
 2957 0222 D7E93223 		ldrd	r2, [r7, #200]
 2958 0226 42EA0004 		orr	r4, r2, r0
 2959 022a 3C62     		str	r4, [r7, #32]
 2960 022c 0B43     		orrs	r3, r3, r1
 2961 022e 7B62     		str	r3, [r7, #36]
 2962 0230 D7E90834 		ldrd	r3, [r7, #32]
 2963 0234 C7E93234 		strd	r3, [r7, #200]
 293:aes256ctr.c   **** 	x0 &= (uint64_t)0x00FF00FF00FF00FF;
 2964              		.loc 1 293 5
 2965 0238 D7E93823 		ldrd	r2, [r7, #224]
 2966 023c 02F0FF11 		and	r1, r2, #16711935
 2967 0240 B961     		str	r1, [r7, #24]
 2968 0242 03F0FF13 		and	r3, r3, #16711935
 2969 0246 FB61     		str	r3, [r7, #28]
 2970 0248 D7E90634 		ldrd	r3, [r7, #24]
 2971 024c C7E93834 		strd	r3, [r7, #224]
 294:aes256ctr.c   **** 	x1 &= (uint64_t)0x00FF00FF00FF00FF;
 2972              		.loc 1 294 5
 2973 0250 D7E93623 		ldrd	r2, [r7, #216]
 2974 0254 02F0FF11 		and	r1, r2, #16711935
 2975 0258 3961     		str	r1, [r7, #16]
 2976 025a 03F0FF13 		and	r3, r3, #16711935
 2977 025e 7B61     		str	r3, [r7, #20]
 2978 0260 D7E90434 		ldrd	r3, [r7, #16]
 2979 0264 C7E93634 		strd	r3, [r7, #216]
 295:aes256ctr.c   **** 	x2 &= (uint64_t)0x00FF00FF00FF00FF;
 2980              		.loc 1 295 5
 2981 0268 D7E93423 		ldrd	r2, [r7, #208]
 2982 026c 02F0FF11 		and	r1, r2, #16711935
 2983 0270 B960     		str	r1, [r7, #8]
 2984 0272 03F0FF13 		and	r3, r3, #16711935
 2985 0276 FB60     		str	r3, [r7, #12]
 2986 0278 D7E90234 		ldrd	r3, [r7, #8]
 2987 027c C7E93434 		strd	r3, [r7, #208]
 296:aes256ctr.c   **** 	x3 &= (uint64_t)0x00FF00FF00FF00FF;
 2988              		.loc 1 296 5
 2989 0280 D7E93223 		ldrd	r2, [r7, #200]
 2990 0284 02F0FF11 		and	r1, r2, #16711935
 2991 0288 3960     		str	r1, [r7]
 2992 028a 03F0FF13 		and	r3, r3, #16711935
 2993 028e 7B60     		str	r3, [r7, #4]
 2994 0290 D7E90034 		ldrd	r3, [r7]
 2995 0294 C7E93234 		strd	r3, [r7, #200]
 297:aes256ctr.c   **** 	*q0 = x0 | (x2 << 8);
 2996              		.loc 1 297 17
 2997 0298 D7E93401 		ldrd	r0, [r7, #208]
 2998 029c 4FF00002 		mov	r2, #0
 2999 02a0 4FF00003 		mov	r3, #0
 3000 02a4 0B02     		lsls	r3, r1, #8
 3001 02a6 43EA1063 		orr	r3, r3, r0, lsr #24
 3002 02aa 0202     		lsls	r2, r0, #8
 3003              		.loc 1 297 11
 3004 02ac D7E93801 		ldrd	r0, [r7, #224]
 3005 02b0 42EA0004 		orr	r4, r2, r0
 3006 02b4 C7F8A040 		str	r4, [r7, #160]
 3007 02b8 0B43     		orrs	r3, r3, r1
 3008 02ba C7F8A430 		str	r3, [r7, #164]
 3009              		.loc 1 297 6
 3010 02be D7F8C430 		ldr	r3, [r7, #196]
 3011 02c2 D7E92812 		ldrd	r1, [r7, #160]
 3012 02c6 C3E90012 		strd	r1, [r3]
 298:aes256ctr.c   **** 	*q1 = x1 | (x3 << 8);
 3013              		.loc 1 298 17
 3014 02ca D7E93201 		ldrd	r0, [r7, #200]
 3015 02ce 4FF00002 		mov	r2, #0
 3016 02d2 4FF00003 		mov	r3, #0
 3017 02d6 0B02     		lsls	r3, r1, #8
 3018 02d8 43EA1063 		orr	r3, r3, r0, lsr #24
 3019 02dc 0202     		lsls	r2, r0, #8
 3020              		.loc 1 298 11
 3021 02de D7E93601 		ldrd	r0, [r7, #216]
 3022 02e2 42EA0004 		orr	r4, r2, r0
 3023 02e6 C7F89840 		str	r4, [r7, #152]
 3024 02ea 0B43     		orrs	r3, r3, r1
 3025 02ec C7F89C30 		str	r3, [r7, #156]
 3026              		.loc 1 298 6
 3027 02f0 D7F8C030 		ldr	r3, [r7, #192]
 3028 02f4 D7E92612 		ldrd	r1, [r7, #152]
 3029 02f8 C3E90012 		strd	r1, [r3]
 299:aes256ctr.c   **** }
 3030              		.loc 1 299 1
 3031 02fc 00BF     		nop
 3032 02fe EC37     		adds	r7, r7, #236
 3033              	.LCFI43:
 3034              		.cfi_def_cfa_offset 28
 3035 0300 BD46     		mov	sp, r7
 3036              	.LCFI44:
 3037              		.cfi_def_cfa_register 13
 3038              		@ sp needed
 3039 0302 BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 3040              	.LCFI45:
 3041              		.cfi_restore 11
 3042              		.cfi_restore 10
 3043              		.cfi_restore 9
 3044              		.cfi_restore 8
 3045              		.cfi_restore 7
 3046              		.cfi_restore 5
 3047              		.cfi_restore 4
 3048              		.cfi_def_cfa_offset 0
 3049 0306 7047     		bx	lr
 3050              		.cfi_endproc
 3051              	.LFE7:
 3053              		.section	.text.br_aes_ct64_interleave_out,"ax",%progbits
 3054              		.align	1
 3055              		.syntax unified
 3056              		.thumb
 3057              		.thumb_func
 3058              		.fpu softvfp
 3060              	br_aes_ct64_interleave_out:
 3061              	.LFB8:
 300:aes256ctr.c   **** 
 301:aes256ctr.c   **** static void br_aes_ct64_interleave_out(uint32_t *w, uint64_t q0, uint64_t q1)
 302:aes256ctr.c   **** {
 3062              		.loc 1 302 1
 3063              		.cfi_startproc
 3064              		@ args = 8, pretend = 0, frame = 120
 3065              		@ frame_needed = 1, uses_anonymous_args = 0
 3066              		@ link register save eliminated.
 3067 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 3068              	.LCFI46:
 3069              		.cfi_def_cfa_offset 28
 3070              		.cfi_offset 4, -28
 3071              		.cfi_offset 5, -24
 3072              		.cfi_offset 7, -20
 3073              		.cfi_offset 8, -16
 3074              		.cfi_offset 9, -12
 3075              		.cfi_offset 10, -8
 3076              		.cfi_offset 11, -4
 3077 0004 9FB0     		sub	sp, sp, #124
 3078              	.LCFI47:
 3079              		.cfi_def_cfa_offset 152
 3080 0006 00AF     		add	r7, sp, #0
 3081              	.LCFI48:
 3082              		.cfi_def_cfa_register 7
 3083 0008 7865     		str	r0, [r7, #84]
 3084 000a C7E91223 		strd	r2, [r7, #72]
 303:aes256ctr.c   **** 	uint64_t x0, x1, x2, x3;
 304:aes256ctr.c   **** 
 305:aes256ctr.c   **** 	x0 = q0 & (uint64_t)0x00FF00FF00FF00FF;
 3085              		.loc 1 305 5
 3086 000e D7E91223 		ldrd	r2, [r7, #72]
 3087 0012 02F0FF14 		and	r4, r2, #16711935
 3088 0016 03F0FF15 		and	r5, r3, #16711935
 3089 001a C7E91C45 		strd	r4, [r7, #112]
 306:aes256ctr.c   **** 	x1 = q1 & (uint64_t)0x00FF00FF00FF00FF;
 3090              		.loc 1 306 5
 3091 001e D7E92623 		ldrd	r2, [r7, #152]
 3092 0022 02F0FF18 		and	r8, r2, #16711935
 3093 0026 03F0FF19 		and	r9, r3, #16711935
 3094 002a C7E91A89 		strd	r8, [r7, #104]
 307:aes256ctr.c   **** 	x2 = (q0 >> 8) & (uint64_t)0x00FF00FF00FF00FF;
 3095              		.loc 1 307 11
 3096 002e D7E91223 		ldrd	r2, [r7, #72]
 3097 0032 4FF00000 		mov	r0, #0
 3098 0036 4FF00001 		mov	r1, #0
 3099 003a 100A     		lsrs	r0, r2, #8
 3100 003c 40EA0360 		orr	r0, r0, r3, lsl #24
 3101 0040 190A     		lsrs	r1, r3, #8
 3102              		.loc 1 307 5
 3103 0042 00F0FF1A 		and	r10, r0, #16711935
 3104 0046 01F0FF1B 		and	fp, r1, #16711935
 3105 004a C7E918AB 		strd	r10, [r7, #96]
 308:aes256ctr.c   **** 	x3 = (q1 >> 8) & (uint64_t)0x00FF00FF00FF00FF;
 3106              		.loc 1 308 11
 3107 004e D7E92623 		ldrd	r2, [r7, #152]
 3108 0052 4FF00000 		mov	r0, #0
 3109 0056 4FF00001 		mov	r1, #0
 3110 005a 100A     		lsrs	r0, r2, #8
 3111 005c 40EA0360 		orr	r0, r0, r3, lsl #24
 3112 0060 190A     		lsrs	r1, r3, #8
 3113              		.loc 1 308 5
 3114 0062 00F0FF13 		and	r3, r0, #16711935
 3115 0066 3B64     		str	r3, [r7, #64]
 3116 0068 01F0FF13 		and	r3, r1, #16711935
 3117 006c 7B64     		str	r3, [r7, #68]
 3118 006e D7E91034 		ldrd	r3, [r7, #64]
 3119 0072 C7E91634 		strd	r3, [r7, #88]
 309:aes256ctr.c   **** 	x0 |= (x0 >> 8);
 3120              		.loc 1 309 12
 3121 0076 D7E91C23 		ldrd	r2, [r7, #112]
 3122 007a 4FF00000 		mov	r0, #0
 3123 007e 4FF00001 		mov	r1, #0
 3124 0082 100A     		lsrs	r0, r2, #8
 3125 0084 40EA0360 		orr	r0, r0, r3, lsl #24
 3126 0088 190A     		lsrs	r1, r3, #8
 3127              		.loc 1 309 5
 3128 008a D7E91C23 		ldrd	r2, [r7, #112]
 3129 008e 42EA0004 		orr	r4, r2, r0
 3130 0092 BC63     		str	r4, [r7, #56]
 3131 0094 0B43     		orrs	r3, r3, r1
 3132 0096 FB63     		str	r3, [r7, #60]
 3133 0098 D7E90E34 		ldrd	r3, [r7, #56]
 3134 009c C7E91C34 		strd	r3, [r7, #112]
 310:aes256ctr.c   **** 	x1 |= (x1 >> 8);
 3135              		.loc 1 310 12
 3136 00a0 D7E91A23 		ldrd	r2, [r7, #104]
 3137 00a4 4FF00000 		mov	r0, #0
 3138 00a8 4FF00001 		mov	r1, #0
 3139 00ac 100A     		lsrs	r0, r2, #8
 3140 00ae 40EA0360 		orr	r0, r0, r3, lsl #24
 3141 00b2 190A     		lsrs	r1, r3, #8
 3142              		.loc 1 310 5
 3143 00b4 D7E91A23 		ldrd	r2, [r7, #104]
 3144 00b8 42EA0004 		orr	r4, r2, r0
 3145 00bc 3C63     		str	r4, [r7, #48]
 3146 00be 0B43     		orrs	r3, r3, r1
 3147 00c0 7B63     		str	r3, [r7, #52]
 3148 00c2 D7E90C34 		ldrd	r3, [r7, #48]
 3149 00c6 C7E91A34 		strd	r3, [r7, #104]
 311:aes256ctr.c   **** 	x2 |= (x2 >> 8);
 3150              		.loc 1 311 12
 3151 00ca D7E91823 		ldrd	r2, [r7, #96]
 3152 00ce 4FF00000 		mov	r0, #0
 3153 00d2 4FF00001 		mov	r1, #0
 3154 00d6 100A     		lsrs	r0, r2, #8
 3155 00d8 40EA0360 		orr	r0, r0, r3, lsl #24
 3156 00dc 190A     		lsrs	r1, r3, #8
 3157              		.loc 1 311 5
 3158 00de D7E91823 		ldrd	r2, [r7, #96]
 3159 00e2 42EA0004 		orr	r4, r2, r0
 3160 00e6 BC62     		str	r4, [r7, #40]
 3161 00e8 0B43     		orrs	r3, r3, r1
 3162 00ea FB62     		str	r3, [r7, #44]
 3163 00ec D7E90A34 		ldrd	r3, [r7, #40]
 3164 00f0 C7E91834 		strd	r3, [r7, #96]
 312:aes256ctr.c   **** 	x3 |= (x3 >> 8);
 3165              		.loc 1 312 12
 3166 00f4 D7E91623 		ldrd	r2, [r7, #88]
 3167 00f8 4FF00000 		mov	r0, #0
 3168 00fc 4FF00001 		mov	r1, #0
 3169 0100 100A     		lsrs	r0, r2, #8
 3170 0102 40EA0360 		orr	r0, r0, r3, lsl #24
 3171 0106 190A     		lsrs	r1, r3, #8
 3172              		.loc 1 312 5
 3173 0108 D7E91623 		ldrd	r2, [r7, #88]
 3174 010c 42EA0004 		orr	r4, r2, r0
 3175 0110 3C62     		str	r4, [r7, #32]
 3176 0112 0B43     		orrs	r3, r3, r1
 3177 0114 7B62     		str	r3, [r7, #36]
 3178 0116 D7E90834 		ldrd	r3, [r7, #32]
 3179 011a C7E91634 		strd	r3, [r7, #88]
 313:aes256ctr.c   **** 	x0 &= (uint64_t)0x0000FFFF0000FFFF;
 3180              		.loc 1 313 5
 3181 011e D7E91C23 		ldrd	r2, [r7, #112]
 3182 0122 4FF6FF70 		movw	r0, #65535
 3183 0126 4FF6FF71 		movw	r1, #65535
 3184 012a 02EA0004 		and	r4, r2, r0
 3185 012e BC61     		str	r4, [r7, #24]
 3186 0130 0B40     		ands	r3, r3, r1
 3187 0132 FB61     		str	r3, [r7, #28]
 3188 0134 D7E90634 		ldrd	r3, [r7, #24]
 3189 0138 C7E91C34 		strd	r3, [r7, #112]
 314:aes256ctr.c   **** 	x1 &= (uint64_t)0x0000FFFF0000FFFF;
 3190              		.loc 1 314 5
 3191 013c D7E91A23 		ldrd	r2, [r7, #104]
 3192 0140 4FF6FF70 		movw	r0, #65535
 3193 0144 4FF6FF71 		movw	r1, #65535
 3194 0148 02EA0004 		and	r4, r2, r0
 3195 014c 3C61     		str	r4, [r7, #16]
 3196 014e 0B40     		ands	r3, r3, r1
 3197 0150 7B61     		str	r3, [r7, #20]
 3198 0152 D7E90434 		ldrd	r3, [r7, #16]
 3199 0156 C7E91A34 		strd	r3, [r7, #104]
 315:aes256ctr.c   **** 	x2 &= (uint64_t)0x0000FFFF0000FFFF;
 3200              		.loc 1 315 5
 3201 015a D7E91823 		ldrd	r2, [r7, #96]
 3202 015e 4FF6FF70 		movw	r0, #65535
 3203 0162 4FF6FF71 		movw	r1, #65535
 3204 0166 02EA0004 		and	r4, r2, r0
 3205 016a BC60     		str	r4, [r7, #8]
 3206 016c 0B40     		ands	r3, r3, r1
 3207 016e FB60     		str	r3, [r7, #12]
 3208 0170 D7E90234 		ldrd	r3, [r7, #8]
 3209 0174 C7E91834 		strd	r3, [r7, #96]
 316:aes256ctr.c   **** 	x3 &= (uint64_t)0x0000FFFF0000FFFF;
 3210              		.loc 1 316 5
 3211 0178 D7E91623 		ldrd	r2, [r7, #88]
 3212 017c 4FF6FF70 		movw	r0, #65535
 3213 0180 4FF6FF71 		movw	r1, #65535
 3214 0184 02EA0004 		and	r4, r2, r0
 3215 0188 3C60     		str	r4, [r7]
 3216 018a 0B40     		ands	r3, r3, r1
 3217 018c 7B60     		str	r3, [r7, #4]
 3218 018e D7E90034 		ldrd	r3, [r7]
 3219 0192 C7E91634 		strd	r3, [r7, #88]
 317:aes256ctr.c   **** 	w[0] = (uint32_t)x0 | (uint32_t)(x0 >> 16);
 3220              		.loc 1 317 9
 3221 0196 3C6F     		ldr	r4, [r7, #112]
 3222              		.loc 1 317 38
 3223 0198 D7E91C01 		ldrd	r0, [r7, #112]
 3224 019c 4FF00002 		mov	r2, #0
 3225 01a0 4FF00003 		mov	r3, #0
 3226 01a4 020C     		lsrs	r2, r0, #16
 3227 01a6 42EA0142 		orr	r2, r2, r1, lsl #16
 3228 01aa 0B0C     		lsrs	r3, r1, #16
 3229              		.loc 1 317 24
 3230 01ac 1346     		mov	r3, r2
 3231              		.loc 1 317 22
 3232 01ae 44EA0302 		orr	r2, r4, r3
 3233              		.loc 1 317 7
 3234 01b2 7B6D     		ldr	r3, [r7, #84]
 3235 01b4 1A60     		str	r2, [r3]
 318:aes256ctr.c   **** 	w[1] = (uint32_t)x1 | (uint32_t)(x1 >> 16);
 3236              		.loc 1 318 9
 3237 01b6 BC6E     		ldr	r4, [r7, #104]
 3238              		.loc 1 318 38
 3239 01b8 D7E91A01 		ldrd	r0, [r7, #104]
 3240 01bc 4FF00002 		mov	r2, #0
 3241 01c0 4FF00003 		mov	r3, #0
 3242 01c4 020C     		lsrs	r2, r0, #16
 3243 01c6 42EA0142 		orr	r2, r2, r1, lsl #16
 3244 01ca 0B0C     		lsrs	r3, r1, #16
 3245              		.loc 1 318 3
 3246 01cc 7B6D     		ldr	r3, [r7, #84]
 3247 01ce 0433     		adds	r3, r3, #4
 3248              		.loc 1 318 22
 3249 01d0 2243     		orrs	r2, r2, r4
 3250              		.loc 1 318 7
 3251 01d2 1A60     		str	r2, [r3]
 319:aes256ctr.c   **** 	w[2] = (uint32_t)x2 | (uint32_t)(x2 >> 16);
 3252              		.loc 1 319 9
 3253 01d4 3C6E     		ldr	r4, [r7, #96]
 3254              		.loc 1 319 38
 3255 01d6 D7E91801 		ldrd	r0, [r7, #96]
 3256 01da 4FF00002 		mov	r2, #0
 3257 01de 4FF00003 		mov	r3, #0
 3258 01e2 020C     		lsrs	r2, r0, #16
 3259 01e4 42EA0142 		orr	r2, r2, r1, lsl #16
 3260 01e8 0B0C     		lsrs	r3, r1, #16
 3261              		.loc 1 319 3
 3262 01ea 7B6D     		ldr	r3, [r7, #84]
 3263 01ec 0833     		adds	r3, r3, #8
 3264              		.loc 1 319 22
 3265 01ee 2243     		orrs	r2, r2, r4
 3266              		.loc 1 319 7
 3267 01f0 1A60     		str	r2, [r3]
 320:aes256ctr.c   **** 	w[3] = (uint32_t)x3 | (uint32_t)(x3 >> 16);
 3268              		.loc 1 320 9
 3269 01f2 BC6D     		ldr	r4, [r7, #88]
 3270              		.loc 1 320 38
 3271 01f4 D7E91601 		ldrd	r0, [r7, #88]
 3272 01f8 4FF00002 		mov	r2, #0
 3273 01fc 4FF00003 		mov	r3, #0
 3274 0200 020C     		lsrs	r2, r0, #16
 3275 0202 42EA0142 		orr	r2, r2, r1, lsl #16
 3276 0206 0B0C     		lsrs	r3, r1, #16
 3277              		.loc 1 320 3
 3278 0208 7B6D     		ldr	r3, [r7, #84]
 3279 020a 0C33     		adds	r3, r3, #12
 3280              		.loc 1 320 22
 3281 020c 2243     		orrs	r2, r2, r4
 3282              		.loc 1 320 7
 3283 020e 1A60     		str	r2, [r3]
 321:aes256ctr.c   **** }
 3284              		.loc 1 321 1
 3285 0210 00BF     		nop
 3286 0212 7C37     		adds	r7, r7, #124
 3287              	.LCFI49:
 3288              		.cfi_def_cfa_offset 28
 3289 0214 BD46     		mov	sp, r7
 3290              	.LCFI50:
 3291              		.cfi_def_cfa_register 13
 3292              		@ sp needed
 3293 0216 BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 3294              	.LCFI51:
 3295              		.cfi_restore 11
 3296              		.cfi_restore 10
 3297              		.cfi_restore 9
 3298              		.cfi_restore 8
 3299              		.cfi_restore 7
 3300              		.cfi_restore 5
 3301              		.cfi_restore 4
 3302              		.cfi_def_cfa_offset 0
 3303 021a 7047     		bx	lr
 3304              		.cfi_endproc
 3305              	.LFE8:
 3307              		.section	.rodata
 3308              		.align	2
 3311              	Rcon:
 3312 0000 01020408 		.ascii	"\001\002\004\010\020 @\200\0336"
 3312      10204080 
 3312      1B36
 3313              		.section	.text.sub_word,"ax",%progbits
 3314              		.align	1
 3315              		.syntax unified
 3316              		.thumb
 3317              		.thumb_func
 3318              		.fpu softvfp
 3320              	sub_word:
 3321              	.LFB9:
 322:aes256ctr.c   **** 
 323:aes256ctr.c   **** static const uint8_t Rcon[] = {
 324:aes256ctr.c   **** 	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36
 325:aes256ctr.c   **** };
 326:aes256ctr.c   **** 
 327:aes256ctr.c   **** static uint32_t sub_word(uint32_t x)
 328:aes256ctr.c   **** {
 3322              		.loc 1 328 1
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 72
 3325              		@ frame_needed = 1, uses_anonymous_args = 0
 3326 0000 B0B5     		push	{r4, r5, r7, lr}
 3327              	.LCFI52:
 3328              		.cfi_def_cfa_offset 16
 3329              		.cfi_offset 4, -16
 3330              		.cfi_offset 5, -12
 3331              		.cfi_offset 7, -8
 3332              		.cfi_offset 14, -4
 3333 0002 92B0     		sub	sp, sp, #72
 3334              	.LCFI53:
 3335              		.cfi_def_cfa_offset 88
 3336 0004 00AF     		add	r7, sp, #0
 3337              	.LCFI54:
 3338              		.cfi_def_cfa_register 7
 3339 0006 7860     		str	r0, [r7, #4]
 329:aes256ctr.c   **** 	uint64_t q[8];
 330:aes256ctr.c   **** 
 331:aes256ctr.c   **** 	memset(q, 0, sizeof q);
 3340              		.loc 1 331 2
 3341 0008 07F10803 		add	r3, r7, #8
 3342 000c 4022     		movs	r2, #64
 3343 000e 0021     		movs	r1, #0
 3344 0010 1846     		mov	r0, r3
 3345 0012 FFF7FEFF 		bl	memset
 332:aes256ctr.c   **** 	q[0] = x;
 3346              		.loc 1 332 7
 3347 0016 7B68     		ldr	r3, [r7, #4]
 3348 0018 0022     		movs	r2, #0
 3349 001a 1C46     		mov	r4, r3
 3350 001c 1546     		mov	r5, r2
 3351 001e C7E90245 		strd	r4, [r7, #8]
 333:aes256ctr.c   **** 	br_aes_ct64_ortho(q);
 3352              		.loc 1 333 2
 3353 0022 07F10803 		add	r3, r7, #8
 3354 0026 1846     		mov	r0, r3
 3355 0028 FFF7FEFF 		bl	br_aes_ct64_ortho
 334:aes256ctr.c   **** 	br_aes_ct64_bitslice_Sbox(q);
 3356              		.loc 1 334 2
 3357 002c 07F10803 		add	r3, r7, #8
 3358 0030 1846     		mov	r0, r3
 3359 0032 FFF7FEFF 		bl	br_aes_ct64_bitslice_Sbox
 335:aes256ctr.c   **** 	br_aes_ct64_ortho(q);
 3360              		.loc 1 335 2
 3361 0036 07F10803 		add	r3, r7, #8
 3362 003a 1846     		mov	r0, r3
 3363 003c FFF7FEFF 		bl	br_aes_ct64_ortho
 336:aes256ctr.c   **** 	return (uint32_t)q[0];
 3364              		.loc 1 336 20
 3365 0040 D7E90223 		ldrd	r2, [r7, #8]
 3366              		.loc 1 336 9
 3367 0044 1346     		mov	r3, r2
 337:aes256ctr.c   **** }
 3368              		.loc 1 337 1
 3369 0046 1846     		mov	r0, r3
 3370 0048 4837     		adds	r7, r7, #72
 3371              	.LCFI55:
 3372              		.cfi_def_cfa_offset 16
 3373 004a BD46     		mov	sp, r7
 3374              	.LCFI56:
 3375              		.cfi_def_cfa_register 13
 3376              		@ sp needed
 3377 004c B0BD     		pop	{r4, r5, r7, pc}
 3378              		.cfi_endproc
 3379              	.LFE9:
 3381              		.section	.text.br_aes_ct64_keysched,"ax",%progbits
 3382              		.align	1
 3383              		.syntax unified
 3384              		.thumb
 3385              		.thumb_func
 3386              		.fpu softvfp
 3388              	br_aes_ct64_keysched:
 3389              	.LFB10:
 338:aes256ctr.c   **** 
 339:aes256ctr.c   **** static void br_aes_ct64_keysched(uint64_t *comp_skey, const uint8_t *key)
 340:aes256ctr.c   **** {
 3390              		.loc 1 340 1
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 432
 3393              		@ frame_needed = 1, uses_anonymous_args = 0
 3394 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 3395              	.LCFI57:
 3396              		.cfi_def_cfa_offset 32
 3397              		.cfi_offset 4, -32
 3398              		.cfi_offset 5, -28
 3399              		.cfi_offset 7, -24
 3400              		.cfi_offset 8, -20
 3401              		.cfi_offset 9, -16
 3402              		.cfi_offset 10, -12
 3403              		.cfi_offset 11, -8
 3404              		.cfi_offset 14, -4
 3405 0004 ECB0     		sub	sp, sp, #432
 3406              	.LCFI58:
 3407              		.cfi_def_cfa_offset 464
 3408 0006 00AF     		add	r7, sp, #0
 3409              	.LCFI59:
 3410              		.cfi_def_cfa_register 7
 3411 0008 07F5D873 		add	r3, r7, #432
 3412 000c A3F5AA73 		sub	r3, r3, #340
 3413 0010 1860     		str	r0, [r3]
 3414 0012 07F5D873 		add	r3, r7, #432
 3415 0016 A3F5AC73 		sub	r3, r3, #344
 3416 001a 1960     		str	r1, [r3]
 341:aes256ctr.c   **** 	int i, j, k, nk, nkf;
 342:aes256ctr.c   **** 	uint32_t tmp;
 343:aes256ctr.c   **** 	uint32_t skey[60];
 344:aes256ctr.c   **** 
 345:aes256ctr.c   **** 	int key_len = 32;
 3417              		.loc 1 345 6
 3418 001c 2023     		movs	r3, #32
 3419 001e C7F89C31 		str	r3, [r7, #412]
 346:aes256ctr.c   **** 
 347:aes256ctr.c   **** 	nk = (int)(key_len >> 2);
 3420              		.loc 1 347 5
 3421 0022 D7F89C31 		ldr	r3, [r7, #412]
 3422 0026 9B10     		asrs	r3, r3, #2
 3423 0028 C7F89831 		str	r3, [r7, #408]
 348:aes256ctr.c   **** 	nkf = (int)((14 + 1) << 2);
 3424              		.loc 1 348 6
 3425 002c 3C23     		movs	r3, #60
 3426 002e C7F89431 		str	r3, [r7, #404]
 349:aes256ctr.c   **** 	br_range_dec32le(skey, (key_len >> 2), key);
 3427              		.loc 1 349 34
 3428 0032 D7F89C31 		ldr	r3, [r7, #412]
 3429 0036 9B10     		asrs	r3, r3, #2
 3430              		.loc 1 349 2
 3431 0038 1946     		mov	r1, r3
 3432 003a 07F5D873 		add	r3, r7, #432
 3433 003e A3F5AC73 		sub	r3, r3, #344
 3434 0042 07F1A400 		add	r0, r7, #164
 3435 0046 1A68     		ldr	r2, [r3]
 3436 0048 FFF7FEFF 		bl	br_range_dec32le
 350:aes256ctr.c   **** 	tmp = skey[(key_len >> 2) - 1];
 3437              		.loc 1 350 22
 3438 004c D7F89C31 		ldr	r3, [r7, #412]
 3439 0050 9B10     		asrs	r3, r3, #2
 3440              		.loc 1 350 28
 3441 0052 5A1E     		subs	r2, r3, #1
 3442              		.loc 1 350 6
 3443 0054 07F5D873 		add	r3, r7, #432
 3444 0058 A3F58673 		sub	r3, r3, #268
 3445 005c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3446 0060 C7F8A031 		str	r3, [r7, #416]
 351:aes256ctr.c   **** 	for (i = nk, j = 0, k = 0; i < nkf; i ++) {
 3447              		.loc 1 351 9
 3448 0064 D7F89831 		ldr	r3, [r7, #408]
 3449 0068 C7F8AC31 		str	r3, [r7, #428]
 3450              		.loc 1 351 17
 3451 006c 0023     		movs	r3, #0
 3452 006e C7F8A831 		str	r3, [r7, #424]
 3453              		.loc 1 351 24
 3454 0072 0023     		movs	r3, #0
 3455 0074 C7F8A431 		str	r3, [r7, #420]
 3456              		.loc 1 351 2
 3457 0078 57E0     		b	.L19
 3458              	.L23:
 352:aes256ctr.c   **** 		if (j == 0) {
 3459              		.loc 1 352 6
 3460 007a D7F8A831 		ldr	r3, [r7, #424]
 3461 007e 002B     		cmp	r3, #0
 3462 0080 13D1     		bne	.L20
 353:aes256ctr.c   **** 			tmp = (tmp << 24) | (tmp >> 8);
 3463              		.loc 1 353 8
 3464 0082 D7F8A031 		ldr	r3, [r7, #416]
 3465 0086 4FEA3323 		ror	r3, r3, #8
 3466 008a C7F8A031 		str	r3, [r7, #416]
 354:aes256ctr.c   **** 			tmp = sub_word(tmp) ^ Rcon[k];
 3467              		.loc 1 354 10
 3468 008e D7F8A001 		ldr	r0, [r7, #416]
 3469 0092 FFF7FEFF 		bl	sub_word
 3470 0096 0146     		mov	r1, r0
 3471              		.loc 1 354 30
 3472 0098 BD4A     		ldr	r2, .L26
 3473 009a D7F8A431 		ldr	r3, [r7, #420]
 3474 009e 1344     		add	r3, r3, r2
 3475 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3476              		.loc 1 354 8
 3477 00a2 4B40     		eors	r3, r3, r1
 3478 00a4 C7F8A031 		str	r3, [r7, #416]
 3479 00a8 0DE0     		b	.L21
 3480              	.L20:
 355:aes256ctr.c   **** 		} else if (nk > 6 && j == 4) {
 3481              		.loc 1 355 13
 3482 00aa D7F89831 		ldr	r3, [r7, #408]
 3483 00ae 062B     		cmp	r3, #6
 3484 00b0 09DD     		ble	.L21
 3485              		.loc 1 355 21 discriminator 1
 3486 00b2 D7F8A831 		ldr	r3, [r7, #424]
 3487 00b6 042B     		cmp	r3, #4
 3488 00b8 05D1     		bne	.L21
 356:aes256ctr.c   **** 			tmp = sub_word(tmp);
 3489              		.loc 1 356 10
 3490 00ba D7F8A001 		ldr	r0, [r7, #416]
 3491 00be FFF7FEFF 		bl	sub_word
 3492 00c2 C7F8A001 		str	r0, [r7, #416]
 3493              	.L21:
 357:aes256ctr.c   **** 		}
 358:aes256ctr.c   **** 		tmp ^= skey[i - nk];
 3494              		.loc 1 358 17
 3495 00c6 D7F8AC21 		ldr	r2, [r7, #428]
 3496 00ca D7F89831 		ldr	r3, [r7, #408]
 3497 00ce D21A     		subs	r2, r2, r3
 3498              		.loc 1 358 14
 3499 00d0 07F5D873 		add	r3, r7, #432
 3500 00d4 A3F58673 		sub	r3, r3, #268
 3501 00d8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 3502              		.loc 1 358 7
 3503 00dc D7F8A031 		ldr	r3, [r7, #416]
 3504 00e0 5340     		eors	r3, r3, r2
 3505 00e2 C7F8A031 		str	r3, [r7, #416]
 359:aes256ctr.c   **** 		skey[i] = tmp;
 3506              		.loc 1 359 11
 3507 00e6 07F5D873 		add	r3, r7, #432
 3508 00ea A3F58671 		sub	r1, r3, #268
 3509 00ee D7F8AC21 		ldr	r2, [r7, #428]
 3510 00f2 D7F8A031 		ldr	r3, [r7, #416]
 3511 00f6 41F82230 		str	r3, [r1, r2, lsl #2]
 360:aes256ctr.c   **** 		if (++ j == nk) {
 3512              		.loc 1 360 6
 3513 00fa D7F8A831 		ldr	r3, [r7, #424]
 3514 00fe 0133     		adds	r3, r3, #1
 3515 0100 C7F8A831 		str	r3, [r7, #424]
 3516 0104 D7F8A821 		ldr	r2, [r7, #424]
 3517 0108 D7F89831 		ldr	r3, [r7, #408]
 3518 010c 9A42     		cmp	r2, r3
 3519 010e 07D1     		bne	.L22
 361:aes256ctr.c   **** 			j = 0;
 3520              		.loc 1 361 6
 3521 0110 0023     		movs	r3, #0
 3522 0112 C7F8A831 		str	r3, [r7, #424]
 362:aes256ctr.c   **** 			k ++;
 3523              		.loc 1 362 6
 3524 0116 D7F8A431 		ldr	r3, [r7, #420]
 3525 011a 0133     		adds	r3, r3, #1
 3526 011c C7F8A431 		str	r3, [r7, #420]
 3527              	.L22:
 351:aes256ctr.c   **** 		if (j == 0) {
 3528              		.loc 1 351 40 discriminator 2
 3529 0120 D7F8AC31 		ldr	r3, [r7, #428]
 3530 0124 0133     		adds	r3, r3, #1
 3531 0126 C7F8AC31 		str	r3, [r7, #428]
 3532              	.L19:
 351:aes256ctr.c   **** 		if (j == 0) {
 3533              		.loc 1 351 2 discriminator 1
 3534 012a D7F8AC21 		ldr	r2, [r7, #428]
 3535 012e D7F89431 		ldr	r3, [r7, #404]
 3536 0132 9A42     		cmp	r2, r3
 3537 0134 A1DB     		blt	.L23
 363:aes256ctr.c   **** 		}
 364:aes256ctr.c   **** 	}
 365:aes256ctr.c   **** 
 366:aes256ctr.c   **** 	for (i = 0, j = 0; i < nkf; i += 4, j += 2) {
 3538              		.loc 1 366 9
 3539 0136 0023     		movs	r3, #0
 3540 0138 C7F8AC31 		str	r3, [r7, #428]
 3541              		.loc 1 366 16
 3542 013c 0023     		movs	r3, #0
 3543 013e C7F8A831 		str	r3, [r7, #424]
 3544              		.loc 1 366 2
 3545 0142 17E1     		b	.L24
 3546              	.L25:
 3547              	.LBB14:
 367:aes256ctr.c   **** 		uint64_t q[8];
 368:aes256ctr.c   **** 
 369:aes256ctr.c   **** 		br_aes_ct64_interleave_in(&q[0], &q[4], skey + i);
 3548              		.loc 1 369 48 discriminator 3
 3549 0144 D7F8AC31 		ldr	r3, [r7, #428]
 3550 0148 9A00     		lsls	r2, r3, #2
 3551              		.loc 1 369 3 discriminator 3
 3552 014a 07F1A403 		add	r3, r7, #164
 3553 014e 1A44     		add	r2, r2, r3
 3554 0150 07F16003 		add	r3, r7, #96
 3555 0154 03F12001 		add	r1, r3, #32
 3556 0158 07F16003 		add	r3, r7, #96
 3557 015c 1846     		mov	r0, r3
 3558 015e FFF7FEFF 		bl	br_aes_ct64_interleave_in
 370:aes256ctr.c   **** 		q[1] = q[0];
 3559              		.loc 1 370 11 discriminator 3
 3560 0162 07F5D873 		add	r3, r7, #432
 3561 0166 A3F5A873 		sub	r3, r3, #336
 3562 016a D3E90001 		ldrd	r0, [r3]
 3563              		.loc 1 370 8 discriminator 3
 3564 016e 07F5D873 		add	r3, r7, #432
 3565 0172 A3F5A873 		sub	r3, r3, #336
 3566 0176 C3E90201 		strd	r0, [r3, #8]
 371:aes256ctr.c   **** 		q[2] = q[0];
 3567              		.loc 1 371 11 discriminator 3
 3568 017a 07F5D873 		add	r3, r7, #432
 3569 017e A3F5A873 		sub	r3, r3, #336
 3570 0182 D3E90001 		ldrd	r0, [r3]
 3571              		.loc 1 371 8 discriminator 3
 3572 0186 07F5D873 		add	r3, r7, #432
 3573 018a A3F5A873 		sub	r3, r3, #336
 3574 018e C3E90401 		strd	r0, [r3, #16]
 372:aes256ctr.c   **** 		q[3] = q[0];
 3575              		.loc 1 372 11 discriminator 3
 3576 0192 07F5D873 		add	r3, r7, #432
 3577 0196 A3F5A873 		sub	r3, r3, #336
 3578 019a D3E90001 		ldrd	r0, [r3]
 3579              		.loc 1 372 8 discriminator 3
 3580 019e 07F5D873 		add	r3, r7, #432
 3581 01a2 A3F5A873 		sub	r3, r3, #336
 3582 01a6 C3E90601 		strd	r0, [r3, #24]
 373:aes256ctr.c   **** 		q[5] = q[4];
 3583              		.loc 1 373 11 discriminator 3
 3584 01aa 07F5D873 		add	r3, r7, #432
 3585 01ae A3F5A873 		sub	r3, r3, #336
 3586 01b2 D3E90801 		ldrd	r0, [r3, #32]
 3587              		.loc 1 373 8 discriminator 3
 3588 01b6 07F5D873 		add	r3, r7, #432
 3589 01ba A3F5A873 		sub	r3, r3, #336
 3590 01be C3E90A01 		strd	r0, [r3, #40]
 374:aes256ctr.c   **** 		q[6] = q[4];
 3591              		.loc 1 374 11 discriminator 3
 3592 01c2 07F5D873 		add	r3, r7, #432
 3593 01c6 A3F5A873 		sub	r3, r3, #336
 3594 01ca D3E90801 		ldrd	r0, [r3, #32]
 3595              		.loc 1 374 8 discriminator 3
 3596 01ce 07F5D873 		add	r3, r7, #432
 3597 01d2 A3F5A873 		sub	r3, r3, #336
 3598 01d6 C3E90C01 		strd	r0, [r3, #48]
 375:aes256ctr.c   **** 		q[7] = q[4];
 3599              		.loc 1 375 11 discriminator 3
 3600 01da 07F5D873 		add	r3, r7, #432
 3601 01de A3F5A873 		sub	r3, r3, #336
 3602 01e2 D3E90801 		ldrd	r0, [r3, #32]
 3603              		.loc 1 375 8 discriminator 3
 3604 01e6 07F5D873 		add	r3, r7, #432
 3605 01ea A3F5A873 		sub	r3, r3, #336
 3606 01ee C3E90E01 		strd	r0, [r3, #56]
 376:aes256ctr.c   **** 		br_aes_ct64_ortho(q);
 3607              		.loc 1 376 3 discriminator 3
 3608 01f2 07F16003 		add	r3, r7, #96
 3609 01f6 1846     		mov	r0, r3
 3610 01f8 FFF7FEFF 		bl	br_aes_ct64_ortho
 377:aes256ctr.c   **** 		comp_skey[j + 0] =
 378:aes256ctr.c   **** 			  (q[0] & (uint64_t)0x1111111111111111)
 3611              		.loc 1 378 8 discriminator 3
 3612 01fc 07F5D873 		add	r3, r7, #432
 3613 0200 A3F5A873 		sub	r3, r3, #336
 3614 0204 D3E90023 		ldrd	r2, [r3]
 3615              		.loc 1 378 12 discriminator 3
 3616 0208 02F01131 		and	r1, r2, #286331153
 3617 020c B964     		str	r1, [r7, #72]
 3618 020e 03F01133 		and	r3, r3, #286331153
 3619 0212 FB64     		str	r3, [r7, #76]
 379:aes256ctr.c   **** 			| (q[1] & (uint64_t)0x2222222222222222)
 3620              		.loc 1 379 8 discriminator 3
 3621 0214 07F5D873 		add	r3, r7, #432
 3622 0218 A3F5A873 		sub	r3, r3, #336
 3623 021c D3E90223 		ldrd	r2, [r3, #8]
 3624              		.loc 1 379 12 discriminator 3
 3625 0220 02F02231 		and	r1, r2, #572662306
 3626 0224 3964     		str	r1, [r7, #64]
 3627 0226 03F02233 		and	r3, r3, #572662306
 3628 022a 7B64     		str	r3, [r7, #68]
 3629              		.loc 1 379 4 discriminator 3
 3630 022c D7E91201 		ldrd	r0, [r7, #72]
 3631 0230 8446     		mov	ip, r0
 3632 0232 D7E91023 		ldrd	r2, [r7, #64]
 3633 0236 9646     		mov	lr, r2
 3634 0238 4CEA0E0C 		orr	ip, ip, lr
 3635 023c C7F838C0 		str	ip, [r7, #56]
 3636 0240 0B43     		orrs	r3, r3, r1
 3637 0242 FB63     		str	r3, [r7, #60]
 380:aes256ctr.c   **** 			| (q[2] & (uint64_t)0x4444444444444444)
 3638              		.loc 1 380 8 discriminator 3
 3639 0244 07F5D873 		add	r3, r7, #432
 3640 0248 A3F5A873 		sub	r3, r3, #336
 3641 024c D3E90423 		ldrd	r2, [r3, #16]
 3642              		.loc 1 380 12 discriminator 3
 3643 0250 02F04431 		and	r1, r2, #1145324612
 3644 0254 3963     		str	r1, [r7, #48]
 3645 0256 03F04433 		and	r3, r3, #1145324612
 3646 025a 7B63     		str	r3, [r7, #52]
 3647              		.loc 1 380 4 discriminator 3
 3648 025c D7E90E01 		ldrd	r0, [r7, #56]
 3649 0260 8446     		mov	ip, r0
 3650 0262 D7E90C23 		ldrd	r2, [r7, #48]
 3651 0266 9646     		mov	lr, r2
 3652 0268 4CEA0E0C 		orr	ip, ip, lr
 3653 026c C7F850C0 		str	ip, [r7, #80]
 3654 0270 0B43     		orrs	r3, r3, r1
 3655 0272 7B65     		str	r3, [r7, #84]
 381:aes256ctr.c   **** 			| (q[3] & (uint64_t)0x8888888888888888);
 3656              		.loc 1 381 8 discriminator 3
 3657 0274 07F5D873 		add	r3, r7, #432
 3658 0278 A3F5A873 		sub	r3, r3, #336
 3659 027c D3E90623 		ldrd	r2, [r3, #24]
 3660              		.loc 1 381 12 discriminator 3
 3661 0280 02F08831 		and	r1, r2, #-2004318072
 3662 0284 B962     		str	r1, [r7, #40]
 3663 0286 03F08833 		and	r3, r3, #-2004318072
 3664 028a FB62     		str	r3, [r7, #44]
 377:aes256ctr.c   **** 			  (q[0] & (uint64_t)0x1111111111111111)
 3665              		.loc 1 377 12 discriminator 3
 3666 028c D7F8A831 		ldr	r3, [r7, #424]
 3667 0290 DA00     		lsls	r2, r3, #3
 3668 0292 07F5D873 		add	r3, r7, #432
 3669 0296 A3F5AA73 		sub	r3, r3, #340
 3670 029a 1B68     		ldr	r3, [r3]
 3671 029c 1344     		add	r3, r3, r2
 3672              		.loc 1 381 4 discriminator 3
 3673 029e 386D     		ldr	r0, [r7, #80]
 3674 02a0 D7E90A12 		ldrd	r1, [r7, #40]
 3675 02a4 8C46     		mov	ip, r1
 3676 02a6 40EA0C00 		orr	r0, r0, ip
 3677 02aa 3862     		str	r0, [r7, #32]
 3678 02ac 786D     		ldr	r0, [r7, #84]
 3679 02ae 0243     		orrs	r2, r2, r0
 3680 02b0 7A62     		str	r2, [r7, #36]
 377:aes256ctr.c   **** 			  (q[0] & (uint64_t)0x1111111111111111)
 3681              		.loc 1 377 20 discriminator 3
 3682 02b2 D7E90812 		ldrd	r1, [r7, #32]
 3683 02b6 C3E90012 		strd	r1, [r3]
 382:aes256ctr.c   **** 		comp_skey[j + 1] =
 383:aes256ctr.c   **** 			  (q[4] & (uint64_t)0x1111111111111111)
 3684              		.loc 1 383 8 discriminator 3
 3685 02ba 07F5D873 		add	r3, r7, #432
 3686 02be A3F5A873 		sub	r3, r3, #336
 3687 02c2 D3E90823 		ldrd	r2, [r3, #32]
 3688              		.loc 1 383 12 discriminator 3
 3689 02c6 02F01131 		and	r1, r2, #286331153
 3690 02ca B961     		str	r1, [r7, #24]
 3691 02cc 03F01133 		and	r3, r3, #286331153
 3692 02d0 FB61     		str	r3, [r7, #28]
 384:aes256ctr.c   **** 			| (q[5] & (uint64_t)0x2222222222222222)
 3693              		.loc 1 384 8 discriminator 3
 3694 02d2 07F5D873 		add	r3, r7, #432
 3695 02d6 A3F5A873 		sub	r3, r3, #336
 3696 02da D3E90A23 		ldrd	r2, [r3, #40]
 3697              		.loc 1 384 12 discriminator 3
 3698 02de 02F02231 		and	r1, r2, #572662306
 3699 02e2 3961     		str	r1, [r7, #16]
 3700 02e4 03F02233 		and	r3, r3, #572662306
 3701 02e8 7B61     		str	r3, [r7, #20]
 3702              		.loc 1 384 4 discriminator 3
 3703 02ea D7E90601 		ldrd	r0, [r7, #24]
 3704 02ee 8446     		mov	ip, r0
 3705 02f0 D7E90423 		ldrd	r2, [r7, #16]
 3706 02f4 9646     		mov	lr, r2
 3707 02f6 4CEA0E0C 		orr	ip, ip, lr
 3708 02fa C7F808C0 		str	ip, [r7, #8]
 3709 02fe 0B43     		orrs	r3, r3, r1
 3710 0300 FB60     		str	r3, [r7, #12]
 385:aes256ctr.c   **** 			| (q[6] & (uint64_t)0x4444444444444444)
 3711              		.loc 1 385 8 discriminator 3
 3712 0302 07F5D873 		add	r3, r7, #432
 3713 0306 A3F5A873 		sub	r3, r3, #336
 3714 030a D3E90C23 		ldrd	r2, [r3, #48]
 3715              		.loc 1 385 12 discriminator 3
 3716 030e 02F0443A 		and	r10, r2, #1145324612
 3717 0312 03F0443B 		and	fp, r3, #1145324612
 3718              		.loc 1 385 4 discriminator 3
 3719 0316 D7E90223 		ldrd	r2, [r7, #8]
 3720 031a 1146     		mov	r1, r2
 3721 031c 41EA0A08 		orr	r8, r1, r10
 3722 0320 43EA0B09 		orr	r9, r3, fp
 386:aes256ctr.c   **** 			| (q[7] & (uint64_t)0x8888888888888888);
 3723              		.loc 1 386 8 discriminator 3
 3724 0324 07F5D873 		add	r3, r7, #432
 3725 0328 A3F5A873 		sub	r3, r3, #336
 3726 032c D3E90E23 		ldrd	r2, [r3, #56]
 3727              		.loc 1 386 12 discriminator 3
 3728 0330 02F08834 		and	r4, r2, #-2004318072
 3729 0334 03F08835 		and	r5, r3, #-2004318072
 382:aes256ctr.c   **** 			  (q[4] & (uint64_t)0x1111111111111111)
 3730              		.loc 1 382 12 discriminator 3
 3731 0338 D7F8A831 		ldr	r3, [r7, #424]
 3732 033c 0133     		adds	r3, r3, #1
 3733 033e DA00     		lsls	r2, r3, #3
 3734 0340 07F5D873 		add	r3, r7, #432
 3735 0344 A3F5AA73 		sub	r3, r3, #340
 3736 0348 1B68     		ldr	r3, [r3]
 3737 034a 1344     		add	r3, r3, r2
 3738              		.loc 1 386 4 discriminator 3
 3739 034c 48EA0402 		orr	r2, r8, r4
 3740 0350 3A60     		str	r2, [r7]
 3741 0352 49EA0502 		orr	r2, r9, r5
 3742 0356 7A60     		str	r2, [r7, #4]
 382:aes256ctr.c   **** 			  (q[4] & (uint64_t)0x1111111111111111)
 3743              		.loc 1 382 20 discriminator 3
 3744 0358 D7E90012 		ldrd	r1, [r7]
 3745 035c C3E90012 		strd	r1, [r3]
 3746              	.LBE14:
 366:aes256ctr.c   **** 		uint64_t q[8];
 3747              		.loc 1 366 32 discriminator 3
 3748 0360 D7F8AC31 		ldr	r3, [r7, #428]
 3749 0364 0433     		adds	r3, r3, #4
 3750 0366 C7F8AC31 		str	r3, [r7, #428]
 366:aes256ctr.c   **** 		uint64_t q[8];
 3751              		.loc 1 366 40 discriminator 3
 3752 036a D7F8A831 		ldr	r3, [r7, #424]
 3753 036e 0233     		adds	r3, r3, #2
 3754 0370 C7F8A831 		str	r3, [r7, #424]
 3755              	.L24:
 366:aes256ctr.c   **** 		uint64_t q[8];
 3756              		.loc 1 366 2 discriminator 1
 3757 0374 D7F8AC21 		ldr	r2, [r7, #428]
 3758 0378 D7F89431 		ldr	r3, [r7, #404]
 3759 037c 9A42     		cmp	r2, r3
 3760 037e FFF6E1AE 		blt	.L25
 387:aes256ctr.c   **** 	}
 388:aes256ctr.c   **** }
 3761              		.loc 1 388 1
 3762 0382 00BF     		nop
 3763 0384 00BF     		nop
 3764 0386 07F5D877 		add	r7, r7, #432
 3765              	.LCFI60:
 3766              		.cfi_def_cfa_offset 32
 3767 038a BD46     		mov	sp, r7
 3768              	.LCFI61:
 3769              		.cfi_def_cfa_register 13
 3770              		@ sp needed
 3771 038c BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 3772              	.L27:
 3773              		.align	2
 3774              	.L26:
 3775 0390 00000000 		.word	Rcon
 3776              		.cfi_endproc
 3777              	.LFE10:
 3779              		.section	.text.br_aes_ct64_skey_expand,"ax",%progbits
 3780              		.align	1
 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3784              		.fpu softvfp
 3786              	br_aes_ct64_skey_expand:
 3787              	.LFB11:
 389:aes256ctr.c   **** 
 390:aes256ctr.c   **** static void br_aes_ct64_skey_expand(uint64_t *skey, const uint64_t *comp_skey)
 391:aes256ctr.c   **** {
 3788              		.loc 1 391 1
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 96
 3791              		@ frame_needed = 1, uses_anonymous_args = 0
 3792              		@ link register save eliminated.
 3793 0000 2DE9F00F 		push	{r4, r5, r6, r7, r8, r9, r10, fp}
 3794              	.LCFI62:
 3795              		.cfi_def_cfa_offset 32
 3796              		.cfi_offset 4, -32
 3797              		.cfi_offset 5, -28
 3798              		.cfi_offset 6, -24
 3799              		.cfi_offset 7, -20
 3800              		.cfi_offset 8, -16
 3801              		.cfi_offset 9, -12
 3802              		.cfi_offset 10, -8
 3803              		.cfi_offset 11, -4
 3804 0004 98B0     		sub	sp, sp, #96
 3805              	.LCFI63:
 3806              		.cfi_def_cfa_offset 128
 3807 0006 00AF     		add	r7, sp, #0
 3808              	.LCFI64:
 3809              		.cfi_def_cfa_register 7
 3810 0008 F862     		str	r0, [r7, #44]
 3811 000a B962     		str	r1, [r7, #40]
 392:aes256ctr.c   **** 	unsigned u, v, n;
 393:aes256ctr.c   **** 
 394:aes256ctr.c   **** 	n = (14 + 1) << 1;
 3812              		.loc 1 394 4
 3813 000c 1E23     		movs	r3, #30
 3814 000e 7B65     		str	r3, [r7, #84]
 395:aes256ctr.c   **** 	for (u = 0, v = 0; u < n; u ++, v += 4) {
 3815              		.loc 1 395 9
 3816 0010 0023     		movs	r3, #0
 3817 0012 FB65     		str	r3, [r7, #92]
 3818              		.loc 1 395 16
 3819 0014 0023     		movs	r3, #0
 3820 0016 BB65     		str	r3, [r7, #88]
 3821              		.loc 1 395 2
 3822 0018 CCE0     		b	.L29
 3823              	.L30:
 3824              	.LBB15:
 396:aes256ctr.c   **** 		uint64_t x0, x1, x2, x3;
 397:aes256ctr.c   **** 
 398:aes256ctr.c   **** 		x0 = x1 = x2 = x3 = comp_skey[u];
 3825              		.loc 1 398 32 discriminator 3
 3826 001a FB6D     		ldr	r3, [r7, #92]
 3827 001c DA00     		lsls	r2, r3, #3
 3828 001e BB6A     		ldr	r3, [r7, #40]
 3829 0020 1344     		add	r3, r3, r2
 3830              		.loc 1 398 21 discriminator 3
 3831 0022 D3E90023 		ldrd	r2, [r3]
 3832 0026 C7E91223 		strd	r2, [r7, #72]
 3833              		.loc 1 398 16 discriminator 3
 3834 002a D7E91223 		ldrd	r2, [r7, #72]
 3835 002e C7E91023 		strd	r2, [r7, #64]
 3836              		.loc 1 398 11 discriminator 3
 3837 0032 D7E91023 		ldrd	r2, [r7, #64]
 3838 0036 C7E90E23 		strd	r2, [r7, #56]
 3839              		.loc 1 398 6 discriminator 3
 3840 003a D7E90E23 		ldrd	r2, [r7, #56]
 3841 003e C7E90C23 		strd	r2, [r7, #48]
 399:aes256ctr.c   **** 		x0 &= (uint64_t)0x1111111111111111;
 3842              		.loc 1 399 6 discriminator 3
 3843 0042 D7E90C23 		ldrd	r2, [r7, #48]
 3844 0046 02F01131 		and	r1, r2, #286331153
 3845 004a B961     		str	r1, [r7, #24]
 3846 004c 03F01133 		and	r3, r3, #286331153
 3847 0050 FB61     		str	r3, [r7, #28]
 3848 0052 D7E90634 		ldrd	r3, [r7, #24]
 3849 0056 C7E90C34 		strd	r3, [r7, #48]
 400:aes256ctr.c   **** 		x1 &= (uint64_t)0x2222222222222222;
 3850              		.loc 1 400 6 discriminator 3
 3851 005a D7E90E23 		ldrd	r2, [r7, #56]
 3852 005e 02F02231 		and	r1, r2, #572662306
 3853 0062 3961     		str	r1, [r7, #16]
 3854 0064 03F02233 		and	r3, r3, #572662306
 3855 0068 7B61     		str	r3, [r7, #20]
 3856 006a D7E90434 		ldrd	r3, [r7, #16]
 3857 006e C7E90E34 		strd	r3, [r7, #56]
 401:aes256ctr.c   **** 		x2 &= (uint64_t)0x4444444444444444;
 3858              		.loc 1 401 6 discriminator 3
 3859 0072 D7E91023 		ldrd	r2, [r7, #64]
 3860 0076 02F04431 		and	r1, r2, #1145324612
 3861 007a B960     		str	r1, [r7, #8]
 3862 007c 03F04433 		and	r3, r3, #1145324612
 3863 0080 FB60     		str	r3, [r7, #12]
 3864 0082 D7E90234 		ldrd	r3, [r7, #8]
 3865 0086 C7E91034 		strd	r3, [r7, #64]
 402:aes256ctr.c   **** 		x3 &= (uint64_t)0x8888888888888888;
 3866              		.loc 1 402 6 discriminator 3
 3867 008a D7E91223 		ldrd	r2, [r7, #72]
 3868 008e 02F08831 		and	r1, r2, #-2004318072
 3869 0092 3960     		str	r1, [r7]
 3870 0094 03F08833 		and	r3, r3, #-2004318072
 3871 0098 7B60     		str	r3, [r7, #4]
 3872 009a D7E90034 		ldrd	r3, [r7]
 3873 009e C7E91234 		strd	r3, [r7, #72]
 403:aes256ctr.c   **** 		x1 >>= 1;
 3874              		.loc 1 403 6 discriminator 3
 3875 00a2 D7E90E23 		ldrd	r2, [r7, #56]
 3876 00a6 4FF00000 		mov	r0, #0
 3877 00aa 4FF00001 		mov	r1, #0
 3878 00ae 5008     		lsrs	r0, r2, #1
 3879 00b0 40EAC370 		orr	r0, r0, r3, lsl #31
 3880 00b4 5908     		lsrs	r1, r3, #1
 3881 00b6 C7E90E01 		strd	r0, [r7, #56]
 404:aes256ctr.c   **** 		x2 >>= 2;
 3882              		.loc 1 404 6 discriminator 3
 3883 00ba D7E91023 		ldrd	r2, [r7, #64]
 3884 00be 4FF00000 		mov	r0, #0
 3885 00c2 4FF00001 		mov	r1, #0
 3886 00c6 9008     		lsrs	r0, r2, #2
 3887 00c8 40EA8370 		orr	r0, r0, r3, lsl #30
 3888 00cc 9908     		lsrs	r1, r3, #2
 3889 00ce C7E91001 		strd	r0, [r7, #64]
 405:aes256ctr.c   **** 		x3 >>= 3;
 3890              		.loc 1 405 6 discriminator 3
 3891 00d2 D7E91223 		ldrd	r2, [r7, #72]
 3892 00d6 4FF00000 		mov	r0, #0
 3893 00da 4FF00001 		mov	r1, #0
 3894 00de D008     		lsrs	r0, r2, #3
 3895 00e0 40EA4370 		orr	r0, r0, r3, lsl #29
 3896 00e4 D908     		lsrs	r1, r3, #3
 3897 00e6 C7E91201 		strd	r0, [r7, #72]
 406:aes256ctr.c   **** 		skey[v + 0] = (x0 << 4) - x0;
 3898              		.loc 1 406 21 discriminator 3
 3899 00ea D7E90C23 		ldrd	r2, [r7, #48]
 3900 00ee 4FF00000 		mov	r0, #0
 3901 00f2 4FF00001 		mov	r1, #0
 3902 00f6 1901     		lsls	r1, r3, #4
 3903 00f8 41EA1271 		orr	r1, r1, r2, lsr #28
 3904 00fc 1001     		lsls	r0, r2, #4
 3905              		.loc 1 406 7 discriminator 3
 3906 00fe BB6D     		ldr	r3, [r7, #88]
 3907 0100 DA00     		lsls	r2, r3, #3
 3908 0102 FB6A     		ldr	r3, [r7, #44]
 3909 0104 9C18     		adds	r4, r3, r2
 3910              		.loc 1 406 27 discriminator 3
 3911 0106 D7E90C23 		ldrd	r2, [r7, #48]
 3912 010a B0EB020C 		subs	ip, r0, r2
 3913 010e C7F820C0 		str	ip, [r7, #32]
 3914 0112 61EB0303 		sbc	r3, r1, r3
 3915 0116 7B62     		str	r3, [r7, #36]
 3916              		.loc 1 406 15 discriminator 3
 3917 0118 D7E90823 		ldrd	r2, [r7, #32]
 3918 011c C4E90023 		strd	r2, [r4]
 407:aes256ctr.c   **** 		skey[v + 1] = (x1 << 4) - x1;
 3919              		.loc 1 407 21 discriminator 3
 3920 0120 D7E90E23 		ldrd	r2, [r7, #56]
 3921 0124 4FF00000 		mov	r0, #0
 3922 0128 4FF00001 		mov	r1, #0
 3923 012c 1901     		lsls	r1, r3, #4
 3924 012e 41EA1271 		orr	r1, r1, r2, lsr #28
 3925 0132 1001     		lsls	r0, r2, #4
 3926              		.loc 1 407 7 discriminator 3
 3927 0134 BB6D     		ldr	r3, [r7, #88]
 3928 0136 0133     		adds	r3, r3, #1
 3929 0138 DA00     		lsls	r2, r3, #3
 3930 013a FB6A     		ldr	r3, [r7, #44]
 3931 013c 9C18     		adds	r4, r3, r2
 3932              		.loc 1 407 27 discriminator 3
 3933 013e D7E90E23 		ldrd	r2, [r7, #56]
 3934 0142 851A     		subs	r5, r0, r2
 3935 0144 61EB0306 		sbc	r6, r1, r3
 3936              		.loc 1 407 15 discriminator 3
 3937 0148 C4E90056 		strd	r5, [r4]
 408:aes256ctr.c   **** 		skey[v + 2] = (x2 << 4) - x2;
 3938              		.loc 1 408 21 discriminator 3
 3939 014c D7E91023 		ldrd	r2, [r7, #64]
 3940 0150 4FF00000 		mov	r0, #0
 3941 0154 4FF00001 		mov	r1, #0
 3942 0158 1901     		lsls	r1, r3, #4
 3943 015a 41EA1271 		orr	r1, r1, r2, lsr #28
 3944 015e 1001     		lsls	r0, r2, #4
 3945              		.loc 1 408 7 discriminator 3
 3946 0160 BB6D     		ldr	r3, [r7, #88]
 3947 0162 0233     		adds	r3, r3, #2
 3948 0164 DA00     		lsls	r2, r3, #3
 3949 0166 FB6A     		ldr	r3, [r7, #44]
 3950 0168 9C18     		adds	r4, r3, r2
 3951              		.loc 1 408 27 discriminator 3
 3952 016a D7E91023 		ldrd	r2, [r7, #64]
 3953 016e B0EB020A 		subs	r10, r0, r2
 3954 0172 61EB030B 		sbc	fp, r1, r3
 3955              		.loc 1 408 15 discriminator 3
 3956 0176 C4E900AB 		strd	r10, [r4]
 409:aes256ctr.c   **** 		skey[v + 3] = (x3 << 4) - x3;
 3957              		.loc 1 409 21 discriminator 3
 3958 017a D7E91223 		ldrd	r2, [r7, #72]
 3959 017e 4FF00000 		mov	r0, #0
 3960 0182 4FF00001 		mov	r1, #0
 3961 0186 1901     		lsls	r1, r3, #4
 3962 0188 41EA1271 		orr	r1, r1, r2, lsr #28
 3963 018c 1001     		lsls	r0, r2, #4
 3964              		.loc 1 409 7 discriminator 3
 3965 018e BB6D     		ldr	r3, [r7, #88]
 3966 0190 0333     		adds	r3, r3, #3
 3967 0192 DA00     		lsls	r2, r3, #3
 3968 0194 FB6A     		ldr	r3, [r7, #44]
 3969 0196 9C18     		adds	r4, r3, r2
 3970              		.loc 1 409 27 discriminator 3
 3971 0198 D7E91223 		ldrd	r2, [r7, #72]
 3972 019c B0EB0208 		subs	r8, r0, r2
 3973 01a0 61EB0309 		sbc	r9, r1, r3
 3974              		.loc 1 409 15 discriminator 3
 3975 01a4 C4E90089 		strd	r8, [r4]
 3976              	.LBE15:
 395:aes256ctr.c   **** 		uint64_t x0, x1, x2, x3;
 3977              		.loc 1 395 30 discriminator 3
 3978 01a8 FB6D     		ldr	r3, [r7, #92]
 3979 01aa 0133     		adds	r3, r3, #1
 3980 01ac FB65     		str	r3, [r7, #92]
 395:aes256ctr.c   **** 		uint64_t x0, x1, x2, x3;
 3981              		.loc 1 395 36 discriminator 3
 3982 01ae BB6D     		ldr	r3, [r7, #88]
 3983 01b0 0433     		adds	r3, r3, #4
 3984 01b2 BB65     		str	r3, [r7, #88]
 3985              	.L29:
 395:aes256ctr.c   **** 		uint64_t x0, x1, x2, x3;
 3986              		.loc 1 395 2 discriminator 1
 3987 01b4 FA6D     		ldr	r2, [r7, #92]
 3988 01b6 7B6D     		ldr	r3, [r7, #84]
 3989 01b8 9A42     		cmp	r2, r3
 3990 01ba FFF42EAF 		bcc	.L30
 410:aes256ctr.c   **** 	}
 411:aes256ctr.c   **** }
 3991              		.loc 1 411 1
 3992 01be 00BF     		nop
 3993 01c0 00BF     		nop
 3994 01c2 6037     		adds	r7, r7, #96
 3995              	.LCFI65:
 3996              		.cfi_def_cfa_offset 32
 3997 01c4 BD46     		mov	sp, r7
 3998              	.LCFI66:
 3999              		.cfi_def_cfa_register 13
 4000              		@ sp needed
 4001 01c6 BDE8F00F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp}
 4002              	.LCFI67:
 4003              		.cfi_restore 11
 4004              		.cfi_restore 10
 4005              		.cfi_restore 9
 4006              		.cfi_restore 8
 4007              		.cfi_restore 7
 4008              		.cfi_restore 6
 4009              		.cfi_restore 5
 4010              		.cfi_restore 4
 4011              		.cfi_def_cfa_offset 0
 4012 01ca 7047     		bx	lr
 4013              		.cfi_endproc
 4014              	.LFE11:
 4016              		.section	.text.add_round_key,"ax",%progbits
 4017              		.align	1
 4018              		.syntax unified
 4019              		.thumb
 4020              		.thumb_func
 4021              		.fpu softvfp
 4023              	add_round_key:
 4024              	.LFB12:
 412:aes256ctr.c   **** 
 413:aes256ctr.c   **** static inline void add_round_key(uint64_t *q, const uint64_t *sk)
 414:aes256ctr.c   **** {
 4025              		.loc 1 414 1
 4026              		.cfi_startproc
 4027              		@ args = 0, pretend = 0, frame = 48
 4028              		@ frame_needed = 1, uses_anonymous_args = 0
 4029              		@ link register save eliminated.
 4030 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 4031              	.LCFI68:
 4032              		.cfi_def_cfa_offset 28
 4033              		.cfi_offset 4, -28
 4034              		.cfi_offset 5, -24
 4035              		.cfi_offset 7, -20
 4036              		.cfi_offset 8, -16
 4037              		.cfi_offset 9, -12
 4038              		.cfi_offset 10, -8
 4039              		.cfi_offset 11, -4
 4040 0004 8DB0     		sub	sp, sp, #52
 4041              	.LCFI69:
 4042              		.cfi_def_cfa_offset 80
 4043 0006 00AF     		add	r7, sp, #0
 4044              	.LCFI70:
 4045              		.cfi_def_cfa_register 7
 4046 0008 F862     		str	r0, [r7, #44]
 4047 000a B962     		str	r1, [r7, #40]
 415:aes256ctr.c   **** 	q[0] ^= sk[0];
 4048              		.loc 1 415 7
 4049 000c FB6A     		ldr	r3, [r7, #44]
 4050 000e D3E90001 		ldrd	r0, [r3]
 4051              		.loc 1 415 12
 4052 0012 BB6A     		ldr	r3, [r7, #40]
 4053 0014 D3E90023 		ldrd	r2, [r3]
 4054              		.loc 1 415 7
 4055 0018 80EA0204 		eor	r4, r0, r2
 4056 001c 81EA0305 		eor	r5, r1, r3
 4057 0020 FB6A     		ldr	r3, [r7, #44]
 4058 0022 C3E90045 		strd	r4, [r3]
 416:aes256ctr.c   **** 	q[1] ^= sk[1];
 4059              		.loc 1 416 7
 4060 0026 FB6A     		ldr	r3, [r7, #44]
 4061 0028 0833     		adds	r3, r3, #8
 4062 002a D3E90045 		ldrd	r4, [r3]
 4063              		.loc 1 416 12
 4064 002e BB6A     		ldr	r3, [r7, #40]
 4065 0030 0833     		adds	r3, r3, #8
 4066 0032 D3E90001 		ldrd	r0, [r3]
 4067              		.loc 1 416 7
 4068 0036 FB6A     		ldr	r3, [r7, #44]
 4069 0038 0833     		adds	r3, r3, #8
 4070 003a 84EA0008 		eor	r8, r4, r0
 4071 003e 85EA0109 		eor	r9, r5, r1
 4072 0042 C3E90089 		strd	r8, [r3]
 417:aes256ctr.c   **** 	q[2] ^= sk[2];
 4073              		.loc 1 417 7
 4074 0046 FB6A     		ldr	r3, [r7, #44]
 4075 0048 1033     		adds	r3, r3, #16
 4076 004a D3E90045 		ldrd	r4, [r3]
 4077              		.loc 1 417 12
 4078 004e BB6A     		ldr	r3, [r7, #40]
 4079 0050 1033     		adds	r3, r3, #16
 4080 0052 D3E90001 		ldrd	r0, [r3]
 4081              		.loc 1 417 7
 4082 0056 FB6A     		ldr	r3, [r7, #44]
 4083 0058 1033     		adds	r3, r3, #16
 4084 005a 84EA000A 		eor	r10, r4, r0
 4085 005e 85EA010B 		eor	fp, r5, r1
 4086 0062 C3E900AB 		strd	r10, [r3]
 418:aes256ctr.c   **** 	q[3] ^= sk[3];
 4087              		.loc 1 418 7
 4088 0066 FB6A     		ldr	r3, [r7, #44]
 4089 0068 1833     		adds	r3, r3, #24
 4090 006a D3E90045 		ldrd	r4, [r3]
 4091              		.loc 1 418 12
 4092 006e BB6A     		ldr	r3, [r7, #40]
 4093 0070 1833     		adds	r3, r3, #24
 4094 0072 D3E90001 		ldrd	r0, [r3]
 4095              		.loc 1 418 7
 4096 0076 FB6A     		ldr	r3, [r7, #44]
 4097 0078 1833     		adds	r3, r3, #24
 4098 007a 84EA0002 		eor	r2, r4, r0
 4099 007e 3A62     		str	r2, [r7, #32]
 4100 0080 85EA0102 		eor	r2, r5, r1
 4101 0084 7A62     		str	r2, [r7, #36]
 4102 0086 D7E90812 		ldrd	r1, [r7, #32]
 4103 008a C3E90012 		strd	r1, [r3]
 419:aes256ctr.c   **** 	q[4] ^= sk[4];
 4104              		.loc 1 419 7
 4105 008e FB6A     		ldr	r3, [r7, #44]
 4106 0090 2033     		adds	r3, r3, #32
 4107 0092 D3E90001 		ldrd	r0, [r3]
 4108              		.loc 1 419 12
 4109 0096 BB6A     		ldr	r3, [r7, #40]
 4110 0098 2033     		adds	r3, r3, #32
 4111 009a D3E90023 		ldrd	r2, [r3]
 4112              		.loc 1 419 7
 4113 009e FC6A     		ldr	r4, [r7, #44]
 4114 00a0 2034     		adds	r4, r4, #32
 4115 00a2 80EA0205 		eor	r5, r0, r2
 4116 00a6 BD61     		str	r5, [r7, #24]
 4117 00a8 4B40     		eors	r3, r3, r1
 4118 00aa FB61     		str	r3, [r7, #28]
 4119 00ac D7E90623 		ldrd	r2, [r7, #24]
 4120 00b0 C4E90023 		strd	r2, [r4]
 420:aes256ctr.c   **** 	q[5] ^= sk[5];
 4121              		.loc 1 420 7
 4122 00b4 FB6A     		ldr	r3, [r7, #44]
 4123 00b6 2833     		adds	r3, r3, #40
 4124 00b8 D3E90001 		ldrd	r0, [r3]
 4125              		.loc 1 420 12
 4126 00bc BB6A     		ldr	r3, [r7, #40]
 4127 00be 2833     		adds	r3, r3, #40
 4128 00c0 D3E90023 		ldrd	r2, [r3]
 4129              		.loc 1 420 7
 4130 00c4 FC6A     		ldr	r4, [r7, #44]
 4131 00c6 2834     		adds	r4, r4, #40
 4132 00c8 80EA0205 		eor	r5, r0, r2
 4133 00cc 3D61     		str	r5, [r7, #16]
 4134 00ce 4B40     		eors	r3, r3, r1
 4135 00d0 7B61     		str	r3, [r7, #20]
 4136 00d2 D7E90423 		ldrd	r2, [r7, #16]
 4137 00d6 C4E90023 		strd	r2, [r4]
 421:aes256ctr.c   **** 	q[6] ^= sk[6];
 4138              		.loc 1 421 7
 4139 00da FB6A     		ldr	r3, [r7, #44]
 4140 00dc 3033     		adds	r3, r3, #48
 4141 00de D3E90001 		ldrd	r0, [r3]
 4142              		.loc 1 421 12
 4143 00e2 BB6A     		ldr	r3, [r7, #40]
 4144 00e4 3033     		adds	r3, r3, #48
 4145 00e6 D3E90023 		ldrd	r2, [r3]
 4146              		.loc 1 421 7
 4147 00ea FC6A     		ldr	r4, [r7, #44]
 4148 00ec 3034     		adds	r4, r4, #48
 4149 00ee 80EA0205 		eor	r5, r0, r2
 4150 00f2 BD60     		str	r5, [r7, #8]
 4151 00f4 4B40     		eors	r3, r3, r1
 4152 00f6 FB60     		str	r3, [r7, #12]
 4153 00f8 D7E90223 		ldrd	r2, [r7, #8]
 4154 00fc C4E90023 		strd	r2, [r4]
 422:aes256ctr.c   **** 	q[7] ^= sk[7];
 4155              		.loc 1 422 7
 4156 0100 FB6A     		ldr	r3, [r7, #44]
 4157 0102 3833     		adds	r3, r3, #56
 4158 0104 D3E90001 		ldrd	r0, [r3]
 4159              		.loc 1 422 12
 4160 0108 BB6A     		ldr	r3, [r7, #40]
 4161 010a 3833     		adds	r3, r3, #56
 4162 010c D3E90023 		ldrd	r2, [r3]
 4163              		.loc 1 422 7
 4164 0110 FC6A     		ldr	r4, [r7, #44]
 4165 0112 3834     		adds	r4, r4, #56
 4166 0114 80EA0205 		eor	r5, r0, r2
 4167 0118 3D60     		str	r5, [r7]
 4168 011a 4B40     		eors	r3, r3, r1
 4169 011c 7B60     		str	r3, [r7, #4]
 4170 011e D7E90023 		ldrd	r2, [r7]
 4171 0122 C4E90023 		strd	r2, [r4]
 423:aes256ctr.c   **** }
 4172              		.loc 1 423 1
 4173 0126 00BF     		nop
 4174 0128 3437     		adds	r7, r7, #52
 4175              	.LCFI71:
 4176              		.cfi_def_cfa_offset 28
 4177 012a BD46     		mov	sp, r7
 4178              	.LCFI72:
 4179              		.cfi_def_cfa_register 13
 4180              		@ sp needed
 4181 012c BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 4182              	.LCFI73:
 4183              		.cfi_restore 11
 4184              		.cfi_restore 10
 4185              		.cfi_restore 9
 4186              		.cfi_restore 8
 4187              		.cfi_restore 7
 4188              		.cfi_restore 5
 4189              		.cfi_restore 4
 4190              		.cfi_def_cfa_offset 0
 4191 0130 7047     		bx	lr
 4192              		.cfi_endproc
 4193              	.LFE12:
 4195              		.section	.text.shift_rows,"ax",%progbits
 4196              		.align	1
 4197              		.syntax unified
 4198              		.thumb
 4199              		.thumb_func
 4200              		.fpu softvfp
 4202              	shift_rows:
 4203              	.LFB13:
 424:aes256ctr.c   **** 
 425:aes256ctr.c   **** static inline void shift_rows(uint64_t *q)
 426:aes256ctr.c   **** {
 4204              		.loc 1 426 1
 4205              		.cfi_startproc
 4206              		@ args = 0, pretend = 0, frame = 104
 4207              		@ frame_needed = 1, uses_anonymous_args = 0
 4208 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4209              	.LCFI74:
 4210              		.cfi_def_cfa_offset 36
 4211              		.cfi_offset 4, -36
 4212              		.cfi_offset 5, -32
 4213              		.cfi_offset 6, -28
 4214              		.cfi_offset 7, -24
 4215              		.cfi_offset 8, -20
 4216              		.cfi_offset 9, -16
 4217              		.cfi_offset 10, -12
 4218              		.cfi_offset 11, -8
 4219              		.cfi_offset 14, -4
 4220 0004 9BB0     		sub	sp, sp, #108
 4221              	.LCFI75:
 4222              		.cfi_def_cfa_offset 144
 4223 0006 00AF     		add	r7, sp, #0
 4224              	.LCFI76:
 4225              		.cfi_def_cfa_register 7
 4226 0008 7865     		str	r0, [r7, #84]
 427:aes256ctr.c   **** 	int i;
 428:aes256ctr.c   **** 
 429:aes256ctr.c   **** 	for (i = 0; i < 8; i ++) {
 4227              		.loc 1 429 9
 4228 000a 0023     		movs	r3, #0
 4229 000c 7B66     		str	r3, [r7, #100]
 4230              		.loc 1 429 2
 4231 000e B0E0     		b	.L33
 4232              	.L34:
 4233              	.LBB16:
 430:aes256ctr.c   **** 		uint64_t x;
 431:aes256ctr.c   **** 
 432:aes256ctr.c   **** 		x = q[i];
 4234              		.loc 1 432 8 discriminator 3
 4235 0010 7B6E     		ldr	r3, [r7, #100]
 4236 0012 DA00     		lsls	r2, r3, #3
 4237 0014 7B6D     		ldr	r3, [r7, #84]
 4238 0016 1344     		add	r3, r3, r2
 4239              		.loc 1 432 5 discriminator 3
 4240 0018 D3E90023 		ldrd	r2, [r3]
 4241 001c C7E91623 		strd	r2, [r7, #88]
 433:aes256ctr.c   **** 		q[i] = (x & (uint64_t)0x000000000000FFFF)
 4242              		.loc 1 433 13 discriminator 3
 4243 0020 D7E91623 		ldrd	r2, [r7, #88]
 4244 0024 93B2     		uxth	r3, r2
 4245 0026 BB64     		str	r3, [r7, #72]
 4246 0028 4FF0000C 		mov	ip, #0
 4247 002c C7F84CC0 		str	ip, [r7, #76]
 434:aes256ctr.c   **** 			| ((x & (uint64_t)0x00000000FFF00000) >> 4)
 4248              		.loc 1 434 42 discriminator 3
 4249 0030 D7E91623 		ldrd	r2, [r7, #88]
 4250 0034 4FF00000 		mov	r0, #0
 4251 0038 4FF00001 		mov	r1, #0
 4252 003c 1009     		lsrs	r0, r2, #4
 4253 003e 40EA0370 		orr	r0, r0, r3, lsl #28
 4254 0042 1909     		lsrs	r1, r3, #4
 4255 0044 20F07048 		bic	r8, r0, #-268435456
 4256 0048 4FEA1848 		lsr	r8, r8, #16
 4257 004c 4FEA0848 		lsl	r8, r8, #16
 4258 0050 4FF00009 		mov	r9, #0
 4259              		.loc 1 434 4 discriminator 3
 4260 0054 D7E91223 		ldrd	r2, [r7, #72]
 4261 0058 1146     		mov	r1, r2
 4262 005a 41EA0801 		orr	r1, r1, r8
 4263 005e 3964     		str	r1, [r7, #64]
 4264 0060 43EA0903 		orr	r3, r3, r9
 4265 0064 7B64     		str	r3, [r7, #68]
 435:aes256ctr.c   **** 			| ((x & (uint64_t)0x00000000000F0000) << 12)
 4266              		.loc 1 435 42 discriminator 3
 4267 0066 D7E91623 		ldrd	r2, [r7, #88]
 4268 006a 4FF00000 		mov	r0, #0
 4269 006e 4FF00001 		mov	r1, #0
 4270 0072 1903     		lsls	r1, r3, #12
 4271 0074 41EA1251 		orr	r1, r1, r2, lsr #20
 4272 0078 1003     		lsls	r0, r2, #12
 4273 007a 00F07043 		and	r3, r0, #-268435456
 4274 007e BB63     		str	r3, [r7, #56]
 4275 0080 C7F83CC0 		str	ip, [r7, #60]
 4276              		.loc 1 435 4 discriminator 3
 4277 0084 D7E91001 		ldrd	r0, [r7, #64]
 4278 0088 8646     		mov	lr, r0
 4279 008a D7E90E23 		ldrd	r2, [r7, #56]
 4280 008e 1646     		mov	r6, r2
 4281 0090 4EEA060E 		orr	lr, lr, r6
 4282 0094 C7F830E0 		str	lr, [r7, #48]
 4283 0098 0B43     		orrs	r3, r3, r1
 4284 009a 7B63     		str	r3, [r7, #52]
 436:aes256ctr.c   **** 			| ((x & (uint64_t)0x0000FF0000000000) >> 8)
 4285              		.loc 1 436 42 discriminator 3
 4286 009c D7E91623 		ldrd	r2, [r7, #88]
 4287 00a0 4FF00000 		mov	r0, #0
 4288 00a4 4FF00001 		mov	r1, #0
 4289 00a8 100A     		lsrs	r0, r2, #8
 4290 00aa 40EA0360 		orr	r0, r0, r3, lsl #24
 4291 00ae 190A     		lsrs	r1, r3, #8
 4292 00b0 C7F828C0 		str	ip, [r7, #40]
 4293 00b4 01F0FF03 		and	r3, r1, #255
 4294 00b8 FB62     		str	r3, [r7, #44]
 4295              		.loc 1 436 4 discriminator 3
 4296 00ba D7E90C01 		ldrd	r0, [r7, #48]
 4297 00be 0646     		mov	r6, r0
 4298 00c0 D7E90A23 		ldrd	r2, [r7, #40]
 4299 00c4 9646     		mov	lr, r2
 4300 00c6 46EA0E06 		orr	r6, r6, lr
 4301 00ca 3E62     		str	r6, [r7, #32]
 4302 00cc 0B43     		orrs	r3, r3, r1
 4303 00ce 7B62     		str	r3, [r7, #36]
 437:aes256ctr.c   **** 			| ((x & (uint64_t)0x000000FF00000000) << 8)
 4304              		.loc 1 437 42 discriminator 3
 4305 00d0 D7E91623 		ldrd	r2, [r7, #88]
 4306 00d4 4FF00000 		mov	r0, #0
 4307 00d8 4FF00001 		mov	r1, #0
 4308 00dc 1902     		lsls	r1, r3, #8
 4309 00de 41EA1261 		orr	r1, r1, r2, lsr #24
 4310 00e2 1002     		lsls	r0, r2, #8
 4311 00e4 C7F818C0 		str	ip, [r7, #24]
 4312 00e8 01F47F43 		and	r3, r1, #65280
 4313 00ec FB61     		str	r3, [r7, #28]
 4314              		.loc 1 437 4 discriminator 3
 4315 00ee D7E90801 		ldrd	r0, [r7, #32]
 4316 00f2 0646     		mov	r6, r0
 4317 00f4 D7E90623 		ldrd	r2, [r7, #24]
 4318 00f8 9646     		mov	lr, r2
 4319 00fa 46EA0E06 		orr	r6, r6, lr
 4320 00fe 3E61     		str	r6, [r7, #16]
 4321 0100 0B43     		orrs	r3, r3, r1
 4322 0102 7B61     		str	r3, [r7, #20]
 438:aes256ctr.c   **** 			| ((x & (uint64_t)0xF000000000000000) >> 12)
 4323              		.loc 1 438 42 discriminator 3
 4324 0104 D7E91623 		ldrd	r2, [r7, #88]
 4325 0108 4FF00000 		mov	r0, #0
 4326 010c 4FF00001 		mov	r1, #0
 4327 0110 100B     		lsrs	r0, r2, #12
 4328 0112 40EA0350 		orr	r0, r0, r3, lsl #20
 4329 0116 190B     		lsrs	r1, r3, #12
 4330 0118 C7F808C0 		str	ip, [r7, #8]
 4331 011c 01F47023 		and	r3, r1, #983040
 4332 0120 FB60     		str	r3, [r7, #12]
 4333              		.loc 1 438 4 discriminator 3
 4334 0122 D7E90401 		ldrd	r0, [r7, #16]
 4335 0126 0646     		mov	r6, r0
 4336 0128 D7E90223 		ldrd	r2, [r7, #8]
 4337 012c 9446     		mov	ip, r2
 4338 012e 46EA0C0A 		orr	r10, r6, ip
 4339 0132 41EA030B 		orr	fp, r1, r3
 439:aes256ctr.c   **** 			| ((x & (uint64_t)0x0FFF000000000000) << 4);
 4340              		.loc 1 439 42 discriminator 3
 4341 0136 D7E91623 		ldrd	r2, [r7, #88]
 4342 013a 4FF00000 		mov	r0, #0
 4343 013e 4FF00001 		mov	r1, #0
 4344 0142 1901     		lsls	r1, r3, #4
 4345 0144 41EA1271 		orr	r1, r1, r2, lsr #28
 4346 0148 1001     		lsls	r0, r2, #4
 4347 014a 0024     		movs	r4, #0
 4348 014c 0D0D     		lsrs	r5, r1, #20
 4349 014e 2D05     		lsls	r5, r5, #20
 433:aes256ctr.c   **** 			| ((x & (uint64_t)0x00000000FFF00000) >> 4)
 4350              		.loc 1 433 4 discriminator 3
 4351 0150 7B6E     		ldr	r3, [r7, #100]
 4352 0152 DA00     		lsls	r2, r3, #3
 4353 0154 7B6D     		ldr	r3, [r7, #84]
 4354 0156 1344     		add	r3, r3, r2
 4355              		.loc 1 439 4 discriminator 3
 4356 0158 4AEA0402 		orr	r2, r10, r4
 4357 015c 3A60     		str	r2, [r7]
 4358 015e 4BEA0502 		orr	r2, fp, r5
 4359 0162 7A60     		str	r2, [r7, #4]
 433:aes256ctr.c   **** 			| ((x & (uint64_t)0x00000000FFF00000) >> 4)
 4360              		.loc 1 433 8 discriminator 3
 4361 0164 D7E90012 		ldrd	r1, [r7]
 4362 0168 C3E90012 		strd	r1, [r3]
 4363              	.LBE16:
 429:aes256ctr.c   **** 		uint64_t x;
 4364              		.loc 1 429 23 discriminator 3
 4365 016c 7B6E     		ldr	r3, [r7, #100]
 4366 016e 0133     		adds	r3, r3, #1
 4367 0170 7B66     		str	r3, [r7, #100]
 4368              	.L33:
 429:aes256ctr.c   **** 		uint64_t x;
 4369              		.loc 1 429 2 discriminator 1
 4370 0172 7B6E     		ldr	r3, [r7, #100]
 4371 0174 072B     		cmp	r3, #7
 4372 0176 7FF74BAF 		ble	.L34
 440:aes256ctr.c   **** 	}
 441:aes256ctr.c   **** }
 4373              		.loc 1 441 1
 4374 017a 00BF     		nop
 4375 017c 00BF     		nop
 4376 017e 6C37     		adds	r7, r7, #108
 4377              	.LCFI77:
 4378              		.cfi_def_cfa_offset 36
 4379 0180 BD46     		mov	sp, r7
 4380              	.LCFI78:
 4381              		.cfi_def_cfa_register 13
 4382              		@ sp needed
 4383 0182 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4384              		.cfi_endproc
 4385              	.LFE13:
 4387              		.section	.text.rotr32,"ax",%progbits
 4388              		.align	1
 4389              		.syntax unified
 4390              		.thumb
 4391              		.thumb_func
 4392              		.fpu softvfp
 4394              	rotr32:
 4395              	.LFB14:
 442:aes256ctr.c   **** 
 443:aes256ctr.c   **** static inline uint64_t rotr32(uint64_t x)
 444:aes256ctr.c   **** {
 4396              		.loc 1 444 1
 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 8
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
 4400              		@ link register save eliminated.
 4401 0000 80B4     		push	{r7}
 4402              	.LCFI79:
 4403              		.cfi_def_cfa_offset 4
 4404              		.cfi_offset 7, -4
 4405 0002 83B0     		sub	sp, sp, #12
 4406              	.LCFI80:
 4407              		.cfi_def_cfa_offset 16
 4408 0004 00AF     		add	r7, sp, #0
 4409              	.LCFI81:
 4410              		.cfi_def_cfa_register 7
 4411 0006 C7E90001 		strd	r0, [r7]
 445:aes256ctr.c   **** 	return (x << 32) | (x >> 32);
 4412              		.loc 1 445 19
 4413 000a 7A68     		ldr	r2, [r7, #4]
 4414 000c 3B68     		ldr	r3, [r7]
 446:aes256ctr.c   **** }
 4415              		.loc 1 446 1
 4416 000e 1046     		mov	r0, r2
 4417 0010 1946     		mov	r1, r3
 4418 0012 0C37     		adds	r7, r7, #12
 4419              	.LCFI82:
 4420              		.cfi_def_cfa_offset 4
 4421 0014 BD46     		mov	sp, r7
 4422              	.LCFI83:
 4423              		.cfi_def_cfa_register 13
 4424              		@ sp needed
 4425 0016 80BC     		pop	{r7}
 4426              	.LCFI84:
 4427              		.cfi_restore 7
 4428              		.cfi_def_cfa_offset 0
 4429 0018 7047     		bx	lr
 4430              		.cfi_endproc
 4431              	.LFE14:
 4433              		.section	.text.mix_columns,"ax",%progbits
 4434              		.align	1
 4435              		.syntax unified
 4436              		.thumb
 4437              		.thumb_func
 4438              		.fpu softvfp
 4440              	mix_columns:
 4441              	.LFB15:
 447:aes256ctr.c   **** 
 448:aes256ctr.c   **** static inline void mix_columns(uint64_t *q)
 449:aes256ctr.c   **** {
 4442              		.loc 1 449 1
 4443              		.cfi_startproc
 4444              		@ args = 0, pretend = 0, frame = 480
 4445              		@ frame_needed = 1, uses_anonymous_args = 0
 4446 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 4447              	.LCFI85:
 4448              		.cfi_def_cfa_offset 32
 4449              		.cfi_offset 4, -32
 4450              		.cfi_offset 5, -28
 4451              		.cfi_offset 7, -24
 4452              		.cfi_offset 8, -20
 4453              		.cfi_offset 9, -16
 4454              		.cfi_offset 10, -12
 4455              		.cfi_offset 11, -8
 4456              		.cfi_offset 14, -4
 4457 0004 F8B0     		sub	sp, sp, #480
 4458              	.LCFI86:
 4459              		.cfi_def_cfa_offset 512
 4460 0006 00AF     		add	r7, sp, #0
 4461              	.LCFI87:
 4462              		.cfi_def_cfa_register 7
 4463 0008 C7F85C01 		str	r0, [r7, #348]
 450:aes256ctr.c   **** 	uint64_t q0, q1, q2, q3, q4, q5, q6, q7;
 451:aes256ctr.c   **** 	uint64_t r0, r1, r2, r3, r4, r5, r6, r7;
 452:aes256ctr.c   **** 
 453:aes256ctr.c   **** 	q0 = q[0];
 4464              		.loc 1 453 5
 4465 000c D7F85C31 		ldr	r3, [r7, #348]
 4466 0010 D3E90023 		ldrd	r2, [r3]
 4467 0014 C7E97623 		strd	r2, [r7, #472]
 454:aes256ctr.c   **** 	q1 = q[1];
 4468              		.loc 1 454 5
 4469 0018 D7F85C31 		ldr	r3, [r7, #348]
 4470 001c D3E90223 		ldrd	r2, [r3, #8]
 4471 0020 C7E97423 		strd	r2, [r7, #464]
 455:aes256ctr.c   **** 	q2 = q[2];
 4472              		.loc 1 455 5
 4473 0024 D7F85C31 		ldr	r3, [r7, #348]
 4474 0028 D3E90423 		ldrd	r2, [r3, #16]
 4475 002c C7E97223 		strd	r2, [r7, #456]
 456:aes256ctr.c   **** 	q3 = q[3];
 4476              		.loc 1 456 5
 4477 0030 D7F85C31 		ldr	r3, [r7, #348]
 4478 0034 D3E90623 		ldrd	r2, [r3, #24]
 4479 0038 C7E97023 		strd	r2, [r7, #448]
 457:aes256ctr.c   **** 	q4 = q[4];
 4480              		.loc 1 457 5
 4481 003c D7F85C31 		ldr	r3, [r7, #348]
 4482 0040 D3E90823 		ldrd	r2, [r3, #32]
 4483 0044 C7E96E23 		strd	r2, [r7, #440]
 458:aes256ctr.c   **** 	q5 = q[5];
 4484              		.loc 1 458 5
 4485 0048 D7F85C31 		ldr	r3, [r7, #348]
 4486 004c D3E90A23 		ldrd	r2, [r3, #40]
 4487 0050 C7E96C23 		strd	r2, [r7, #432]
 459:aes256ctr.c   **** 	q6 = q[6];
 4488              		.loc 1 459 5
 4489 0054 D7F85C31 		ldr	r3, [r7, #348]
 4490 0058 D3E90C23 		ldrd	r2, [r3, #48]
 4491 005c C7E96A23 		strd	r2, [r7, #424]
 460:aes256ctr.c   **** 	q7 = q[7];
 4492              		.loc 1 460 5
 4493 0060 D7F85C31 		ldr	r3, [r7, #348]
 4494 0064 D3E90E23 		ldrd	r2, [r3, #56]
 4495 0068 C7E96823 		strd	r2, [r7, #416]
 461:aes256ctr.c   **** 	r0 = (q0 >> 16) | (q0 << 48);
 4496              		.loc 1 461 5
 4497 006c D7F8DC31 		ldr	r3, [r7, #476]
 4498 0070 1A04     		lsls	r2, r3, #16
 4499 0072 D7F8D831 		ldr	r3, [r7, #472]
 4500 0076 1B0C     		lsrs	r3, r3, #16
 4501 0078 42EA0304 		orr	r4, r2, r3
 4502 007c D7F8D831 		ldr	r3, [r7, #472]
 4503 0080 1A04     		lsls	r2, r3, #16
 4504 0082 D7F8DC31 		ldr	r3, [r7, #476]
 4505 0086 1B0C     		lsrs	r3, r3, #16
 4506 0088 42EA0305 		orr	r5, r2, r3
 4507 008c C7E96645 		strd	r4, [r7, #408]
 462:aes256ctr.c   **** 	r1 = (q1 >> 16) | (q1 << 48);
 4508              		.loc 1 462 5
 4509 0090 D7F8D431 		ldr	r3, [r7, #468]
 4510 0094 1A04     		lsls	r2, r3, #16
 4511 0096 D7F8D031 		ldr	r3, [r7, #464]
 4512 009a 1B0C     		lsrs	r3, r3, #16
 4513 009c 42EA0308 		orr	r8, r2, r3
 4514 00a0 D7F8D031 		ldr	r3, [r7, #464]
 4515 00a4 1A04     		lsls	r2, r3, #16
 4516 00a6 D7F8D431 		ldr	r3, [r7, #468]
 4517 00aa 1B0C     		lsrs	r3, r3, #16
 4518 00ac 42EA0309 		orr	r9, r2, r3
 4519 00b0 C7E96489 		strd	r8, [r7, #400]
 463:aes256ctr.c   **** 	r2 = (q2 >> 16) | (q2 << 48);
 4520              		.loc 1 463 5
 4521 00b4 D7F8CC31 		ldr	r3, [r7, #460]
 4522 00b8 1A04     		lsls	r2, r3, #16
 4523 00ba D7F8C831 		ldr	r3, [r7, #456]
 4524 00be 1B0C     		lsrs	r3, r3, #16
 4525 00c0 1343     		orrs	r3, r3, r2
 4526 00c2 BB62     		str	r3, [r7, #40]
 4527 00c4 D7F8C831 		ldr	r3, [r7, #456]
 4528 00c8 1A04     		lsls	r2, r3, #16
 4529 00ca D7F8CC31 		ldr	r3, [r7, #460]
 4530 00ce 1B0C     		lsrs	r3, r3, #16
 4531 00d0 1343     		orrs	r3, r3, r2
 4532 00d2 FB62     		str	r3, [r7, #44]
 4533 00d4 D7E90A34 		ldrd	r3, [r7, #40]
 4534 00d8 C7E96234 		strd	r3, [r7, #392]
 464:aes256ctr.c   **** 	r3 = (q3 >> 16) | (q3 << 48);
 4535              		.loc 1 464 5
 4536 00dc D7F8C431 		ldr	r3, [r7, #452]
 4537 00e0 1A04     		lsls	r2, r3, #16
 4538 00e2 D7F8C031 		ldr	r3, [r7, #448]
 4539 00e6 1B0C     		lsrs	r3, r3, #16
 4540 00e8 1343     		orrs	r3, r3, r2
 4541 00ea 3B62     		str	r3, [r7, #32]
 4542 00ec D7F8C031 		ldr	r3, [r7, #448]
 4543 00f0 1A04     		lsls	r2, r3, #16
 4544 00f2 D7F8C431 		ldr	r3, [r7, #452]
 4545 00f6 1B0C     		lsrs	r3, r3, #16
 4546 00f8 1343     		orrs	r3, r3, r2
 4547 00fa 7B62     		str	r3, [r7, #36]
 4548 00fc D7E90834 		ldrd	r3, [r7, #32]
 4549 0100 C7E96034 		strd	r3, [r7, #384]
 465:aes256ctr.c   **** 	r4 = (q4 >> 16) | (q4 << 48);
 4550              		.loc 1 465 5
 4551 0104 D7F8BC31 		ldr	r3, [r7, #444]
 4552 0108 1A04     		lsls	r2, r3, #16
 4553 010a D7F8B831 		ldr	r3, [r7, #440]
 4554 010e 1B0C     		lsrs	r3, r3, #16
 4555 0110 1343     		orrs	r3, r3, r2
 4556 0112 BB61     		str	r3, [r7, #24]
 4557 0114 D7F8B831 		ldr	r3, [r7, #440]
 4558 0118 1A04     		lsls	r2, r3, #16
 4559 011a D7F8BC31 		ldr	r3, [r7, #444]
 4560 011e 1B0C     		lsrs	r3, r3, #16
 4561 0120 1343     		orrs	r3, r3, r2
 4562 0122 FB61     		str	r3, [r7, #28]
 4563 0124 D7E90634 		ldrd	r3, [r7, #24]
 4564 0128 C7E95E34 		strd	r3, [r7, #376]
 466:aes256ctr.c   **** 	r5 = (q5 >> 16) | (q5 << 48);
 4565              		.loc 1 466 5
 4566 012c D7F8B431 		ldr	r3, [r7, #436]
 4567 0130 1A04     		lsls	r2, r3, #16
 4568 0132 D7F8B031 		ldr	r3, [r7, #432]
 4569 0136 1B0C     		lsrs	r3, r3, #16
 4570 0138 1343     		orrs	r3, r3, r2
 4571 013a 3B61     		str	r3, [r7, #16]
 4572 013c D7F8B031 		ldr	r3, [r7, #432]
 4573 0140 1A04     		lsls	r2, r3, #16
 4574 0142 D7F8B431 		ldr	r3, [r7, #436]
 4575 0146 1B0C     		lsrs	r3, r3, #16
 4576 0148 1343     		orrs	r3, r3, r2
 4577 014a 7B61     		str	r3, [r7, #20]
 4578 014c D7E90434 		ldrd	r3, [r7, #16]
 4579 0150 C7E95C34 		strd	r3, [r7, #368]
 467:aes256ctr.c   **** 	r6 = (q6 >> 16) | (q6 << 48);
 4580              		.loc 1 467 5
 4581 0154 D7F8AC31 		ldr	r3, [r7, #428]
 4582 0158 1A04     		lsls	r2, r3, #16
 4583 015a D7F8A831 		ldr	r3, [r7, #424]
 4584 015e 1B0C     		lsrs	r3, r3, #16
 4585 0160 1343     		orrs	r3, r3, r2
 4586 0162 BB60     		str	r3, [r7, #8]
 4587 0164 D7F8A831 		ldr	r3, [r7, #424]
 4588 0168 1A04     		lsls	r2, r3, #16
 4589 016a D7F8AC31 		ldr	r3, [r7, #428]
 4590 016e 1B0C     		lsrs	r3, r3, #16
 4591 0170 1343     		orrs	r3, r3, r2
 4592 0172 FB60     		str	r3, [r7, #12]
 4593 0174 D7E90234 		ldrd	r3, [r7, #8]
 4594 0178 C7E95A34 		strd	r3, [r7, #360]
 468:aes256ctr.c   **** 	r7 = (q7 >> 16) | (q7 << 48);
 4595              		.loc 1 468 5
 4596 017c D7F8A431 		ldr	r3, [r7, #420]
 4597 0180 1A04     		lsls	r2, r3, #16
 4598 0182 D7F8A031 		ldr	r3, [r7, #416]
 4599 0186 1B0C     		lsrs	r3, r3, #16
 4600 0188 1343     		orrs	r3, r3, r2
 4601 018a 3B60     		str	r3, [r7]
 4602 018c D7F8A031 		ldr	r3, [r7, #416]
 4603 0190 1A04     		lsls	r2, r3, #16
 4604 0192 D7F8A431 		ldr	r3, [r7, #420]
 4605 0196 1B0C     		lsrs	r3, r3, #16
 4606 0198 1343     		orrs	r3, r3, r2
 4607 019a 7B60     		str	r3, [r7, #4]
 4608 019c D7E90034 		ldrd	r3, [r7]
 4609 01a0 C7E95834 		strd	r3, [r7, #352]
 469:aes256ctr.c   **** 
 470:aes256ctr.c   **** 	q[0] = q7 ^ r7 ^ r0 ^ rotr32(q0 ^ r0);
 4610              		.loc 1 470 12
 4611 01a4 D7E96801 		ldrd	r0, [r7, #416]
 4612 01a8 D7E95823 		ldrd	r2, [r7, #352]
 4613 01ac 80EA020A 		eor	r10, r0, r2
 4614 01b0 81EA030B 		eor	fp, r1, r3
 4615              		.loc 1 470 17
 4616 01b4 D7E96623 		ldrd	r2, [r7, #408]
 4617 01b8 8AEA0201 		eor	r1, r10, r2
 4618 01bc C7F85011 		str	r1, [r7, #336]
 4619 01c0 8BEA0303 		eor	r3, fp, r3
 4620 01c4 C7F85431 		str	r3, [r7, #340]
 4621              		.loc 1 470 24
 4622 01c8 D7E97601 		ldrd	r0, [r7, #472]
 4623 01cc D7E96623 		ldrd	r2, [r7, #408]
 4624 01d0 80EA0204 		eor	r4, r0, r2
 4625 01d4 C7F84841 		str	r4, [r7, #328]
 4626 01d8 4B40     		eors	r3, r3, r1
 4627 01da C7F84C31 		str	r3, [r7, #332]
 4628 01de D7E95201 		ldrd	r0, [r7, #328]
 4629 01e2 FFF7FEFF 		bl	rotr32
 4630 01e6 0246     		mov	r2, r0
 4631 01e8 0B46     		mov	r3, r1
 4632              		.loc 1 470 22
 4633 01ea D7E95401 		ldrd	r0, [r7, #336]
 4634 01ee 0446     		mov	r4, r0
 4635 01f0 5440     		eors	r4, r4, r2
 4636 01f2 C7F84041 		str	r4, [r7, #320]
 4637 01f6 5940     		eors	r1, r1, r3
 4638 01f8 C7F84411 		str	r1, [r7, #324]
 4639              		.loc 1 470 7
 4640 01fc D7F85C31 		ldr	r3, [r7, #348]
 4641 0200 D7E95012 		ldrd	r1, [r7, #320]
 4642 0204 C3E90012 		strd	r1, [r3]
 471:aes256ctr.c   **** 	q[1] = q0 ^ r0 ^ q7 ^ r7 ^ r1 ^ rotr32(q1 ^ r1);
 4643              		.loc 1 471 12
 4644 0208 D7E97601 		ldrd	r0, [r7, #472]
 4645 020c D7E96623 		ldrd	r2, [r7, #408]
 4646 0210 80EA0204 		eor	r4, r0, r2
 4647 0214 C7F83841 		str	r4, [r7, #312]
 4648 0218 4B40     		eors	r3, r3, r1
 4649 021a C7F83C31 		str	r3, [r7, #316]
 4650              		.loc 1 471 17
 4651 021e D7E96823 		ldrd	r2, [r7, #416]
 4652 0222 D7E94E01 		ldrd	r0, [r7, #312]
 4653 0226 0446     		mov	r4, r0
 4654 0228 5440     		eors	r4, r4, r2
 4655 022a C7F83041 		str	r4, [r7, #304]
 4656 022e 5940     		eors	r1, r1, r3
 4657 0230 C7F83411 		str	r1, [r7, #308]
 4658              		.loc 1 471 22
 4659 0234 D7E95823 		ldrd	r2, [r7, #352]
 4660 0238 D7E94C01 		ldrd	r0, [r7, #304]
 4661 023c 0446     		mov	r4, r0
 4662 023e 5440     		eors	r4, r4, r2
 4663 0240 C7F82841 		str	r4, [r7, #296]
 4664 0244 5940     		eors	r1, r1, r3
 4665 0246 C7F82C11 		str	r1, [r7, #300]
 4666              		.loc 1 471 27
 4667 024a D7E96423 		ldrd	r2, [r7, #400]
 4668 024e D7E94A01 		ldrd	r0, [r7, #296]
 4669 0252 0446     		mov	r4, r0
 4670 0254 5440     		eors	r4, r4, r2
 4671 0256 C7F82041 		str	r4, [r7, #288]
 4672 025a 5940     		eors	r1, r1, r3
 4673 025c C7F82411 		str	r1, [r7, #292]
 4674              		.loc 1 471 34
 4675 0260 D7E97401 		ldrd	r0, [r7, #464]
 4676 0264 D7E96423 		ldrd	r2, [r7, #400]
 4677 0268 80EA0204 		eor	r4, r0, r2
 4678 026c C7F81841 		str	r4, [r7, #280]
 4679 0270 4B40     		eors	r3, r3, r1
 4680 0272 C7F81C31 		str	r3, [r7, #284]
 4681 0276 D7E94601 		ldrd	r0, [r7, #280]
 4682 027a FFF7FEFF 		bl	rotr32
 4683              		.loc 1 471 3
 4684 027e D7F85C31 		ldr	r3, [r7, #348]
 4685 0282 0833     		adds	r3, r3, #8
 4686              		.loc 1 471 32
 4687 0284 D7E94845 		ldrd	r4, [r7, #288]
 4688 0288 2246     		mov	r2, r4
 4689 028a 4240     		eors	r2, r2, r0
 4690 028c C7F81021 		str	r2, [r7, #272]
 4691 0290 2A46     		mov	r2, r5
 4692 0292 4A40     		eors	r2, r2, r1
 4693 0294 C7F81421 		str	r2, [r7, #276]
 4694              		.loc 1 471 7
 4695 0298 D7E94412 		ldrd	r1, [r7, #272]
 4696 029c C3E90012 		strd	r1, [r3]
 472:aes256ctr.c   **** 	q[2] = q1 ^ r1 ^ r2 ^ rotr32(q2 ^ r2);
 4697              		.loc 1 472 12
 4698 02a0 D7E97401 		ldrd	r0, [r7, #464]
 4699 02a4 D7E96423 		ldrd	r2, [r7, #400]
 4700 02a8 80EA0204 		eor	r4, r0, r2
 4701 02ac C7F80841 		str	r4, [r7, #264]
 4702 02b0 4B40     		eors	r3, r3, r1
 4703 02b2 C7F80C31 		str	r3, [r7, #268]
 4704              		.loc 1 472 17
 4705 02b6 D7E96223 		ldrd	r2, [r7, #392]
 4706 02ba D7E94201 		ldrd	r0, [r7, #264]
 4707 02be 0446     		mov	r4, r0
 4708 02c0 5440     		eors	r4, r4, r2
 4709 02c2 C7F80041 		str	r4, [r7, #256]
 4710 02c6 5940     		eors	r1, r1, r3
 4711 02c8 C7F80411 		str	r1, [r7, #260]
 4712              		.loc 1 472 24
 4713 02cc D7E97201 		ldrd	r0, [r7, #456]
 4714 02d0 D7E96223 		ldrd	r2, [r7, #392]
 4715 02d4 80EA0204 		eor	r4, r0, r2
 4716 02d8 C7F8F840 		str	r4, [r7, #248]
 4717 02dc 4B40     		eors	r3, r3, r1
 4718 02de C7F8FC30 		str	r3, [r7, #252]
 4719 02e2 D7E93E01 		ldrd	r0, [r7, #248]
 4720 02e6 FFF7FEFF 		bl	rotr32
 4721              		.loc 1 472 3
 4722 02ea D7F85C31 		ldr	r3, [r7, #348]
 4723 02ee 1033     		adds	r3, r3, #16
 4724              		.loc 1 472 22
 4725 02f0 D7E94045 		ldrd	r4, [r7, #256]
 4726 02f4 2246     		mov	r2, r4
 4727 02f6 4240     		eors	r2, r2, r0
 4728 02f8 C7F8F020 		str	r2, [r7, #240]
 4729 02fc 2A46     		mov	r2, r5
 4730 02fe 4A40     		eors	r2, r2, r1
 4731 0300 C7F8F420 		str	r2, [r7, #244]
 4732              		.loc 1 472 7
 4733 0304 D7E93C12 		ldrd	r1, [r7, #240]
 4734 0308 C3E90012 		strd	r1, [r3]
 473:aes256ctr.c   **** 	q[3] = q2 ^ r2 ^ q7 ^ r7 ^ r3 ^ rotr32(q3 ^ r3);
 4735              		.loc 1 473 12
 4736 030c D7E97201 		ldrd	r0, [r7, #456]
 4737 0310 D7E96223 		ldrd	r2, [r7, #392]
 4738 0314 80EA0204 		eor	r4, r0, r2
 4739 0318 C7F8E840 		str	r4, [r7, #232]
 4740 031c 4B40     		eors	r3, r3, r1
 4741 031e C7F8EC30 		str	r3, [r7, #236]
 4742              		.loc 1 473 17
 4743 0322 D7E96823 		ldrd	r2, [r7, #416]
 4744 0326 D7E93A01 		ldrd	r0, [r7, #232]
 4745 032a 0446     		mov	r4, r0
 4746 032c 5440     		eors	r4, r4, r2
 4747 032e C7F8E040 		str	r4, [r7, #224]
 4748 0332 5940     		eors	r1, r1, r3
 4749 0334 C7F8E410 		str	r1, [r7, #228]
 4750              		.loc 1 473 22
 4751 0338 D7E95823 		ldrd	r2, [r7, #352]
 4752 033c D7E93801 		ldrd	r0, [r7, #224]
 4753 0340 0446     		mov	r4, r0
 4754 0342 5440     		eors	r4, r4, r2
 4755 0344 C7F8D840 		str	r4, [r7, #216]
 4756 0348 5940     		eors	r1, r1, r3
 4757 034a C7F8DC10 		str	r1, [r7, #220]
 4758              		.loc 1 473 27
 4759 034e D7E96023 		ldrd	r2, [r7, #384]
 4760 0352 D7E93601 		ldrd	r0, [r7, #216]
 4761 0356 0446     		mov	r4, r0
 4762 0358 5440     		eors	r4, r4, r2
 4763 035a C7F8D040 		str	r4, [r7, #208]
 4764 035e 5940     		eors	r1, r1, r3
 4765 0360 C7F8D410 		str	r1, [r7, #212]
 4766              		.loc 1 473 34
 4767 0364 D7E97001 		ldrd	r0, [r7, #448]
 4768 0368 D7E96023 		ldrd	r2, [r7, #384]
 4769 036c 80EA0204 		eor	r4, r0, r2
 4770 0370 C7F8C840 		str	r4, [r7, #200]
 4771 0374 4B40     		eors	r3, r3, r1
 4772 0376 C7F8CC30 		str	r3, [r7, #204]
 4773 037a D7E93201 		ldrd	r0, [r7, #200]
 4774 037e FFF7FEFF 		bl	rotr32
 4775              		.loc 1 473 3
 4776 0382 D7F85C31 		ldr	r3, [r7, #348]
 4777 0386 1833     		adds	r3, r3, #24
 4778              		.loc 1 473 32
 4779 0388 D7E93445 		ldrd	r4, [r7, #208]
 4780 038c 2246     		mov	r2, r4
 4781 038e 4240     		eors	r2, r2, r0
 4782 0390 C7F8C020 		str	r2, [r7, #192]
 4783 0394 2A46     		mov	r2, r5
 4784 0396 4A40     		eors	r2, r2, r1
 4785 0398 C7F8C420 		str	r2, [r7, #196]
 4786              		.loc 1 473 7
 4787 039c D7E93012 		ldrd	r1, [r7, #192]
 4788 03a0 C3E90012 		strd	r1, [r3]
 474:aes256ctr.c   **** 	q[4] = q3 ^ r3 ^ q7 ^ r7 ^ r4 ^ rotr32(q4 ^ r4);
 4789              		.loc 1 474 12
 4790 03a4 D7E97001 		ldrd	r0, [r7, #448]
 4791 03a8 D7E96023 		ldrd	r2, [r7, #384]
 4792 03ac 80EA0204 		eor	r4, r0, r2
 4793 03b0 C7F8B840 		str	r4, [r7, #184]
 4794 03b4 4B40     		eors	r3, r3, r1
 4795 03b6 C7F8BC30 		str	r3, [r7, #188]
 4796              		.loc 1 474 17
 4797 03ba D7E96823 		ldrd	r2, [r7, #416]
 4798 03be D7E92E01 		ldrd	r0, [r7, #184]
 4799 03c2 0446     		mov	r4, r0
 4800 03c4 5440     		eors	r4, r4, r2
 4801 03c6 C7F8B040 		str	r4, [r7, #176]
 4802 03ca 5940     		eors	r1, r1, r3
 4803 03cc C7F8B410 		str	r1, [r7, #180]
 4804              		.loc 1 474 22
 4805 03d0 D7E95823 		ldrd	r2, [r7, #352]
 4806 03d4 D7E92C01 		ldrd	r0, [r7, #176]
 4807 03d8 0446     		mov	r4, r0
 4808 03da 5440     		eors	r4, r4, r2
 4809 03dc C7F8A840 		str	r4, [r7, #168]
 4810 03e0 5940     		eors	r1, r1, r3
 4811 03e2 C7F8AC10 		str	r1, [r7, #172]
 4812              		.loc 1 474 27
 4813 03e6 D7E95E23 		ldrd	r2, [r7, #376]
 4814 03ea D7E92A01 		ldrd	r0, [r7, #168]
 4815 03ee 0446     		mov	r4, r0
 4816 03f0 5440     		eors	r4, r4, r2
 4817 03f2 C7F8A040 		str	r4, [r7, #160]
 4818 03f6 5940     		eors	r1, r1, r3
 4819 03f8 C7F8A410 		str	r1, [r7, #164]
 4820              		.loc 1 474 34
 4821 03fc D7E96E01 		ldrd	r0, [r7, #440]
 4822 0400 D7E95E23 		ldrd	r2, [r7, #376]
 4823 0404 80EA0204 		eor	r4, r0, r2
 4824 0408 C7F89840 		str	r4, [r7, #152]
 4825 040c 4B40     		eors	r3, r3, r1
 4826 040e C7F89C30 		str	r3, [r7, #156]
 4827 0412 D7E92601 		ldrd	r0, [r7, #152]
 4828 0416 FFF7FEFF 		bl	rotr32
 4829              		.loc 1 474 3
 4830 041a D7F85C31 		ldr	r3, [r7, #348]
 4831 041e 2033     		adds	r3, r3, #32
 4832              		.loc 1 474 32
 4833 0420 D7E92845 		ldrd	r4, [r7, #160]
 4834 0424 2246     		mov	r2, r4
 4835 0426 4240     		eors	r2, r2, r0
 4836 0428 C7F89020 		str	r2, [r7, #144]
 4837 042c 2A46     		mov	r2, r5
 4838 042e 4A40     		eors	r2, r2, r1
 4839 0430 C7F89420 		str	r2, [r7, #148]
 4840              		.loc 1 474 7
 4841 0434 D7E92412 		ldrd	r1, [r7, #144]
 4842 0438 C3E90012 		strd	r1, [r3]
 475:aes256ctr.c   **** 	q[5] = q4 ^ r4 ^ r5 ^ rotr32(q5 ^ r5);
 4843              		.loc 1 475 12
 4844 043c D7E96E01 		ldrd	r0, [r7, #440]
 4845 0440 D7E95E23 		ldrd	r2, [r7, #376]
 4846 0444 80EA0204 		eor	r4, r0, r2
 4847 0448 C7F88840 		str	r4, [r7, #136]
 4848 044c 4B40     		eors	r3, r3, r1
 4849 044e C7F88C30 		str	r3, [r7, #140]
 4850              		.loc 1 475 17
 4851 0452 D7E95C23 		ldrd	r2, [r7, #368]
 4852 0456 D7E92201 		ldrd	r0, [r7, #136]
 4853 045a 0446     		mov	r4, r0
 4854 045c 5440     		eors	r4, r4, r2
 4855 045e C7F88040 		str	r4, [r7, #128]
 4856 0462 5940     		eors	r1, r1, r3
 4857 0464 C7F88410 		str	r1, [r7, #132]
 4858              		.loc 1 475 24
 4859 0468 D7E96C01 		ldrd	r0, [r7, #432]
 4860 046c D7E95C23 		ldrd	r2, [r7, #368]
 4861 0470 80EA0204 		eor	r4, r0, r2
 4862 0474 BC67     		str	r4, [r7, #120]
 4863 0476 4B40     		eors	r3, r3, r1
 4864 0478 FB67     		str	r3, [r7, #124]
 4865 047a D7E91E01 		ldrd	r0, [r7, #120]
 4866 047e FFF7FEFF 		bl	rotr32
 4867              		.loc 1 475 3
 4868 0482 D7F85C31 		ldr	r3, [r7, #348]
 4869 0486 2833     		adds	r3, r3, #40
 4870              		.loc 1 475 22
 4871 0488 D7E92045 		ldrd	r4, [r7, #128]
 4872 048c 2246     		mov	r2, r4
 4873 048e 4240     		eors	r2, r2, r0
 4874 0490 3A67     		str	r2, [r7, #112]
 4875 0492 2A46     		mov	r2, r5
 4876 0494 4A40     		eors	r2, r2, r1
 4877 0496 7A67     		str	r2, [r7, #116]
 4878              		.loc 1 475 7
 4879 0498 D7E91C12 		ldrd	r1, [r7, #112]
 4880 049c C3E90012 		strd	r1, [r3]
 476:aes256ctr.c   **** 	q[6] = q5 ^ r5 ^ r6 ^ rotr32(q6 ^ r6);
 4881              		.loc 1 476 12
 4882 04a0 D7E96C01 		ldrd	r0, [r7, #432]
 4883 04a4 D7E95C23 		ldrd	r2, [r7, #368]
 4884 04a8 80EA0204 		eor	r4, r0, r2
 4885 04ac BC66     		str	r4, [r7, #104]
 4886 04ae 4B40     		eors	r3, r3, r1
 4887 04b0 FB66     		str	r3, [r7, #108]
 4888              		.loc 1 476 17
 4889 04b2 D7E95A23 		ldrd	r2, [r7, #360]
 4890 04b6 D7E91A01 		ldrd	r0, [r7, #104]
 4891 04ba 0446     		mov	r4, r0
 4892 04bc 5440     		eors	r4, r4, r2
 4893 04be 3C66     		str	r4, [r7, #96]
 4894 04c0 5940     		eors	r1, r1, r3
 4895 04c2 7966     		str	r1, [r7, #100]
 4896              		.loc 1 476 24
 4897 04c4 D7E96A01 		ldrd	r0, [r7, #424]
 4898 04c8 D7E95A23 		ldrd	r2, [r7, #360]
 4899 04cc 80EA0204 		eor	r4, r0, r2
 4900 04d0 BC65     		str	r4, [r7, #88]
 4901 04d2 4B40     		eors	r3, r3, r1
 4902 04d4 FB65     		str	r3, [r7, #92]
 4903 04d6 D7E91601 		ldrd	r0, [r7, #88]
 4904 04da FFF7FEFF 		bl	rotr32
 4905              		.loc 1 476 3
 4906 04de D7F85C31 		ldr	r3, [r7, #348]
 4907 04e2 3033     		adds	r3, r3, #48
 4908              		.loc 1 476 22
 4909 04e4 D7E91845 		ldrd	r4, [r7, #96]
 4910 04e8 2246     		mov	r2, r4
 4911 04ea 4240     		eors	r2, r2, r0
 4912 04ec 3A65     		str	r2, [r7, #80]
 4913 04ee 2A46     		mov	r2, r5
 4914 04f0 4A40     		eors	r2, r2, r1
 4915 04f2 7A65     		str	r2, [r7, #84]
 4916              		.loc 1 476 7
 4917 04f4 D7E91412 		ldrd	r1, [r7, #80]
 4918 04f8 C3E90012 		strd	r1, [r3]
 477:aes256ctr.c   **** 	q[7] = q6 ^ r6 ^ r7 ^ rotr32(q7 ^ r7);
 4919              		.loc 1 477 12
 4920 04fc D7E96A01 		ldrd	r0, [r7, #424]
 4921 0500 D7E95A23 		ldrd	r2, [r7, #360]
 4922 0504 80EA0204 		eor	r4, r0, r2
 4923 0508 BC64     		str	r4, [r7, #72]
 4924 050a 4B40     		eors	r3, r3, r1
 4925 050c FB64     		str	r3, [r7, #76]
 4926              		.loc 1 477 17
 4927 050e D7E95823 		ldrd	r2, [r7, #352]
 4928 0512 D7E91201 		ldrd	r0, [r7, #72]
 4929 0516 0446     		mov	r4, r0
 4930 0518 5440     		eors	r4, r4, r2
 4931 051a 3C64     		str	r4, [r7, #64]
 4932 051c 5940     		eors	r1, r1, r3
 4933 051e 7964     		str	r1, [r7, #68]
 4934              		.loc 1 477 24
 4935 0520 D7E96801 		ldrd	r0, [r7, #416]
 4936 0524 D7E95823 		ldrd	r2, [r7, #352]
 4937 0528 80EA0204 		eor	r4, r0, r2
 4938 052c BC63     		str	r4, [r7, #56]
 4939 052e 4B40     		eors	r3, r3, r1
 4940 0530 FB63     		str	r3, [r7, #60]
 4941 0532 D7E90E01 		ldrd	r0, [r7, #56]
 4942 0536 FFF7FEFF 		bl	rotr32
 4943 053a 0246     		mov	r2, r0
 4944 053c 0B46     		mov	r3, r1
 4945              		.loc 1 477 3
 4946 053e D7F85C11 		ldr	r1, [r7, #348]
 4947 0542 3831     		adds	r1, r1, #56
 4948              		.loc 1 477 22
 4949 0544 D7E91045 		ldrd	r4, [r7, #64]
 4950 0548 2046     		mov	r0, r4
 4951 054a 5040     		eors	r0, r0, r2
 4952 054c 3863     		str	r0, [r7, #48]
 4953 054e 2846     		mov	r0, r5
 4954 0550 5840     		eors	r0, r0, r3
 4955 0552 7863     		str	r0, [r7, #52]
 4956              		.loc 1 477 7
 4957 0554 D7E90C34 		ldrd	r3, [r7, #48]
 4958 0558 C1E90034 		strd	r3, [r1]
 478:aes256ctr.c   **** }
 4959              		.loc 1 478 1
 4960 055c 00BF     		nop
 4961 055e 07F5F077 		add	r7, r7, #480
 4962              	.LCFI88:
 4963              		.cfi_def_cfa_offset 32
 4964 0562 BD46     		mov	sp, r7
 4965              	.LCFI89:
 4966              		.cfi_def_cfa_register 13
 4967              		@ sp needed
 4968 0564 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 4969              		.cfi_endproc
 4970              	.LFE15:
 4972              		.section	.text.inc4_be,"ax",%progbits
 4973              		.align	1
 4974              		.syntax unified
 4975              		.thumb
 4976              		.thumb_func
 4977              		.fpu softvfp
 4979              	inc4_be:
 4980              	.LFB16:
 479:aes256ctr.c   **** 
 480:aes256ctr.c   **** static void inc4_be(uint32_t *x)
 481:aes256ctr.c   **** {
 4981              		.loc 1 481 1
 4982              		.cfi_startproc
 4983              		@ args = 0, pretend = 0, frame = 8
 4984              		@ frame_needed = 1, uses_anonymous_args = 0
 4985 0000 80B5     		push	{r7, lr}
 4986              	.LCFI90:
 4987              		.cfi_def_cfa_offset 8
 4988              		.cfi_offset 7, -8
 4989              		.cfi_offset 14, -4
 4990 0002 82B0     		sub	sp, sp, #8
 4991              	.LCFI91:
 4992              		.cfi_def_cfa_offset 16
 4993 0004 00AF     		add	r7, sp, #0
 4994              	.LCFI92:
 4995              		.cfi_def_cfa_register 7
 4996 0006 7860     		str	r0, [r7, #4]
 482:aes256ctr.c   ****   *x = br_swap32(*x)+4;
 4997              		.loc 1 482 8
 4998 0008 7B68     		ldr	r3, [r7, #4]
 4999 000a 1B68     		ldr	r3, [r3]
 5000 000c 1846     		mov	r0, r3
 5001 000e FFF7FEFF 		bl	br_swap32
 5002 0012 0346     		mov	r3, r0
 5003              		.loc 1 482 21
 5004 0014 1A1D     		adds	r2, r3, #4
 5005              		.loc 1 482 6
 5006 0016 7B68     		ldr	r3, [r7, #4]
 5007 0018 1A60     		str	r2, [r3]
 483:aes256ctr.c   ****   *x = br_swap32(*x);
 5008              		.loc 1 483 8
 5009 001a 7B68     		ldr	r3, [r7, #4]
 5010 001c 1B68     		ldr	r3, [r3]
 5011 001e 1846     		mov	r0, r3
 5012 0020 FFF7FEFF 		bl	br_swap32
 5013 0024 0246     		mov	r2, r0
 5014              		.loc 1 483 6
 5015 0026 7B68     		ldr	r3, [r7, #4]
 5016 0028 1A60     		str	r2, [r3]
 484:aes256ctr.c   **** }
 5017              		.loc 1 484 1
 5018 002a 00BF     		nop
 5019 002c 0837     		adds	r7, r7, #8
 5020              	.LCFI93:
 5021              		.cfi_def_cfa_offset 8
 5022 002e BD46     		mov	sp, r7
 5023              	.LCFI94:
 5024              		.cfi_def_cfa_register 13
 5025              		@ sp needed
 5026 0030 80BD     		pop	{r7, pc}
 5027              		.cfi_endproc
 5028              	.LFE16:
 5030              		.section	.text.aes_ctr4x,"ax",%progbits
 5031              		.align	1
 5032              		.syntax unified
 5033              		.thumb
 5034              		.thumb_func
 5035              		.fpu softvfp
 5037              	aes_ctr4x:
 5038              	.LFB17:
 485:aes256ctr.c   **** 
 486:aes256ctr.c   **** static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])
 487:aes256ctr.c   **** {
 5039              		.loc 1 487 1
 5040              		.cfi_startproc
 5041              		@ args = 0, pretend = 0, frame = 152
 5042              		@ frame_needed = 1, uses_anonymous_args = 0
 5043 0000 90B5     		push	{r4, r7, lr}
 5044              	.LCFI95:
 5045              		.cfi_def_cfa_offset 12
 5046              		.cfi_offset 4, -12
 5047              		.cfi_offset 7, -8
 5048              		.cfi_offset 14, -4
 5049 0002 A9B0     		sub	sp, sp, #164
 5050              	.LCFI96:
 5051              		.cfi_def_cfa_offset 176
 5052 0004 02AF     		add	r7, sp, #8
 5053              	.LCFI97:
 5054              		.cfi_def_cfa 7, 168
 5055 0006 F860     		str	r0, [r7, #12]
 5056 0008 B960     		str	r1, [r7, #8]
 5057 000a 7A60     		str	r2, [r7, #4]
 488:aes256ctr.c   ****   uint32_t w[16];
 489:aes256ctr.c   ****   uint64_t q[8];
 490:aes256ctr.c   ****   int i;
 491:aes256ctr.c   **** 
 492:aes256ctr.c   ****   memcpy(w, ivw, sizeof(w));
 5058              		.loc 1 492 3
 5059 000c 07F15403 		add	r3, r7, #84
 5060 0010 4022     		movs	r2, #64
 5061 0012 B968     		ldr	r1, [r7, #8]
 5062 0014 1846     		mov	r0, r3
 5063 0016 FFF7FEFF 		bl	memcpy
 493:aes256ctr.c   ****   for (i = 0; i < 4; i++) {
 5064              		.loc 1 493 10
 5065 001a 0023     		movs	r3, #0
 5066 001c C7F89430 		str	r3, [r7, #148]
 5067              		.loc 1 493 3
 5068 0020 1BE0     		b	.L40
 5069              	.L41:
 494:aes256ctr.c   ****     br_aes_ct64_interleave_in(&q[i], &q[i + 4], w + (i << 2));
 5070              		.loc 1 494 5 discriminator 3
 5071 0022 07F11002 		add	r2, r7, #16
 5072 0026 D7F89430 		ldr	r3, [r7, #148]
 5073 002a DB00     		lsls	r3, r3, #3
 5074 002c D018     		adds	r0, r2, r3
 5075              		.loc 1 494 43 discriminator 3
 5076 002e D7F89430 		ldr	r3, [r7, #148]
 5077 0032 0433     		adds	r3, r3, #4
 5078              		.loc 1 494 5 discriminator 3
 5079 0034 07F11002 		add	r2, r7, #16
 5080 0038 DB00     		lsls	r3, r3, #3
 5081 003a D118     		adds	r1, r2, r3
 5082              		.loc 1 494 56 discriminator 3
 5083 003c D7F89430 		ldr	r3, [r7, #148]
 5084 0040 9B00     		lsls	r3, r3, #2
 5085              		.loc 1 494 51 discriminator 3
 5086 0042 9B00     		lsls	r3, r3, #2
 5087              		.loc 1 494 5 discriminator 3
 5088 0044 07F15402 		add	r2, r7, #84
 5089 0048 1344     		add	r3, r3, r2
 5090 004a 1A46     		mov	r2, r3
 5091 004c FFF7FEFF 		bl	br_aes_ct64_interleave_in
 493:aes256ctr.c   ****   for (i = 0; i < 4; i++) {
 5092              		.loc 1 493 23 discriminator 3
 5093 0050 D7F89430 		ldr	r3, [r7, #148]
 5094 0054 0133     		adds	r3, r3, #1
 5095 0056 C7F89430 		str	r3, [r7, #148]
 5096              	.L40:
 493:aes256ctr.c   ****   for (i = 0; i < 4; i++) {
 5097              		.loc 1 493 3 discriminator 1
 5098 005a D7F89430 		ldr	r3, [r7, #148]
 5099 005e 032B     		cmp	r3, #3
 5100 0060 DFDD     		ble	.L41
 495:aes256ctr.c   ****   }
 496:aes256ctr.c   ****   br_aes_ct64_ortho(q);
 5101              		.loc 1 496 3
 5102 0062 07F11003 		add	r3, r7, #16
 5103 0066 1846     		mov	r0, r3
 5104 0068 FFF7FEFF 		bl	br_aes_ct64_ortho
 497:aes256ctr.c   **** 
 498:aes256ctr.c   ****   add_round_key(q, sk_exp);
 5105              		.loc 1 498 3
 5106 006c 07F11003 		add	r3, r7, #16
 5107 0070 7968     		ldr	r1, [r7, #4]
 5108 0072 1846     		mov	r0, r3
 5109 0074 FFF7FEFF 		bl	add_round_key
 499:aes256ctr.c   ****   for (i = 1; i < 14; i++) {
 5110              		.loc 1 499 10
 5111 0078 0123     		movs	r3, #1
 5112 007a C7F89430 		str	r3, [r7, #148]
 5113              		.loc 1 499 3
 5114 007e 1FE0     		b	.L42
 5115              	.L43:
 500:aes256ctr.c   ****     br_aes_ct64_bitslice_Sbox(q);
 5116              		.loc 1 500 5 discriminator 3
 5117 0080 07F11003 		add	r3, r7, #16
 5118 0084 1846     		mov	r0, r3
 5119 0086 FFF7FEFF 		bl	br_aes_ct64_bitslice_Sbox
 501:aes256ctr.c   ****     shift_rows(q);
 5120              		.loc 1 501 5 discriminator 3
 5121 008a 07F11003 		add	r3, r7, #16
 5122 008e 1846     		mov	r0, r3
 5123 0090 FFF7FEFF 		bl	shift_rows
 502:aes256ctr.c   ****     mix_columns(q);
 5124              		.loc 1 502 5 discriminator 3
 5125 0094 07F11003 		add	r3, r7, #16
 5126 0098 1846     		mov	r0, r3
 5127 009a FFF7FEFF 		bl	mix_columns
 503:aes256ctr.c   ****     add_round_key(q, sk_exp + (i << 3));
 5128              		.loc 1 503 34 discriminator 3
 5129 009e D7F89430 		ldr	r3, [r7, #148]
 5130 00a2 DB00     		lsls	r3, r3, #3
 5131              		.loc 1 503 29 discriminator 3
 5132 00a4 DB00     		lsls	r3, r3, #3
 5133 00a6 7A68     		ldr	r2, [r7, #4]
 5134 00a8 1A44     		add	r2, r2, r3
 5135              		.loc 1 503 5 discriminator 3
 5136 00aa 07F11003 		add	r3, r7, #16
 5137 00ae 1146     		mov	r1, r2
 5138 00b0 1846     		mov	r0, r3
 5139 00b2 FFF7FEFF 		bl	add_round_key
 499:aes256ctr.c   ****     br_aes_ct64_bitslice_Sbox(q);
 5140              		.loc 1 499 24 discriminator 3
 5141 00b6 D7F89430 		ldr	r3, [r7, #148]
 5142 00ba 0133     		adds	r3, r3, #1
 5143 00bc C7F89430 		str	r3, [r7, #148]
 5144              	.L42:
 499:aes256ctr.c   ****     br_aes_ct64_bitslice_Sbox(q);
 5145              		.loc 1 499 3 discriminator 1
 5146 00c0 D7F89430 		ldr	r3, [r7, #148]
 5147 00c4 0D2B     		cmp	r3, #13
 5148 00c6 DBDD     		ble	.L43
 504:aes256ctr.c   ****   }
 505:aes256ctr.c   ****   br_aes_ct64_bitslice_Sbox(q);
 5149              		.loc 1 505 3
 5150 00c8 07F11003 		add	r3, r7, #16
 5151 00cc 1846     		mov	r0, r3
 5152 00ce FFF7FEFF 		bl	br_aes_ct64_bitslice_Sbox
 506:aes256ctr.c   ****   shift_rows(q);
 5153              		.loc 1 506 3
 5154 00d2 07F11003 		add	r3, r7, #16
 5155 00d6 1846     		mov	r0, r3
 5156 00d8 FFF7FEFF 		bl	shift_rows
 507:aes256ctr.c   ****   add_round_key(q, sk_exp + 112);
 5157              		.loc 1 507 27
 5158 00dc 7B68     		ldr	r3, [r7, #4]
 5159 00de 03F56072 		add	r2, r3, #896
 5160              		.loc 1 507 3
 5161 00e2 07F11003 		add	r3, r7, #16
 5162 00e6 1146     		mov	r1, r2
 5163 00e8 1846     		mov	r0, r3
 5164 00ea FFF7FEFF 		bl	add_round_key
 508:aes256ctr.c   **** 
 509:aes256ctr.c   ****   br_aes_ct64_ortho(q);
 5165              		.loc 1 509 3
 5166 00ee 07F11003 		add	r3, r7, #16
 5167 00f2 1846     		mov	r0, r3
 5168 00f4 FFF7FEFF 		bl	br_aes_ct64_ortho
 510:aes256ctr.c   ****   for (i = 0; i < 4; i ++) {
 5169              		.loc 1 510 10
 5170 00f8 0023     		movs	r3, #0
 5171 00fa C7F89430 		str	r3, [r7, #148]
 5172              		.loc 1 510 3
 5173 00fe 25E0     		b	.L44
 5174              	.L45:
 511:aes256ctr.c   ****     br_aes_ct64_interleave_out(w + (i << 2), q[i], q[i + 4]);
 5175              		.loc 1 511 39 discriminator 3
 5176 0100 D7F89430 		ldr	r3, [r7, #148]
 5177 0104 9B00     		lsls	r3, r3, #2
 5178              		.loc 1 511 34 discriminator 3
 5179 0106 9B00     		lsls	r3, r3, #2
 5180              		.loc 1 511 5 discriminator 3
 5181 0108 07F15402 		add	r2, r7, #84
 5182 010c D418     		adds	r4, r2, r3
 5183 010e D7F89430 		ldr	r3, [r7, #148]
 5184 0112 DB00     		lsls	r3, r3, #3
 5185 0114 07F19802 		add	r2, r7, #152
 5186 0118 1344     		add	r3, r3, r2
 5187 011a 883B     		subs	r3, r3, #136
 5188 011c D3E90001 		ldrd	r0, [r3]
 5189              		.loc 1 511 56 discriminator 3
 5190 0120 D7F89430 		ldr	r3, [r7, #148]
 5191 0124 0433     		adds	r3, r3, #4
 5192              		.loc 1 511 5 discriminator 3
 5193 0126 DB00     		lsls	r3, r3, #3
 5194 0128 07F19802 		add	r2, r7, #152
 5195 012c 1344     		add	r3, r3, r2
 5196 012e 883B     		subs	r3, r3, #136
 5197 0130 D3E90023 		ldrd	r2, [r3]
 5198 0134 CDE90023 		strd	r2, [sp]
 5199 0138 0246     		mov	r2, r0
 5200 013a 0B46     		mov	r3, r1
 5201 013c 2046     		mov	r0, r4
 5202 013e FFF7FEFF 		bl	br_aes_ct64_interleave_out
 510:aes256ctr.c   ****   for (i = 0; i < 4; i ++) {
 5203              		.loc 1 510 24 discriminator 3
 5204 0142 D7F89430 		ldr	r3, [r7, #148]
 5205 0146 0133     		adds	r3, r3, #1
 5206 0148 C7F89430 		str	r3, [r7, #148]
 5207              	.L44:
 510:aes256ctr.c   ****   for (i = 0; i < 4; i ++) {
 5208              		.loc 1 510 3 discriminator 1
 5209 014c D7F89430 		ldr	r3, [r7, #148]
 5210 0150 032B     		cmp	r3, #3
 5211 0152 D5DD     		ble	.L45
 512:aes256ctr.c   ****   }
 513:aes256ctr.c   ****   br_range_enc32le(out, w, 16);
 5212              		.loc 1 513 3
 5213 0154 07F15403 		add	r3, r7, #84
 5214 0158 1022     		movs	r2, #16
 5215 015a 1946     		mov	r1, r3
 5216 015c F868     		ldr	r0, [r7, #12]
 5217 015e FFF7FEFF 		bl	br_range_enc32le
 514:aes256ctr.c   **** 
 515:aes256ctr.c   ****   /* Increase counter for next 4 blocks */
 516:aes256ctr.c   ****   inc4_be(ivw+3);
 5218              		.loc 1 516 3
 5219 0162 BB68     		ldr	r3, [r7, #8]
 5220 0164 0C33     		adds	r3, r3, #12
 5221 0166 1846     		mov	r0, r3
 5222 0168 FFF7FEFF 		bl	inc4_be
 517:aes256ctr.c   ****   inc4_be(ivw+7);
 5223              		.loc 1 517 3
 5224 016c BB68     		ldr	r3, [r7, #8]
 5225 016e 1C33     		adds	r3, r3, #28
 5226 0170 1846     		mov	r0, r3
 5227 0172 FFF7FEFF 		bl	inc4_be
 518:aes256ctr.c   ****   inc4_be(ivw+11);
 5228              		.loc 1 518 3
 5229 0176 BB68     		ldr	r3, [r7, #8]
 5230 0178 2C33     		adds	r3, r3, #44
 5231 017a 1846     		mov	r0, r3
 5232 017c FFF7FEFF 		bl	inc4_be
 519:aes256ctr.c   ****   inc4_be(ivw+15);
 5233              		.loc 1 519 3
 5234 0180 BB68     		ldr	r3, [r7, #8]
 5235 0182 3C33     		adds	r3, r3, #60
 5236 0184 1846     		mov	r0, r3
 5237 0186 FFF7FEFF 		bl	inc4_be
 520:aes256ctr.c   **** }
 5238              		.loc 1 520 1
 5239 018a 00BF     		nop
 5240 018c 9C37     		adds	r7, r7, #156
 5241              	.LCFI98:
 5242              		.cfi_def_cfa_offset 12
 5243 018e BD46     		mov	sp, r7
 5244              	.LCFI99:
 5245              		.cfi_def_cfa_register 13
 5246              		@ sp needed
 5247 0190 90BD     		pop	{r4, r7, pc}
 5248              		.cfi_endproc
 5249              	.LFE17:
 5251              		.section	.text.br_aes_ct64_ctr_init,"ax",%progbits
 5252              		.align	1
 5253              		.syntax unified
 5254              		.thumb
 5255              		.thumb_func
 5256              		.fpu softvfp
 5258              	br_aes_ct64_ctr_init:
 5259              	.LFB18:
 521:aes256ctr.c   **** 
 522:aes256ctr.c   **** static void br_aes_ct64_ctr_init(uint64_t sk_exp[120], const uint8_t *key)
 523:aes256ctr.c   **** {
 5260              		.loc 1 523 1
 5261              		.cfi_startproc
 5262              		@ args = 0, pretend = 0, frame = 248
 5263              		@ frame_needed = 1, uses_anonymous_args = 0
 5264 0000 80B5     		push	{r7, lr}
 5265              	.LCFI100:
 5266              		.cfi_def_cfa_offset 8
 5267              		.cfi_offset 7, -8
 5268              		.cfi_offset 14, -4
 5269 0002 BEB0     		sub	sp, sp, #248
 5270              	.LCFI101:
 5271              		.cfi_def_cfa_offset 256
 5272 0004 00AF     		add	r7, sp, #0
 5273              	.LCFI102:
 5274              		.cfi_def_cfa_register 7
 5275 0006 7860     		str	r0, [r7, #4]
 5276 0008 3960     		str	r1, [r7]
 524:aes256ctr.c   **** 	uint64_t skey[30];
 525:aes256ctr.c   **** 
 526:aes256ctr.c   **** 	br_aes_ct64_keysched(skey, key);
 5277              		.loc 1 526 2
 5278 000a 07F10803 		add	r3, r7, #8
 5279 000e 3968     		ldr	r1, [r7]
 5280 0010 1846     		mov	r0, r3
 5281 0012 FFF7FEFF 		bl	br_aes_ct64_keysched
 527:aes256ctr.c   **** 	br_aes_ct64_skey_expand(sk_exp, skey);
 5282              		.loc 1 527 2
 5283 0016 07F10803 		add	r3, r7, #8
 5284 001a 1946     		mov	r1, r3
 5285 001c 7868     		ldr	r0, [r7, #4]
 5286 001e FFF7FEFF 		bl	br_aes_ct64_skey_expand
 528:aes256ctr.c   **** }
 5287              		.loc 1 528 1
 5288 0022 00BF     		nop
 5289 0024 F837     		adds	r7, r7, #248
 5290              	.LCFI103:
 5291              		.cfi_def_cfa_offset 8
 5292 0026 BD46     		mov	sp, r7
 5293              	.LCFI104:
 5294              		.cfi_def_cfa_register 13
 5295              		@ sp needed
 5296 0028 80BD     		pop	{r7, pc}
 5297              		.cfi_endproc
 5298              	.LFE18:
 5300              		.section	.text.br_aes_ct64_ctr_run,"ax",%progbits
 5301              		.align	1
 5302              		.syntax unified
 5303              		.thumb
 5304              		.thumb_func
 5305              		.fpu softvfp
 5307              	br_aes_ct64_ctr_run:
 5308              	.LFB19:
 529:aes256ctr.c   **** 
 530:aes256ctr.c   **** static void br_aes_ct64_ctr_run(uint64_t sk_exp[120], const uint8_t *iv, uint32_t cc, uint8_t *data
 531:aes256ctr.c   **** {
 5309              		.loc 1 531 1
 5310              		.cfi_startproc
 5311              		@ args = 4, pretend = 0, frame = 152
 5312              		@ frame_needed = 1, uses_anonymous_args = 0
 5313 0000 80B5     		push	{r7, lr}
 5314              	.LCFI105:
 5315              		.cfi_def_cfa_offset 8
 5316              		.cfi_offset 7, -8
 5317              		.cfi_offset 14, -4
 5318 0002 A6B0     		sub	sp, sp, #152
 5319              	.LCFI106:
 5320              		.cfi_def_cfa_offset 160
 5321 0004 00AF     		add	r7, sp, #0
 5322              	.LCFI107:
 5323              		.cfi_def_cfa_register 7
 5324 0006 F860     		str	r0, [r7, #12]
 5325 0008 B960     		str	r1, [r7, #8]
 5326 000a 7A60     		str	r2, [r7, #4]
 5327 000c 3B60     		str	r3, [r7]
 532:aes256ctr.c   **** 	uint32_t ivw[16];
 533:aes256ctr.c   **** 	size_t i;
 534:aes256ctr.c   **** 
 535:aes256ctr.c   **** 	br_range_dec32le(ivw, 3, iv);
 5328              		.loc 1 535 2
 5329 000e 07F15403 		add	r3, r7, #84
 5330 0012 BA68     		ldr	r2, [r7, #8]
 5331 0014 0321     		movs	r1, #3
 5332 0016 1846     		mov	r0, r3
 5333 0018 FFF7FEFF 		bl	br_range_dec32le
 536:aes256ctr.c   **** 	memcpy(ivw +  4, ivw, 3 * sizeof(uint32_t));
 5334              		.loc 1 536 2
 5335 001c 07F15403 		add	r3, r7, #84
 5336 0020 1033     		adds	r3, r3, #16
 5337 0022 07F15401 		add	r1, r7, #84
 5338 0026 0C22     		movs	r2, #12
 5339 0028 1846     		mov	r0, r3
 5340 002a FFF7FEFF 		bl	memcpy
 537:aes256ctr.c   **** 	memcpy(ivw +  8, ivw, 3 * sizeof(uint32_t));
 5341              		.loc 1 537 2
 5342 002e 07F15403 		add	r3, r7, #84
 5343 0032 2033     		adds	r3, r3, #32
 5344 0034 07F15401 		add	r1, r7, #84
 5345 0038 0C22     		movs	r2, #12
 5346 003a 1846     		mov	r0, r3
 5347 003c FFF7FEFF 		bl	memcpy
 538:aes256ctr.c   **** 	memcpy(ivw + 12, ivw, 3 * sizeof(uint32_t));
 5348              		.loc 1 538 2
 5349 0040 07F15403 		add	r3, r7, #84
 5350 0044 3033     		adds	r3, r3, #48
 5351 0046 07F15401 		add	r1, r7, #84
 5352 004a 0C22     		movs	r2, #12
 5353 004c 1846     		mov	r0, r3
 5354 004e FFF7FEFF 		bl	memcpy
 539:aes256ctr.c   **** 	ivw[ 3] = br_swap32(cc);
 5355              		.loc 1 539 12
 5356 0052 7868     		ldr	r0, [r7, #4]
 5357 0054 FFF7FEFF 		bl	br_swap32
 5358 0058 0346     		mov	r3, r0
 5359              		.loc 1 539 10
 5360 005a 3B66     		str	r3, [r7, #96]
 540:aes256ctr.c   **** 	ivw[ 7] = br_swap32(cc + 1);
 5361              		.loc 1 540 12
 5362 005c 7B68     		ldr	r3, [r7, #4]
 5363 005e 0133     		adds	r3, r3, #1
 5364 0060 1846     		mov	r0, r3
 5365 0062 FFF7FEFF 		bl	br_swap32
 5366 0066 0346     		mov	r3, r0
 5367              		.loc 1 540 10
 5368 0068 3B67     		str	r3, [r7, #112]
 541:aes256ctr.c   **** 	ivw[11] = br_swap32(cc + 2);
 5369              		.loc 1 541 12
 5370 006a 7B68     		ldr	r3, [r7, #4]
 5371 006c 0233     		adds	r3, r3, #2
 5372 006e 1846     		mov	r0, r3
 5373 0070 FFF7FEFF 		bl	br_swap32
 5374 0074 0346     		mov	r3, r0
 5375              		.loc 1 541 10
 5376 0076 C7F88030 		str	r3, [r7, #128]
 542:aes256ctr.c   **** 	ivw[15] = br_swap32(cc + 3);
 5377              		.loc 1 542 12
 5378 007a 7B68     		ldr	r3, [r7, #4]
 5379 007c 0333     		adds	r3, r3, #3
 5380 007e 1846     		mov	r0, r3
 5381 0080 FFF7FEFF 		bl	br_swap32
 5382 0084 0346     		mov	r3, r0
 5383              		.loc 1 542 10
 5384 0086 C7F89030 		str	r3, [r7, #144]
 543:aes256ctr.c   **** 
 544:aes256ctr.c   **** 	while (len > 64) {
 5385              		.loc 1 544 8
 5386 008a 0EE0     		b	.L48
 5387              	.L49:
 545:aes256ctr.c   **** 		aes_ctr4x(data, ivw, sk_exp);
 5388              		.loc 1 545 3
 5389 008c 07F15403 		add	r3, r7, #84
 5390 0090 FA68     		ldr	r2, [r7, #12]
 5391 0092 1946     		mov	r1, r3
 5392 0094 3868     		ldr	r0, [r7]
 5393 0096 FFF7FEFF 		bl	aes_ctr4x
 546:aes256ctr.c   **** 		data += 64;
 5394              		.loc 1 546 8
 5395 009a 3B68     		ldr	r3, [r7]
 5396 009c 4033     		adds	r3, r3, #64
 5397 009e 3B60     		str	r3, [r7]
 547:aes256ctr.c   **** 		len -= 64;
 5398              		.loc 1 547 7
 5399 00a0 D7F8A030 		ldr	r3, [r7, #160]
 5400 00a4 403B     		subs	r3, r3, #64
 5401 00a6 C7F8A030 		str	r3, [r7, #160]
 5402              	.L48:
 544:aes256ctr.c   **** 		aes_ctr4x(data, ivw, sk_exp);
 5403              		.loc 1 544 8
 5404 00aa D7F8A030 		ldr	r3, [r7, #160]
 5405 00ae 402B     		cmp	r3, #64
 5406 00b0 ECD8     		bhi	.L49
 548:aes256ctr.c   **** 	}
 549:aes256ctr.c   **** 	if(len > 0) {
 5407              		.loc 1 549 4
 5408 00b2 D7F8A030 		ldr	r3, [r7, #160]
 5409 00b6 002B     		cmp	r3, #0
 5410 00b8 21D0     		beq	.L53
 5411              	.LBB17:
 550:aes256ctr.c   **** 		uint8_t tmp[64];
 551:aes256ctr.c   **** 		aes_ctr4x(tmp, ivw, sk_exp);
 5412              		.loc 1 551 3
 5413 00ba 07F15401 		add	r1, r7, #84
 5414 00be 07F11403 		add	r3, r7, #20
 5415 00c2 FA68     		ldr	r2, [r7, #12]
 5416 00c4 1846     		mov	r0, r3
 5417 00c6 FFF7FEFF 		bl	aes_ctr4x
 552:aes256ctr.c   **** 		for(i=0;i<len;i++)
 5418              		.loc 1 552 8
 5419 00ca 0023     		movs	r3, #0
 5420 00cc C7F89430 		str	r3, [r7, #148]
 5421              		.loc 1 552 3
 5422 00d0 0FE0     		b	.L51
 5423              	.L52:
 553:aes256ctr.c   **** 			data[i] = tmp[i];
 5424              		.loc 1 553 8 discriminator 3
 5425 00d2 3A68     		ldr	r2, [r7]
 5426 00d4 D7F89430 		ldr	r3, [r7, #148]
 5427 00d8 1344     		add	r3, r3, r2
 5428              		.loc 1 553 17 discriminator 3
 5429 00da 07F11401 		add	r1, r7, #20
 5430 00de D7F89420 		ldr	r2, [r7, #148]
 5431 00e2 0A44     		add	r2, r2, r1
 5432 00e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5433              		.loc 1 553 12 discriminator 3
 5434 00e6 1A70     		strb	r2, [r3]
 552:aes256ctr.c   **** 		for(i=0;i<len;i++)
 5435              		.loc 1 552 18 discriminator 3
 5436 00e8 D7F89430 		ldr	r3, [r7, #148]
 5437 00ec 0133     		adds	r3, r3, #1
 5438 00ee C7F89430 		str	r3, [r7, #148]
 5439              	.L51:
 552:aes256ctr.c   **** 		for(i=0;i<len;i++)
 5440              		.loc 1 552 3 discriminator 1
 5441 00f2 D7F89420 		ldr	r2, [r7, #148]
 5442 00f6 D7F8A030 		ldr	r3, [r7, #160]
 5443 00fa 9A42     		cmp	r2, r3
 5444 00fc E9D3     		bcc	.L52
 5445              	.L53:
 5446              	.LBE17:
 554:aes256ctr.c   **** 	}
 555:aes256ctr.c   **** }
 5447              		.loc 1 555 1
 5448 00fe 00BF     		nop
 5449 0100 9837     		adds	r7, r7, #152
 5450              	.LCFI108:
 5451              		.cfi_def_cfa_offset 8
 5452 0102 BD46     		mov	sp, r7
 5453              	.LCFI109:
 5454              		.cfi_def_cfa_register 13
 5455              		@ sp needed
 5456 0104 80BD     		pop	{r7, pc}
 5457              		.cfi_endproc
 5458              	.LFE19:
 5460              		.section	.text.pqcrystals_aes256ctr_ref_prf,"ax",%progbits
 5461              		.align	1
 5462              		.global	pqcrystals_aes256ctr_ref_prf
 5463              		.syntax unified
 5464              		.thumb
 5465              		.thumb_func
 5466              		.fpu softvfp
 5468              	pqcrystals_aes256ctr_ref_prf:
 5469              	.LFB20:
 556:aes256ctr.c   **** 
 557:aes256ctr.c   **** void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)
 558:aes256ctr.c   **** {
 5470              		.loc 1 558 1
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 976
 5473              		@ frame_needed = 1, uses_anonymous_args = 0
 5474 0000 90B5     		push	{r4, r7, lr}
 5475              	.LCFI110:
 5476              		.cfi_def_cfa_offset 12
 5477              		.cfi_offset 4, -12
 5478              		.cfi_offset 7, -8
 5479              		.cfi_offset 14, -4
 5480 0002 ADF5777D 		sub	sp, sp, #988
 5481              	.LCFI111:
 5482              		.cfi_def_cfa_offset 1000
 5483 0006 02AF     		add	r7, sp, #8
 5484              	.LCFI112:
 5485              		.cfi_def_cfa 7, 992
 5486 0008 07F57474 		add	r4, r7, #976
 5487 000c A4F57174 		sub	r4, r4, #964
 5488 0010 2060     		str	r0, [r4]
 5489 0012 07F57470 		add	r0, r7, #976
 5490 0016 A0F57270 		sub	r0, r0, #968
 5491 001a 0160     		str	r1, [r0]
 5492 001c 07F57471 		add	r1, r7, #976
 5493 0020 A1F57371 		sub	r1, r1, #972
 5494 0024 0A60     		str	r2, [r1]
 5495 0026 07F57472 		add	r2, r7, #976
 5496 002a A2F57472 		sub	r2, r2, #976
 5497 002e 1360     		str	r3, [r2]
 559:aes256ctr.c   ****   uint64_t sk_exp[120];
 560:aes256ctr.c   **** 
 561:aes256ctr.c   ****   br_aes_ct64_ctr_init(sk_exp, key);
 5498              		.loc 1 561 3
 5499 0030 07F57473 		add	r3, r7, #976
 5500 0034 A3F57373 		sub	r3, r3, #972
 5501 0038 07F11002 		add	r2, r7, #16
 5502 003c 1968     		ldr	r1, [r3]
 5503 003e 1046     		mov	r0, r2
 5504 0040 FFF7FEFF 		bl	br_aes_ct64_ctr_init
 562:aes256ctr.c   ****   br_aes_ct64_ctr_run(sk_exp, nonce, 0, out, outlen);
 5505              		.loc 1 562 3
 5506 0044 07F57473 		add	r3, r7, #976
 5507 0048 A3F57173 		sub	r3, r3, #964
 5508 004c 07F57472 		add	r2, r7, #976
 5509 0050 A2F57471 		sub	r1, r2, #976
 5510 0054 07F11000 		add	r0, r7, #16
 5511 0058 07F57472 		add	r2, r7, #976
 5512 005c A2F57272 		sub	r2, r2, #968
 5513 0060 1268     		ldr	r2, [r2]
 5514 0062 0092     		str	r2, [sp]
 5515 0064 1B68     		ldr	r3, [r3]
 5516 0066 0022     		movs	r2, #0
 5517 0068 0968     		ldr	r1, [r1]
 5518 006a FFF7FEFF 		bl	br_aes_ct64_ctr_run
 563:aes256ctr.c   **** }
 5519              		.loc 1 563 1
 5520 006e 00BF     		nop
 5521 0070 07F57577 		add	r7, r7, #980
 5522              	.LCFI113:
 5523              		.cfi_def_cfa_offset 12
 5524 0074 BD46     		mov	sp, r7
 5525              	.LCFI114:
 5526              		.cfi_def_cfa_register 13
 5527              		@ sp needed
 5528 0076 90BD     		pop	{r4, r7, pc}
 5529              		.cfi_endproc
 5530              	.LFE20:
 5532              		.section	.text.pqcrystals_aes256ctr_ref_init,"ax",%progbits
 5533              		.align	1
 5534              		.global	pqcrystals_aes256ctr_ref_init
 5535              		.syntax unified
 5536              		.thumb
 5537              		.thumb_func
 5538              		.fpu softvfp
 5540              	pqcrystals_aes256ctr_ref_init:
 5541              	.LFB21:
 564:aes256ctr.c   **** 
 565:aes256ctr.c   **** void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)
 566:aes256ctr.c   **** {
 5542              		.loc 1 566 1
 5543              		.cfi_startproc
 5544              		@ args = 0, pretend = 0, frame = 16
 5545              		@ frame_needed = 1, uses_anonymous_args = 0
 5546 0000 80B5     		push	{r7, lr}
 5547              	.LCFI115:
 5548              		.cfi_def_cfa_offset 8
 5549              		.cfi_offset 7, -8
 5550              		.cfi_offset 14, -4
 5551 0002 84B0     		sub	sp, sp, #16
 5552              	.LCFI116:
 5553              		.cfi_def_cfa_offset 24
 5554 0004 00AF     		add	r7, sp, #0
 5555              	.LCFI117:
 5556              		.cfi_def_cfa_register 7
 5557 0006 F860     		str	r0, [r7, #12]
 5558 0008 B960     		str	r1, [r7, #8]
 5559 000a 7A60     		str	r2, [r7, #4]
 567:aes256ctr.c   ****   br_aes_ct64_ctr_init(s->sk_exp, key);
 5560              		.loc 1 567 25
 5561 000c FB68     		ldr	r3, [r7, #12]
 5562              		.loc 1 567 3
 5563 000e B968     		ldr	r1, [r7, #8]
 5564 0010 1846     		mov	r0, r3
 5565 0012 FFF7FEFF 		bl	br_aes_ct64_ctr_init
 568:aes256ctr.c   **** 
 569:aes256ctr.c   ****   br_range_dec32le(s->ivw, 3, nonce);
 5566              		.loc 1 569 21
 5567 0016 FB68     		ldr	r3, [r7, #12]
 5568 0018 03F57073 		add	r3, r3, #960
 5569              		.loc 1 569 3
 5570 001c 7A68     		ldr	r2, [r7, #4]
 5571 001e 0321     		movs	r1, #3
 5572 0020 1846     		mov	r0, r3
 5573 0022 FFF7FEFF 		bl	br_range_dec32le
 570:aes256ctr.c   ****   memcpy(s->ivw +  4, s->ivw, 3 * sizeof(uint32_t));
 5574              		.loc 1 570 10
 5575 0026 FB68     		ldr	r3, [r7, #12]
 5576 0028 03F57073 		add	r3, r3, #960
 5577              		.loc 1 570 3
 5578 002c 03F11000 		add	r0, r3, #16
 5579              		.loc 1 570 24
 5580 0030 FB68     		ldr	r3, [r7, #12]
 5581 0032 03F57073 		add	r3, r3, #960
 5582              		.loc 1 570 3
 5583 0036 0C22     		movs	r2, #12
 5584 0038 1946     		mov	r1, r3
 5585 003a FFF7FEFF 		bl	memcpy
 571:aes256ctr.c   ****   memcpy(s->ivw +  8, s->ivw, 3 * sizeof(uint32_t));
 5586              		.loc 1 571 10
 5587 003e FB68     		ldr	r3, [r7, #12]
 5588 0040 03F57073 		add	r3, r3, #960
 5589              		.loc 1 571 3
 5590 0044 03F12000 		add	r0, r3, #32
 5591              		.loc 1 571 24
 5592 0048 FB68     		ldr	r3, [r7, #12]
 5593 004a 03F57073 		add	r3, r3, #960
 5594              		.loc 1 571 3
 5595 004e 0C22     		movs	r2, #12
 5596 0050 1946     		mov	r1, r3
 5597 0052 FFF7FEFF 		bl	memcpy
 572:aes256ctr.c   ****   memcpy(s->ivw + 12, s->ivw, 3 * sizeof(uint32_t));
 5598              		.loc 1 572 10
 5599 0056 FB68     		ldr	r3, [r7, #12]
 5600 0058 03F57073 		add	r3, r3, #960
 5601              		.loc 1 572 3
 5602 005c 03F13000 		add	r0, r3, #48
 5603              		.loc 1 572 24
 5604 0060 FB68     		ldr	r3, [r7, #12]
 5605 0062 03F57073 		add	r3, r3, #960
 5606              		.loc 1 572 3
 5607 0066 0C22     		movs	r2, #12
 5608 0068 1946     		mov	r1, r3
 5609 006a FFF7FEFF 		bl	memcpy
 573:aes256ctr.c   ****   s->ivw[ 3] = br_swap32(0);
 5610              		.loc 1 573 16
 5611 006e 0020     		movs	r0, #0
 5612 0070 FFF7FEFF 		bl	br_swap32
 5613 0074 0246     		mov	r2, r0
 5614              		.loc 1 573 14
 5615 0076 FB68     		ldr	r3, [r7, #12]
 5616 0078 C3F8CC23 		str	r2, [r3, #972]
 574:aes256ctr.c   ****   s->ivw[ 7] = br_swap32(1);
 5617              		.loc 1 574 16
 5618 007c 0120     		movs	r0, #1
 5619 007e FFF7FEFF 		bl	br_swap32
 5620 0082 0246     		mov	r2, r0
 5621              		.loc 1 574 14
 5622 0084 FB68     		ldr	r3, [r7, #12]
 5623 0086 C3F8DC23 		str	r2, [r3, #988]
 575:aes256ctr.c   ****   s->ivw[11] = br_swap32(2);
 5624              		.loc 1 575 16
 5625 008a 0220     		movs	r0, #2
 5626 008c FFF7FEFF 		bl	br_swap32
 5627 0090 0246     		mov	r2, r0
 5628              		.loc 1 575 14
 5629 0092 FB68     		ldr	r3, [r7, #12]
 5630 0094 C3F8EC23 		str	r2, [r3, #1004]
 576:aes256ctr.c   ****   s->ivw[15] = br_swap32(3);
 5631              		.loc 1 576 16
 5632 0098 0320     		movs	r0, #3
 5633 009a FFF7FEFF 		bl	br_swap32
 5634 009e 0246     		mov	r2, r0
 5635              		.loc 1 576 14
 5636 00a0 FB68     		ldr	r3, [r7, #12]
 5637 00a2 C3F8FC23 		str	r2, [r3, #1020]
 577:aes256ctr.c   **** }
 5638              		.loc 1 577 1
 5639 00a6 00BF     		nop
 5640 00a8 1037     		adds	r7, r7, #16
 5641              	.LCFI118:
 5642              		.cfi_def_cfa_offset 8
 5643 00aa BD46     		mov	sp, r7
 5644              	.LCFI119:
 5645              		.cfi_def_cfa_register 13
 5646              		@ sp needed
 5647 00ac 80BD     		pop	{r7, pc}
 5648              		.cfi_endproc
 5649              	.LFE21:
 5651              		.section	.text.pqcrystals_aes256ctr_ref_squeezeblocks,"ax",%progbits
 5652              		.align	1
 5653              		.global	pqcrystals_aes256ctr_ref_squeezeblocks
 5654              		.syntax unified
 5655              		.thumb
 5656              		.thumb_func
 5657              		.fpu softvfp
 5659              	pqcrystals_aes256ctr_ref_squeezeblocks:
 5660              	.LFB22:
 578:aes256ctr.c   **** 
 579:aes256ctr.c   **** void aes256ctr_squeezeblocks(uint8_t *out, size_t nblocks, aes256ctr_ctx *s)
 580:aes256ctr.c   **** {
 5661              		.loc 1 580 1
 5662              		.cfi_startproc
 5663              		@ args = 0, pretend = 0, frame = 16
 5664              		@ frame_needed = 1, uses_anonymous_args = 0
 5665 0000 80B5     		push	{r7, lr}
 5666              	.LCFI120:
 5667              		.cfi_def_cfa_offset 8
 5668              		.cfi_offset 7, -8
 5669              		.cfi_offset 14, -4
 5670 0002 84B0     		sub	sp, sp, #16
 5671              	.LCFI121:
 5672              		.cfi_def_cfa_offset 24
 5673 0004 00AF     		add	r7, sp, #0
 5674              	.LCFI122:
 5675              		.cfi_def_cfa_register 7
 5676 0006 F860     		str	r0, [r7, #12]
 5677 0008 B960     		str	r1, [r7, #8]
 5678 000a 7A60     		str	r2, [r7, #4]
 581:aes256ctr.c   ****   while (nblocks > 0) {
 5679              		.loc 1 581 9
 5680 000c 0DE0     		b	.L57
 5681              	.L58:
 582:aes256ctr.c   ****     aes_ctr4x(out, s->ivw, s->sk_exp);
 5682              		.loc 1 582 21
 5683 000e 7B68     		ldr	r3, [r7, #4]
 5684 0010 03F57073 		add	r3, r3, #960
 5685              		.loc 1 582 29
 5686 0014 7A68     		ldr	r2, [r7, #4]
 5687              		.loc 1 582 5
 5688 0016 1946     		mov	r1, r3
 5689 0018 F868     		ldr	r0, [r7, #12]
 5690 001a FFF7FEFF 		bl	aes_ctr4x
 583:aes256ctr.c   ****     out += 64;
 5691              		.loc 1 583 9
 5692 001e FB68     		ldr	r3, [r7, #12]
 5693 0020 4033     		adds	r3, r3, #64
 5694 0022 FB60     		str	r3, [r7, #12]
 584:aes256ctr.c   ****     nblocks--;
 5695              		.loc 1 584 12
 5696 0024 BB68     		ldr	r3, [r7, #8]
 5697 0026 013B     		subs	r3, r3, #1
 5698 0028 BB60     		str	r3, [r7, #8]
 5699              	.L57:
 581:aes256ctr.c   ****     aes_ctr4x(out, s->ivw, s->sk_exp);
 5700              		.loc 1 581 9
 5701 002a BB68     		ldr	r3, [r7, #8]
 5702 002c 002B     		cmp	r3, #0
 5703 002e EED1     		bne	.L58
 585:aes256ctr.c   ****   }
 586:aes256ctr.c   **** }
 5704              		.loc 1 586 1
 5705 0030 00BF     		nop
 5706 0032 00BF     		nop
 5707 0034 1037     		adds	r7, r7, #16
 5708              	.LCFI123:
 5709              		.cfi_def_cfa_offset 8
 5710 0036 BD46     		mov	sp, r7
 5711              	.LCFI124:
 5712              		.cfi_def_cfa_register 13
 5713              		@ sp needed
 5714 0038 80BD     		pop	{r7, pc}
 5715              		.cfi_endproc
 5716              	.LFE22:
 5718              		.text
 5719              	.Letext0:
 5720              		.file 2 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine\\_d
 5721              		.file 3 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_stdin
 5722              		.file 4 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\lib\\gcc\\arm-none-eabi\\10.2.1\\in
 5723              		.file 5 "aes256ctr.h"
DEFINED SYMBOLS
                            *ABS*:00000000 aes256ctr.c
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:16     .text.br_dec32le:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:23     .text.br_dec32le:00000000 br_dec32le
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:89     .text.br_range_dec32le:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:95     .text.br_range_dec32le:00000000 br_range_dec32le
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:156    .text.br_swap32:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:162    .text.br_swap32:00000000 br_swap32
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:213    .text.br_enc32le:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:219    .text.br_enc32le:00000000 br_enc32le
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:292    .text.br_range_enc32le:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:298    .text.br_range_enc32le:00000000 br_range_enc32le
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:357    .text.br_aes_ct64_bitslice_Sbox:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:363    .text.br_aes_ct64_bitslice_Sbox:00000000 br_aes_ct64_bitslice_Sbox
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:1917   .text.br_aes_ct64_ortho:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:1923   .text.br_aes_ct64_ortho:00000000 br_aes_ct64_ortho
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:2734   .text.br_aes_ct64_interleave_in:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:2740   .text.br_aes_ct64_interleave_in:00000000 br_aes_ct64_interleave_in
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3054   .text.br_aes_ct64_interleave_out:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3060   .text.br_aes_ct64_interleave_out:00000000 br_aes_ct64_interleave_out
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3308   .rodata:00000000 $d
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3311   .rodata:00000000 Rcon
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3314   .text.sub_word:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3320   .text.sub_word:00000000 sub_word
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3382   .text.br_aes_ct64_keysched:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3388   .text.br_aes_ct64_keysched:00000000 br_aes_ct64_keysched
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3775   .text.br_aes_ct64_keysched:00000390 $d
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3780   .text.br_aes_ct64_skey_expand:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:3786   .text.br_aes_ct64_skey_expand:00000000 br_aes_ct64_skey_expand
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4017   .text.add_round_key:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4023   .text.add_round_key:00000000 add_round_key
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4196   .text.shift_rows:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4202   .text.shift_rows:00000000 shift_rows
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4388   .text.rotr32:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4394   .text.rotr32:00000000 rotr32
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4434   .text.mix_columns:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4440   .text.mix_columns:00000000 mix_columns
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4973   .text.inc4_be:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:4979   .text.inc4_be:00000000 inc4_be
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5031   .text.aes_ctr4x:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5037   .text.aes_ctr4x:00000000 aes_ctr4x
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5252   .text.br_aes_ct64_ctr_init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5258   .text.br_aes_ct64_ctr_init:00000000 br_aes_ct64_ctr_init
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5301   .text.br_aes_ct64_ctr_run:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5307   .text.br_aes_ct64_ctr_run:00000000 br_aes_ct64_ctr_run
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5461   .text.pqcrystals_aes256ctr_ref_prf:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5468   .text.pqcrystals_aes256ctr_ref_prf:00000000 pqcrystals_aes256ctr_ref_prf
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5533   .text.pqcrystals_aes256ctr_ref_init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5540   .text.pqcrystals_aes256ctr_ref_init:00000000 pqcrystals_aes256ctr_ref_init
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5652   .text.pqcrystals_aes256ctr_ref_squeezeblocks:00000000 $t
C:\Users\H3C\AppData\Local\Temp\cc2bItOi.s:5659   .text.pqcrystals_aes256ctr_ref_squeezeblocks:00000000 pqcrystals_aes256ctr_ref_squeezeblocks

UNDEFINED SYMBOLS
memset
memcpy
