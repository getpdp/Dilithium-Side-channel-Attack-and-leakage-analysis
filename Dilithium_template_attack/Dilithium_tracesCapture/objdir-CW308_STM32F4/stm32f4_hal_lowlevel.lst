   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4_hal_lowlevel.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_GetTick,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_GetTick
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_GetTick:
  25              	.LFB126:
  26              		.file 1 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c"
   1:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    
   6:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** */
   8:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
   9:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /*
  10:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
  12:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      without specific prior written permission.
  22:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
  23:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
  34:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ******************************************************************************
  35:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** */ 
  36:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  37:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  38:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4_hal.h"
  39:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4_hal_lowlevel.h"
  40:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_rcc.h"
  41:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_gpio.h"
  42:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_dma.h"
  43:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_uart.h"
  44:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_flash.h"
  45:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_cryp.h"
  46:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  47:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  48:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  49:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s */
  50:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  51:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  52:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  53:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
  27              		.loc 1 53 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  54:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 	static uint32_t tick;
  55:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 	return tick++;;
  39              		.loc 1 55 13
  40 0004 044B     		ldr	r3, .L3
  41 0006 1B68     		ldr	r3, [r3]
  42 0008 5A1C     		adds	r2, r3, #1
  43 000a 0349     		ldr	r1, .L3
  44 000c 0A60     		str	r2, [r1]
  56:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
  45              		.loc 1 56 1
  46 000e 1846     		mov	r0, r3
  47 0010 BD46     		mov	sp, r7
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0012 80BC     		pop	{r7}
  52              	.LCFI3:
  53              		.cfi_restore 7
  54              		.cfi_def_cfa_offset 0
  55 0014 7047     		bx	lr
  56              	.L4:
  57 0016 00BF     		.align	2
  58              	.L3:
  59 0018 00000000 		.word	tick.0
  60              		.cfi_endproc
  61              	.LFE126:
  63              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
  64              		.align	1
  65              		.global	RCC_AHB2PeriphClockCmd
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu softvfp
  71              	RCC_AHB2PeriphClockCmd:
  72              	.LFB127:
  57:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  58:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
  59:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
  60:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
  61:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         is disabled and the application software has to enable this clock before 
  62:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         using it. 
  63:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
  64:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be any combination of the following values:
  65:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
  66:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
  67:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
  68:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
  69:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
  70:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  NewState: new state of the specified peripheral clock.
  71:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be: ENABLE or DISABLE.
  72:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
  73:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
  74:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
  75:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
  73              		.loc 1 75 1
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78 0000 80B4     		push	{r7}
  79              	.LCFI4:
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 83B0     		sub	sp, sp, #12
  83              	.LCFI5:
  84              		.cfi_def_cfa_offset 16
  85 0004 00AF     		add	r7, sp, #0
  86              	.LCFI6:
  87              		.cfi_def_cfa_register 7
  88 0006 7860     		str	r0, [r7, #4]
  89 0008 0B46     		mov	r3, r1
  90 000a FB70     		strb	r3, [r7, #3]
  76:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
  77:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
  78:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  79:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  80:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if (NewState != DISABLE)
  91              		.loc 1 80 6
  92 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  93 000e 002B     		cmp	r3, #0
  94 0010 06D0     		beq	.L6
  81:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
  82:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
  95              		.loc 1 82 18
  96 0012 094B     		ldr	r3, .L9
  97 0014 5A6B     		ldr	r2, [r3, #52]
  98 0016 0849     		ldr	r1, .L9
  99 0018 7B68     		ldr	r3, [r7, #4]
 100 001a 1343     		orrs	r3, r3, r2
 101 001c 4B63     		str	r3, [r1, #52]
  83:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
  84:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
  85:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
  86:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
  87:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
  88:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 102              		.loc 1 88 1
 103 001e 06E0     		b	.L8
 104              	.L6:
  86:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 105              		.loc 1 86 18
 106 0020 054B     		ldr	r3, .L9
 107 0022 5A6B     		ldr	r2, [r3, #52]
  86:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 108              		.loc 1 86 21
 109 0024 7B68     		ldr	r3, [r7, #4]
 110 0026 DB43     		mvns	r3, r3
  86:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 111              		.loc 1 86 18
 112 0028 0349     		ldr	r1, .L9
 113 002a 1340     		ands	r3, r3, r2
 114 002c 4B63     		str	r3, [r1, #52]
 115              	.L8:
 116              		.loc 1 88 1
 117 002e 00BF     		nop
 118 0030 0C37     		adds	r7, r7, #12
 119              	.LCFI7:
 120              		.cfi_def_cfa_offset 4
 121 0032 BD46     		mov	sp, r7
 122              	.LCFI8:
 123              		.cfi_def_cfa_register 13
 124              		@ sp needed
 125 0034 80BC     		pop	{r7}
 126              	.LCFI9:
 127              		.cfi_restore 7
 128              		.cfi_def_cfa_offset 0
 129 0036 7047     		bx	lr
 130              	.L10:
 131              		.align	2
 132              	.L9:
 133 0038 00380240 		.word	1073887232
 134              		.cfi_endproc
 135              	.LFE127:
 137              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 138              		.align	1
 139              		.global	HAL_RCC_OscConfig
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	HAL_RCC_OscConfig:
 146              	.LFB128:
  89:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  90:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
  91:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
  92:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
  93:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
  94:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
  95:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
  96:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
  97:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         supported by this API. User should request a transition to LSE Off
  98:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
  99:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 100:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         supported by this API. User should request a transition to HSE Off
 101:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
 102:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
 103:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 104:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 105:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 147              		.loc 1 105 1
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 56
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151 0000 80B5     		push	{r7, lr}
 152              	.LCFI10:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 8EB0     		sub	sp, sp, #56
 157              	.LCFI11:
 158              		.cfi_def_cfa_offset 64
 159 0004 00AF     		add	r7, sp, #0
 160              	.LCFI12:
 161              		.cfi_def_cfa_register 7
 162 0006 7860     		str	r0, [r7, #4]
 106:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 163              		.loc 1 106 12
 164 0008 0023     		movs	r3, #0
 165 000a 7B63     		str	r3, [r7, #52]
 107:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 108:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 109:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 110:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/
 111:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 166              		.loc 1 111 25
 167 000c 7B68     		ldr	r3, [r7, #4]
 168 000e 1B68     		ldr	r3, [r3]
 169              		.loc 1 111 43
 170 0010 03F00103 		and	r3, r3, #1
 171              		.loc 1 111 5
 172 0014 002B     		cmp	r3, #0
 173 0016 77D0     		beq	.L12
 112:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 113:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 114:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 115:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 116:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 174              		.loc 1 116 9
 175 0018 934B     		ldr	r3, .L66
 176 001a 9B68     		ldr	r3, [r3, #8]
 177 001c 03F00C03 		and	r3, r3, #12
 178              		.loc 1 116 7
 179 0020 042B     		cmp	r3, #4
 180 0022 0CD0     		beq	.L13
 117:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 181              		.loc 1 117 9 discriminator 1
 182 0024 904B     		ldr	r3, .L66
 183 0026 9B68     		ldr	r3, [r3, #8]
 184 0028 03F00C03 		and	r3, r3, #12
 116:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 185              		.loc 1 116 60 discriminator 1
 186 002c 082B     		cmp	r3, #8
 187 002e 12D1     		bne	.L14
 188              		.loc 1 117 68
 189 0030 8D4B     		ldr	r3, .L66
 190 0032 5B68     		ldr	r3, [r3, #4]
 191              		.loc 1 117 78
 192 0034 03F48003 		and	r3, r3, #4194304
 193              		.loc 1 117 60
 194 0038 B3F5800F 		cmp	r3, #4194304
 195 003c 0BD1     		bne	.L14
 196              	.L13:
 118:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 119:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 197              		.loc 1 119 11
 198 003e 8A4B     		ldr	r3, .L66
 199 0040 1B68     		ldr	r3, [r3]
 200 0042 03F40033 		and	r3, r3, #131072
 201              		.loc 1 119 9
 202 0046 002B     		cmp	r3, #0
 203 0048 5DD0     		beq	.L65
 204              		.loc 1 119 78 discriminator 1
 205 004a 7B68     		ldr	r3, [r7, #4]
 206 004c 5B68     		ldr	r3, [r3, #4]
 207              		.loc 1 119 57 discriminator 1
 208 004e 002B     		cmp	r3, #0
 209 0050 59D1     		bne	.L65
 120:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 121:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 210              		.loc 1 121 16
 211 0052 0123     		movs	r3, #1
 212 0054 2AE2     		b	.L16
 213              	.L14:
 122:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 123:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 124:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 125:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 126:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 127:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 214              		.loc 1 127 7
 215 0056 7B68     		ldr	r3, [r7, #4]
 216 0058 5B68     		ldr	r3, [r3, #4]
 217 005a B3F5803F 		cmp	r3, #65536
 218 005e 06D1     		bne	.L17
 219              		.loc 1 127 7 is_stmt 0 discriminator 1
 220 0060 814B     		ldr	r3, .L66
 221 0062 1B68     		ldr	r3, [r3]
 222 0064 804A     		ldr	r2, .L66
 223 0066 43F48033 		orr	r3, r3, #65536
 224 006a 1360     		str	r3, [r2]
 225 006c 1DE0     		b	.L18
 226              	.L17:
 227              		.loc 1 127 7 discriminator 2
 228 006e 7B68     		ldr	r3, [r7, #4]
 229 0070 5B68     		ldr	r3, [r3, #4]
 230 0072 B3F5A02F 		cmp	r3, #327680
 231 0076 0CD1     		bne	.L19
 232              		.loc 1 127 7 discriminator 3
 233 0078 7B4B     		ldr	r3, .L66
 234 007a 1B68     		ldr	r3, [r3]
 235 007c 7A4A     		ldr	r2, .L66
 236 007e 43F48023 		orr	r3, r3, #262144
 237 0082 1360     		str	r3, [r2]
 238 0084 784B     		ldr	r3, .L66
 239 0086 1B68     		ldr	r3, [r3]
 240 0088 774A     		ldr	r2, .L66
 241 008a 43F48033 		orr	r3, r3, #65536
 242 008e 1360     		str	r3, [r2]
 243 0090 0BE0     		b	.L18
 244              	.L19:
 245              		.loc 1 127 7 discriminator 4
 246 0092 754B     		ldr	r3, .L66
 247 0094 1B68     		ldr	r3, [r3]
 248 0096 744A     		ldr	r2, .L66
 249 0098 23F48033 		bic	r3, r3, #65536
 250 009c 1360     		str	r3, [r2]
 251 009e 724B     		ldr	r3, .L66
 252 00a0 1B68     		ldr	r3, [r3]
 253 00a2 714A     		ldr	r2, .L66
 254 00a4 23F48023 		bic	r3, r3, #262144
 255 00a8 1360     		str	r3, [r2]
 256              	.L18:
 128:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 129:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSE State */
 130:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 257              		.loc 1 130 28 is_stmt 1
 258 00aa 7B68     		ldr	r3, [r7, #4]
 259 00ac 5B68     		ldr	r3, [r3, #4]
 260              		.loc 1 130 9
 261 00ae 002B     		cmp	r3, #0
 262 00b0 14D0     		beq	.L20
 131:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 132:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 133:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 263              		.loc 1 133 21
 264 00b2 FFF7FEFF 		bl	HAL_GetTick
 265 00b6 7863     		str	r0, [r7, #52]
 134:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 135:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSE is ready */
 136:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 266              		.loc 1 136 14
 267 00b8 09E0     		b	.L21
 268              	.L22:
 137:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 138:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 269              		.loc 1 138 15
 270 00ba FFF7FEFF 		bl	HAL_GetTick
 271 00be 0246     		mov	r2, r0
 272              		.loc 1 138 29
 273 00c0 7B6B     		ldr	r3, [r7, #52]
 274 00c2 D31A     		subs	r3, r2, r3
 275              		.loc 1 138 13
 276 00c4 694A     		ldr	r2, .L66+4
 277 00c6 9342     		cmp	r3, r2
 278 00c8 01D9     		bls	.L21
 139:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 140:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 279              		.loc 1 140 20
 280 00ca 0323     		movs	r3, #3
 281 00cc EEE1     		b	.L16
 282              	.L21:
 136:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 283              		.loc 1 136 15
 284 00ce 664B     		ldr	r3, .L66
 285 00d0 1B68     		ldr	r3, [r3]
 286 00d2 03F40033 		and	r3, r3, #131072
 136:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 287              		.loc 1 136 14
 288 00d6 002B     		cmp	r3, #0
 289 00d8 EFD0     		beq	.L22
 290 00da 15E0     		b	.L12
 291              	.L20:
 141:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 142:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 143:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 144:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 145:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 146:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 147:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 292              		.loc 1 147 21
 293 00dc FFF7FEFF 		bl	HAL_GetTick
 294 00e0 7863     		str	r0, [r7, #52]
 148:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 149:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSE is bypassed or disabled */
 150:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 295              		.loc 1 150 14
 296 00e2 09E0     		b	.L23
 297              	.L24:
 151:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 152:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 298              		.loc 1 152 15
 299 00e4 FFF7FEFF 		bl	HAL_GetTick
 300 00e8 0246     		mov	r2, r0
 301              		.loc 1 152 29
 302 00ea 7B6B     		ldr	r3, [r7, #52]
 303 00ec D31A     		subs	r3, r2, r3
 304              		.loc 1 152 13
 305 00ee 5F4A     		ldr	r2, .L66+4
 306 00f0 9342     		cmp	r3, r2
 307 00f2 01D9     		bls	.L23
 153:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 154:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 308              		.loc 1 154 20
 309 00f4 0323     		movs	r3, #3
 310 00f6 D9E1     		b	.L16
 311              	.L23:
 150:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 312              		.loc 1 150 15
 313 00f8 5B4B     		ldr	r3, .L66
 314 00fa 1B68     		ldr	r3, [r3]
 315 00fc 03F40033 		and	r3, r3, #131072
 150:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 316              		.loc 1 150 14
 317 0100 002B     		cmp	r3, #0
 318 0102 EFD1     		bne	.L24
 319 0104 00E0     		b	.L12
 320              	.L65:
 119:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 321              		.loc 1 119 9
 322 0106 00BF     		nop
 323              	.L12:
 155:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 156:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 157:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 158:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 159:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 160:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/
 161:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 324              		.loc 1 161 25
 325 0108 7B68     		ldr	r3, [r7, #4]
 326 010a 1B68     		ldr	r3, [r3]
 327              		.loc 1 161 43
 328 010c 03F00203 		and	r3, r3, #2
 329              		.loc 1 161 5
 330 0110 002B     		cmp	r3, #0
 331 0112 77D0     		beq	.L25
 162:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 163:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 164:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 165:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 166:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 167:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 168:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 332              		.loc 1 168 9
 333 0114 544B     		ldr	r3, .L66
 334 0116 9B68     		ldr	r3, [r3, #8]
 335 0118 03F00C03 		and	r3, r3, #12
 336              		.loc 1 168 7
 337 011c 002B     		cmp	r3, #0
 338 011e 0BD0     		beq	.L26
 169:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 339              		.loc 1 169 9 discriminator 1
 340 0120 514B     		ldr	r3, .L66
 341 0122 9B68     		ldr	r3, [r3, #8]
 342 0124 03F00C03 		and	r3, r3, #12
 168:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 343              		.loc 1 168 60 discriminator 1
 344 0128 082B     		cmp	r3, #8
 345 012a 26D1     		bne	.L27
 346              		.loc 1 169 68
 347 012c 4E4B     		ldr	r3, .L66
 348 012e 5B68     		ldr	r3, [r3, #4]
 349              		.loc 1 169 78
 350 0130 03F48003 		and	r3, r3, #4194304
 351              		.loc 1 169 60
 352 0134 002B     		cmp	r3, #0
 353 0136 20D1     		bne	.L27
 354              	.L26:
 170:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 171:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 172:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 355              		.loc 1 172 11
 356 0138 4B4B     		ldr	r3, .L66
 357 013a 1B68     		ldr	r3, [r3]
 358 013c 03F00203 		and	r3, r3, #2
 359              		.loc 1 172 9
 360 0140 002B     		cmp	r3, #0
 361 0142 05D0     		beq	.L28
 362              		.loc 1 172 78 discriminator 1
 363 0144 7B68     		ldr	r3, [r7, #4]
 364 0146 DB68     		ldr	r3, [r3, #12]
 365              		.loc 1 172 57 discriminator 1
 366 0148 012B     		cmp	r3, #1
 367 014a 01D0     		beq	.L28
 173:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 174:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 368              		.loc 1 174 16
 369 014c 0123     		movs	r3, #1
 370 014e ADE1     		b	.L16
 371              	.L28:
 175:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 176:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 177:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 178:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 179:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 180:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 372              		.loc 1 180 9
 373 0150 454B     		ldr	r3, .L66
 374 0152 1B68     		ldr	r3, [r3]
 375 0154 23F0F802 		bic	r2, r3, #248
 376 0158 7B68     		ldr	r3, [r7, #4]
 377 015a 1969     		ldr	r1, [r3, #16]
 378 015c F823     		movs	r3, #248
 379 015e 3B63     		str	r3, [r7, #48]
 380              	.LBB49:
 381              	.LBB50:
 382              		.file 2 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h"
   1:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**************************************************************************//**
   2:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @version  V4.30
   5:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  ******************************************************************************/
   7:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
   9:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    All rights reserved.
  10:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      specific prior written permission.
  20:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    *
  21:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  34:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  35:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  38:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
  45:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  46:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  47:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   @{
  51:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  52:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  53:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  54:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  58:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  60:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  62:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  63:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  64:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  65:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  69:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  71:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  73:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  74:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  75:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  76:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Control Register value
  79:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  80:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  82:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
  83:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  84:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
  86:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  87:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  88:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  89:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  90:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  94:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  96:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  98:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  99:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 100:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 101:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 105:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 107:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 108:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 109:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 111:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 112:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 113:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 114:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 115:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               APSR Register value
 118:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 119:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 121:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 122:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 123:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 125:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 126:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 127:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 128:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 129:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 132:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 134:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 136:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 137:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 138:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 140:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 141:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 142:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 143:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 144:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               PSP Register value
 147:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 148:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 150:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 151:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 152:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 154:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 155:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 156:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 157:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 158:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 162:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 164:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 166:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 167:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 168:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 169:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               MSP Register value
 172:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 173:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 175:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 176:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 177:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 179:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 180:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 181:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 182:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 183:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 186:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 188:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 190:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 192:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 193:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 194:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 195:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 199:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 201:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 202:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 203:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 205:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 206:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 207:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 208:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 209:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 213:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 215:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 217:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 218:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 219:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 221:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 222:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 226:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 228:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 230:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 231:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 232:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 233:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 237:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 239:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 241:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 242:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 243:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 244:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 248:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 250:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 251:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 252:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 254:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 255:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 256:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 257:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 258:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 262:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 264:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 266:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 267:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 268:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 269:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 274:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 276:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 278:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 279:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 280:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 281:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 285:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 287:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 288:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 289:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 291:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 292:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 293:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 294:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 295:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 299:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 301:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 303:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 304:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 306:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 307:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 309:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 310:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 314:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 316:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 318:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 319:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 324:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 325:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    return(0);
 326:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 327:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 328:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 329:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 330:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 331:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 335:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 337:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 343:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 344:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 345:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 347:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 348:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 349:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 351:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 352:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   @{
 356:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** */
 357:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 358:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 365:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 368:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 369:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 370:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   No Operation
 371:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 373:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 375:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 377:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 378:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 379:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 380:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 383:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 385:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 387:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 388:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 389:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 390:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 394:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 396:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 398:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 399:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 400:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 401:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Send Event
 402:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 404:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 406:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 408:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 409:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 410:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 411:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 416:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 418:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 420:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 421:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 422:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 423:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 427:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 429:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 431:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 432:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 433:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 434:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 438:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 440:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 442:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 443:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 444:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 445:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 449:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 450:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 452:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 455:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 456:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 457:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 459:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 460:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 461:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 462:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 463:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 464:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 468:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 469:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 471:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 472:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 473:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 475:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 476:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 477:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 478:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 479:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 483:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 484:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 486:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 489:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   int32_t result;
 490:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 491:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 493:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 494:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 495:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 496:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 497:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 498:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Rotated value
 503:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 504:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 506:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 508:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 509:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 510:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 511:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Breakpoint
 512:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 517:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 519:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 520:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 521:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 525:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 526:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 528:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 529:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 530:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 383              		.loc 2 531 4
 384 0160 3B6B     		ldr	r3, [r7, #48]
 385              		.syntax unified
 386              	@ 531 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 387 0162 93FAA3F3 		rbit r3, r3
 388              	@ 0 "" 2
 389              		.thumb
 390              		.syntax unified
 391 0166 FB62     		str	r3, [r7, #44]
 532:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 533:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 535:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   {
 538:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     result <<= 1U;
 539:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     result |= value & 1U;
 540:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     s--;
 541:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   }
 542:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 544:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 392              		.loc 2 544 9
 393 0168 FB6A     		ldr	r3, [r7, #44]
 394              	.LBE50:
 395              	.LBE49:
 396              		.loc 1 180 9
 397 016a B3FA83F3 		clz	r3, r3
 398 016e 01FA03F3 		lsl	r3, r1, r3
 399 0172 3D49     		ldr	r1, .L66
 400 0174 1343     		orrs	r3, r3, r2
 401 0176 0B60     		str	r3, [r1]
 172:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 402              		.loc 1 172 9
 403 0178 44E0     		b	.L25
 404              	.L27:
 181:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 182:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 183:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 184:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 185:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSI State */
 186:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 405              		.loc 1 186 28
 406 017a 7B68     		ldr	r3, [r7, #4]
 407 017c DB68     		ldr	r3, [r3, #12]
 408              		.loc 1 186 9
 409 017e 002B     		cmp	r3, #0
 410 0180 2AD0     		beq	.L30
 187:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 188:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 189:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 411              		.loc 1 189 9
 412 0182 3B4B     		ldr	r3, .L66+8
 413 0184 0122     		movs	r2, #1
 414 0186 1A60     		str	r2, [r3]
 190:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 191:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 192:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 415              		.loc 1 192 21
 416 0188 FFF7FEFF 		bl	HAL_GetTick
 417 018c 7863     		str	r0, [r7, #52]
 193:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 194:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSI is ready */
 195:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 418              		.loc 1 195 14
 419 018e 08E0     		b	.L31
 420              	.L32:
 196:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 197:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 421              		.loc 1 197 15
 422 0190 FFF7FEFF 		bl	HAL_GetTick
 423 0194 0246     		mov	r2, r0
 424              		.loc 1 197 29
 425 0196 7B6B     		ldr	r3, [r7, #52]
 426 0198 D31A     		subs	r3, r2, r3
 427              		.loc 1 197 13
 428 019a 022B     		cmp	r3, #2
 429 019c 01D9     		bls	.L31
 198:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 199:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 430              		.loc 1 199 20
 431 019e 0323     		movs	r3, #3
 432 01a0 84E1     		b	.L16
 433              	.L31:
 195:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 434              		.loc 1 195 15
 435 01a2 314B     		ldr	r3, .L66
 436 01a4 1B68     		ldr	r3, [r3]
 437 01a6 03F00203 		and	r3, r3, #2
 195:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 438              		.loc 1 195 14
 439 01aa 002B     		cmp	r3, #0
 440 01ac F0D0     		beq	.L32
 200:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 201:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 202:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 203:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 204:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 441              		.loc 1 204 9
 442 01ae 2E4B     		ldr	r3, .L66
 443 01b0 1B68     		ldr	r3, [r3]
 444 01b2 23F0F802 		bic	r2, r3, #248
 445 01b6 7B68     		ldr	r3, [r7, #4]
 446 01b8 1969     		ldr	r1, [r3, #16]
 447 01ba F823     		movs	r3, #248
 448 01bc BB62     		str	r3, [r7, #40]
 449              	.LBB51:
 450              	.LBB52:
 531:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 451              		.loc 2 531 4
 452 01be BB6A     		ldr	r3, [r7, #40]
 453              		.syntax unified
 454              	@ 531 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 455 01c0 93FAA3F3 		rbit r3, r3
 456              	@ 0 "" 2
 457              		.thumb
 458              		.syntax unified
 459 01c4 7B62     		str	r3, [r7, #36]
 460              		.loc 2 544 9
 461 01c6 7B6A     		ldr	r3, [r7, #36]
 462              	.LBE52:
 463              	.LBE51:
 464              		.loc 1 204 9
 465 01c8 B3FA83F3 		clz	r3, r3
 466 01cc 01FA03F3 		lsl	r3, r1, r3
 467 01d0 2549     		ldr	r1, .L66
 468 01d2 1343     		orrs	r3, r3, r2
 469 01d4 0B60     		str	r3, [r1]
 470 01d6 15E0     		b	.L25
 471              	.L30:
 205:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 206:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 207:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 208:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 209:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 472              		.loc 1 209 9
 473 01d8 254B     		ldr	r3, .L66+8
 474 01da 0022     		movs	r2, #0
 475 01dc 1A60     		str	r2, [r3]
 210:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 211:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 212:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 476              		.loc 1 212 21
 477 01de FFF7FEFF 		bl	HAL_GetTick
 478 01e2 7863     		str	r0, [r7, #52]
 213:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 214:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSI is ready */
 215:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 479              		.loc 1 215 14
 480 01e4 08E0     		b	.L34
 481              	.L35:
 216:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 217:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 482              		.loc 1 217 15
 483 01e6 FFF7FEFF 		bl	HAL_GetTick
 484 01ea 0246     		mov	r2, r0
 485              		.loc 1 217 29
 486 01ec 7B6B     		ldr	r3, [r7, #52]
 487 01ee D31A     		subs	r3, r2, r3
 488              		.loc 1 217 13
 489 01f0 022B     		cmp	r3, #2
 490 01f2 01D9     		bls	.L34
 218:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 219:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 491              		.loc 1 219 20
 492 01f4 0323     		movs	r3, #3
 493 01f6 59E1     		b	.L16
 494              	.L34:
 215:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 495              		.loc 1 215 15
 496 01f8 1B4B     		ldr	r3, .L66
 497 01fa 1B68     		ldr	r3, [r3]
 498 01fc 03F00203 		and	r3, r3, #2
 215:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 499              		.loc 1 215 14
 500 0200 002B     		cmp	r3, #0
 501 0202 F0D1     		bne	.L35
 502              	.L25:
 220:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 221:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 222:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 223:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 224:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 225:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/
 226:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 503              		.loc 1 226 25
 504 0204 7B68     		ldr	r3, [r7, #4]
 505 0206 1B68     		ldr	r3, [r3]
 506              		.loc 1 226 43
 507 0208 03F00803 		and	r3, r3, #8
 508              		.loc 1 226 5
 509 020c 002B     		cmp	r3, #0
 510 020e 39D0     		beq	.L36
 227:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 228:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 229:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 230:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 231:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSI State */
 232:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 511              		.loc 1 232 26
 512 0210 7B68     		ldr	r3, [r7, #4]
 513 0212 5B69     		ldr	r3, [r3, #20]
 514              		.loc 1 232 7
 515 0214 002B     		cmp	r3, #0
 516 0216 16D0     		beq	.L37
 233:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 234:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 235:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 517              		.loc 1 235 7
 518 0218 164B     		ldr	r3, .L66+12
 519 021a 0122     		movs	r2, #1
 520 021c 1A60     		str	r2, [r3]
 236:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 237:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 238:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 521              		.loc 1 238 19
 522 021e FFF7FEFF 		bl	HAL_GetTick
 523 0222 7863     		str	r0, [r7, #52]
 239:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 240:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSI is ready */
 241:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 524              		.loc 1 241 12
 525 0224 08E0     		b	.L38
 526              	.L39:
 242:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 243:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 527              		.loc 1 243 13
 528 0226 FFF7FEFF 		bl	HAL_GetTick
 529 022a 0246     		mov	r2, r0
 530              		.loc 1 243 27
 531 022c 7B6B     		ldr	r3, [r7, #52]
 532 022e D31A     		subs	r3, r2, r3
 533              		.loc 1 243 11
 534 0230 022B     		cmp	r3, #2
 535 0232 01D9     		bls	.L38
 244:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 245:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 536              		.loc 1 245 18
 537 0234 0323     		movs	r3, #3
 538 0236 39E1     		b	.L16
 539              	.L38:
 241:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 540              		.loc 1 241 13
 541 0238 0B4B     		ldr	r3, .L66
 542 023a 5B6F     		ldr	r3, [r3, #116]
 543 023c 03F00203 		and	r3, r3, #2
 241:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 544              		.loc 1 241 12
 545 0240 002B     		cmp	r3, #0
 546 0242 F0D0     		beq	.L39
 547 0244 1EE0     		b	.L36
 548              	.L37:
 246:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 247:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 248:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 249:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 250:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 251:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 252:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 549              		.loc 1 252 7
 550 0246 0B4B     		ldr	r3, .L66+12
 551 0248 0022     		movs	r2, #0
 552 024a 1A60     		str	r2, [r3]
 253:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 254:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 255:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 553              		.loc 1 255 19
 554 024c FFF7FEFF 		bl	HAL_GetTick
 555 0250 7863     		str	r0, [r7, #52]
 256:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 257:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSI is ready */
 258:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 556              		.loc 1 258 12
 557 0252 11E0     		b	.L40
 558              	.L41:
 259:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 260:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 559              		.loc 1 260 13
 560 0254 FFF7FEFF 		bl	HAL_GetTick
 561 0258 0246     		mov	r2, r0
 562              		.loc 1 260 27
 563 025a 7B6B     		ldr	r3, [r7, #52]
 564 025c D31A     		subs	r3, r2, r3
 565              		.loc 1 260 11
 566 025e 022B     		cmp	r3, #2
 567 0260 0AD9     		bls	.L40
 261:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 262:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 568              		.loc 1 262 18
 569 0262 0323     		movs	r3, #3
 570 0264 22E1     		b	.L16
 571              	.L67:
 572 0266 00BF     		.align	2
 573              	.L66:
 574 0268 00380240 		.word	1073887232
 575 026c 00E1F505 		.word	100000000
 576 0270 00004742 		.word	1111949312
 577 0274 800E4742 		.word	1111953024
 578              	.L40:
 258:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 579              		.loc 1 258 13
 580 0278 8E4B     		ldr	r3, .L68
 581 027a 5B6F     		ldr	r3, [r3, #116]
 582 027c 03F00203 		and	r3, r3, #2
 258:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 583              		.loc 1 258 12
 584 0280 002B     		cmp	r3, #0
 585 0282 E7D1     		bne	.L41
 586              	.L36:
 263:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 264:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 265:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 266:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 267:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/
 268:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 587              		.loc 1 268 25
 588 0284 7B68     		ldr	r3, [r7, #4]
 589 0286 1B68     		ldr	r3, [r3]
 590              		.loc 1 268 43
 591 0288 03F00403 		and	r3, r3, #4
 592              		.loc 1 268 5
 593 028c 002B     		cmp	r3, #0
 594 028e 7DD0     		beq	.L42
 595              	.LBB53:
 269:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 270:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 271:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 272:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 273:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable Power Clock*/
 274:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 596              		.loc 1 274 5
 597 0290 0023     		movs	r3, #0
 598 0292 BB60     		str	r3, [r7, #8]
 599 0294 874B     		ldr	r3, .L68
 600 0296 1B6C     		ldr	r3, [r3, #64]
 601 0298 864A     		ldr	r2, .L68
 602 029a 43F08053 		orr	r3, r3, #268435456
 603 029e 1364     		str	r3, [r2, #64]
 604 02a0 844B     		ldr	r3, .L68
 605 02a2 1B6C     		ldr	r3, [r3, #64]
 606 02a4 03F08053 		and	r3, r3, #268435456
 607 02a8 BB60     		str	r3, [r7, #8]
 608 02aa BB68     		ldr	r3, [r7, #8]
 609              	.LBE53:
 275:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 276:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable write access to Backup domain */
 277:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     PWR->CR |= PWR_CR_DBP;
 610              		.loc 1 277 13
 611 02ac 824B     		ldr	r3, .L68+4
 612 02ae 1B68     		ldr	r3, [r3]
 613 02b0 814A     		ldr	r2, .L68+4
 614 02b2 43F48073 		orr	r3, r3, #256
 615 02b6 1360     		str	r3, [r2]
 278:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 279:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Wait for Backup domain Write protection enable */
 280:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 616              		.loc 1 280 17
 617 02b8 FFF7FEFF 		bl	HAL_GetTick
 618 02bc 7863     		str	r0, [r7, #52]
 281:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 282:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 619              		.loc 1 282 10
 620 02be 08E0     		b	.L43
 621              	.L44:
 283:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 284:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 622              		.loc 1 284 11
 623 02c0 FFF7FEFF 		bl	HAL_GetTick
 624 02c4 0246     		mov	r2, r0
 625              		.loc 1 284 25
 626 02c6 7B6B     		ldr	r3, [r7, #52]
 627 02c8 D31A     		subs	r3, r2, r3
 628              		.loc 1 284 9
 629 02ca 022B     		cmp	r3, #2
 630 02cc 01D9     		bls	.L43
 285:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 286:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_TIMEOUT;
 631              		.loc 1 286 16
 632 02ce 0323     		movs	r3, #3
 633 02d0 ECE0     		b	.L16
 634              	.L43:
 282:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 635              		.loc 1 282 15
 636 02d2 794B     		ldr	r3, .L68+4
 637 02d4 1B68     		ldr	r3, [r3]
 282:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 638              		.loc 1 282 20
 639 02d6 03F48073 		and	r3, r3, #256
 282:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 640              		.loc 1 282 10
 641 02da 002B     		cmp	r3, #0
 642 02dc F0D0     		beq	.L44
 287:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 288:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 289:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 290:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 291:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 643              		.loc 1 291 5
 644 02de 7B68     		ldr	r3, [r7, #4]
 645 02e0 9B68     		ldr	r3, [r3, #8]
 646 02e2 012B     		cmp	r3, #1
 647 02e4 06D1     		bne	.L45
 648              		.loc 1 291 5 is_stmt 0 discriminator 1
 649 02e6 734B     		ldr	r3, .L68
 650 02e8 1B6F     		ldr	r3, [r3, #112]
 651 02ea 724A     		ldr	r2, .L68
 652 02ec 43F00103 		orr	r3, r3, #1
 653 02f0 1367     		str	r3, [r2, #112]
 654 02f2 1CE0     		b	.L46
 655              	.L45:
 656              		.loc 1 291 5 discriminator 2
 657 02f4 7B68     		ldr	r3, [r7, #4]
 658 02f6 9B68     		ldr	r3, [r3, #8]
 659 02f8 052B     		cmp	r3, #5
 660 02fa 0CD1     		bne	.L47
 661              		.loc 1 291 5 discriminator 3
 662 02fc 6D4B     		ldr	r3, .L68
 663 02fe 1B6F     		ldr	r3, [r3, #112]
 664 0300 6C4A     		ldr	r2, .L68
 665 0302 43F00403 		orr	r3, r3, #4
 666 0306 1367     		str	r3, [r2, #112]
 667 0308 6A4B     		ldr	r3, .L68
 668 030a 1B6F     		ldr	r3, [r3, #112]
 669 030c 694A     		ldr	r2, .L68
 670 030e 43F00103 		orr	r3, r3, #1
 671 0312 1367     		str	r3, [r2, #112]
 672 0314 0BE0     		b	.L46
 673              	.L47:
 674              		.loc 1 291 5 discriminator 4
 675 0316 674B     		ldr	r3, .L68
 676 0318 1B6F     		ldr	r3, [r3, #112]
 677 031a 664A     		ldr	r2, .L68
 678 031c 23F00103 		bic	r3, r3, #1
 679 0320 1367     		str	r3, [r2, #112]
 680 0322 644B     		ldr	r3, .L68
 681 0324 1B6F     		ldr	r3, [r3, #112]
 682 0326 634A     		ldr	r2, .L68
 683 0328 23F00403 		bic	r3, r3, #4
 684 032c 1367     		str	r3, [r2, #112]
 685              	.L46:
 292:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 293:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 686              		.loc 1 293 26 is_stmt 1
 687 032e 7B68     		ldr	r3, [r7, #4]
 688 0330 9B68     		ldr	r3, [r3, #8]
 689              		.loc 1 293 7
 690 0332 002B     		cmp	r3, #0
 691 0334 15D0     		beq	.L48
 294:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 295:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 296:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 692              		.loc 1 296 19
 693 0336 FFF7FEFF 		bl	HAL_GetTick
 694 033a 7863     		str	r0, [r7, #52]
 297:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 298:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSE is ready */
 299:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 695              		.loc 1 299 12
 696 033c 0AE0     		b	.L49
 697              	.L50:
 300:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 301:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 698              		.loc 1 301 13
 699 033e FFF7FEFF 		bl	HAL_GetTick
 700 0342 0246     		mov	r2, r0
 701              		.loc 1 301 27
 702 0344 7B6B     		ldr	r3, [r7, #52]
 703 0346 D31A     		subs	r3, r2, r3
 704              		.loc 1 301 11
 705 0348 41F28832 		movw	r2, #5000
 706 034c 9342     		cmp	r3, r2
 707 034e 01D9     		bls	.L49
 302:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 303:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 708              		.loc 1 303 18
 709 0350 0323     		movs	r3, #3
 710 0352 ABE0     		b	.L16
 711              	.L49:
 299:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 712              		.loc 1 299 13
 713 0354 574B     		ldr	r3, .L68
 714 0356 1B6F     		ldr	r3, [r3, #112]
 715 0358 03F00203 		and	r3, r3, #2
 299:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 716              		.loc 1 299 12
 717 035c 002B     		cmp	r3, #0
 718 035e EED0     		beq	.L50
 719 0360 14E0     		b	.L42
 720              	.L48:
 304:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 305:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 306:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 307:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 308:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 309:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 310:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 721              		.loc 1 310 19
 722 0362 FFF7FEFF 		bl	HAL_GetTick
 723 0366 7863     		str	r0, [r7, #52]
 311:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 312:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSE is ready */
 313:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 724              		.loc 1 313 12
 725 0368 0AE0     		b	.L51
 726              	.L52:
 314:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 315:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 727              		.loc 1 315 13
 728 036a FFF7FEFF 		bl	HAL_GetTick
 729 036e 0246     		mov	r2, r0
 730              		.loc 1 315 27
 731 0370 7B6B     		ldr	r3, [r7, #52]
 732 0372 D31A     		subs	r3, r2, r3
 733              		.loc 1 315 11
 734 0374 41F28832 		movw	r2, #5000
 735 0378 9342     		cmp	r3, r2
 736 037a 01D9     		bls	.L51
 316:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 317:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 737              		.loc 1 317 18
 738 037c 0323     		movs	r3, #3
 739 037e 95E0     		b	.L16
 740              	.L51:
 313:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 741              		.loc 1 313 13
 742 0380 4C4B     		ldr	r3, .L68
 743 0382 1B6F     		ldr	r3, [r3, #112]
 744 0384 03F00203 		and	r3, r3, #2
 313:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 745              		.loc 1 313 12
 746 0388 002B     		cmp	r3, #0
 747 038a EED1     		bne	.L52
 748              	.L42:
 318:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 319:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 320:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 321:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 322:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 323:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 324:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 325:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 749              		.loc 1 325 30
 750 038c 7B68     		ldr	r3, [r7, #4]
 751 038e 9B69     		ldr	r3, [r3, #24]
 752              		.loc 1 325 6
 753 0390 002B     		cmp	r3, #0
 754 0392 00F08A80 		beq	.L53
 326:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 327:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 328:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 755              		.loc 1 328 8
 756 0396 474B     		ldr	r3, .L68
 757 0398 9B68     		ldr	r3, [r3, #8]
 758 039a 03F00C03 		and	r3, r3, #12
 759              		.loc 1 328 7
 760 039e 082B     		cmp	r3, #8
 761 03a0 00F08180 		beq	.L54
 329:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 330:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 762              		.loc 1 330 33
 763 03a4 7B68     		ldr	r3, [r7, #4]
 764 03a6 9B69     		ldr	r3, [r3, #24]
 765              		.loc 1 330 9
 766 03a8 022B     		cmp	r3, #2
 767 03aa 64D1     		bne	.L55
 331:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 332:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Check the parameters */
 333:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 334:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 335:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 336:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 337:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 338:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 339:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Disable the main PLL. */
 340:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 768              		.loc 1 340 9
 769 03ac 434B     		ldr	r3, .L68+8
 770 03ae 0022     		movs	r2, #0
 771 03b0 1A60     		str	r2, [r3]
 341:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 342:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 343:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 772              		.loc 1 343 21
 773 03b2 FFF7FEFF 		bl	HAL_GetTick
 774 03b6 7863     		str	r0, [r7, #52]
 344:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 345:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till PLL is ready */
 346:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 775              		.loc 1 346 14
 776 03b8 09E0     		b	.L56
 777              	.L57:
 347:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 348:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 778              		.loc 1 348 15
 779 03ba FFF7FEFF 		bl	HAL_GetTick
 780 03be 0246     		mov	r2, r0
 781              		.loc 1 348 29
 782 03c0 7B6B     		ldr	r3, [r7, #52]
 783 03c2 D31A     		subs	r3, r2, r3
 784              		.loc 1 348 13
 785 03c4 3E4A     		ldr	r2, .L68+12
 786 03c6 9342     		cmp	r3, r2
 787 03c8 01D9     		bls	.L56
 349:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 350:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 788              		.loc 1 350 20
 789 03ca 0323     		movs	r3, #3
 790 03cc 6EE0     		b	.L16
 791              	.L56:
 346:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 792              		.loc 1 346 15
 793 03ce 394B     		ldr	r3, .L68
 794 03d0 1B68     		ldr	r3, [r3]
 795 03d2 03F00073 		and	r3, r3, #33554432
 346:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 796              		.loc 1 346 14
 797 03d6 002B     		cmp	r3, #0
 798 03d8 EFD1     		bne	.L57
 351:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 352:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 353:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 354:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 355:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 799              		.loc 1 355 9
 800 03da 7B68     		ldr	r3, [r7, #4]
 801 03dc DA69     		ldr	r2, [r3, #28]
 802 03de 7B68     		ldr	r3, [r7, #4]
 803 03e0 1B6A     		ldr	r3, [r3, #32]
 804 03e2 1A43     		orrs	r2, r2, r3
 805 03e4 7B68     		ldr	r3, [r7, #4]
 806 03e6 596A     		ldr	r1, [r3, #36]
 807 03e8 47F6C073 		movw	r3, #32704
 808 03ec 3B61     		str	r3, [r7, #16]
 809              	.LBB54:
 810              	.LBB55:
 531:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 811              		.loc 2 531 4
 812 03ee 3B69     		ldr	r3, [r7, #16]
 813              		.syntax unified
 814              	@ 531 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 815 03f0 93FAA3F3 		rbit r3, r3
 816              	@ 0 "" 2
 817              		.thumb
 818              		.syntax unified
 819 03f4 FB60     		str	r3, [r7, #12]
 820              		.loc 2 544 9
 821 03f6 FB68     		ldr	r3, [r7, #12]
 822              	.LBE55:
 823              	.LBE54:
 824              		.loc 1 355 9
 825 03f8 B3FA83F3 		clz	r3, r3
 826 03fc 01FA03F3 		lsl	r3, r1, r3
 827 0400 1A43     		orrs	r2, r2, r3
 828 0402 7B68     		ldr	r3, [r7, #4]
 829 0404 9B6A     		ldr	r3, [r3, #40]
 830 0406 5B08     		lsrs	r3, r3, #1
 831 0408 591E     		subs	r1, r3, #1
 832 040a 4FF44033 		mov	r3, #196608
 833 040e BB61     		str	r3, [r7, #24]
 834              	.LBB56:
 835              	.LBB57:
 531:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 836              		.loc 2 531 4
 837 0410 BB69     		ldr	r3, [r7, #24]
 838              		.syntax unified
 839              	@ 531 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 840 0412 93FAA3F3 		rbit r3, r3
 841              	@ 0 "" 2
 842              		.thumb
 843              		.syntax unified
 844 0416 7B61     		str	r3, [r7, #20]
 845              		.loc 2 544 9
 846 0418 7B69     		ldr	r3, [r7, #20]
 847              	.LBE57:
 848              	.LBE56:
 849              		.loc 1 355 9
 850 041a B3FA83F3 		clz	r3, r3
 851 041e 01FA03F3 		lsl	r3, r1, r3
 852 0422 1A43     		orrs	r2, r2, r3
 853 0424 7B68     		ldr	r3, [r7, #4]
 854 0426 D96A     		ldr	r1, [r3, #44]
 855 0428 4FF07063 		mov	r3, #251658240
 856 042c 3B62     		str	r3, [r7, #32]
 857              	.LBB58:
 858              	.LBB59:
 531:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 859              		.loc 2 531 4
 860 042e 3B6A     		ldr	r3, [r7, #32]
 861              		.syntax unified
 862              	@ 531 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 863 0430 93FAA3F3 		rbit r3, r3
 864              	@ 0 "" 2
 865              		.thumb
 866              		.syntax unified
 867 0434 FB61     		str	r3, [r7, #28]
 868              		.loc 2 544 9
 869 0436 FB69     		ldr	r3, [r7, #28]
 870              	.LBE59:
 871              	.LBE58:
 872              		.loc 1 355 9
 873 0438 B3FA83F3 		clz	r3, r3
 874 043c 01FA03F3 		lsl	r3, r1, r3
 875 0440 1C49     		ldr	r1, .L68
 876 0442 1343     		orrs	r3, r3, r2
 877 0444 4B60     		str	r3, [r1, #4]
 356:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 357:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  (RCC_OscInitStruct->PLL.PLLN << POSITION_VAL(RCC_PLLCFGR_PLLN))   
 358:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << POSITION_VAL(RCC_PL
 359:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << POSITION_VAL(RCC_PLLCFGR_PLLQ))));
 360:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Enable the main PLL. */
 361:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 878              		.loc 1 361 9
 879 0446 1D4B     		ldr	r3, .L68+8
 880 0448 0122     		movs	r2, #1
 881 044a 1A60     		str	r2, [r3]
 362:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 363:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 364:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 882              		.loc 1 364 21
 883 044c FFF7FEFF 		bl	HAL_GetTick
 884 0450 7863     		str	r0, [r7, #52]
 365:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 366:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till PLL is ready */
 367:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 885              		.loc 1 367 14
 886 0452 09E0     		b	.L61
 887              	.L62:
 368:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 369:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 888              		.loc 1 369 15
 889 0454 FFF7FEFF 		bl	HAL_GetTick
 890 0458 0246     		mov	r2, r0
 891              		.loc 1 369 29
 892 045a 7B6B     		ldr	r3, [r7, #52]
 893 045c D31A     		subs	r3, r2, r3
 894              		.loc 1 369 13
 895 045e 184A     		ldr	r2, .L68+12
 896 0460 9342     		cmp	r3, r2
 897 0462 01D9     		bls	.L61
 370:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 371:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 898              		.loc 1 371 20
 899 0464 0323     		movs	r3, #3
 900 0466 21E0     		b	.L16
 901              	.L61:
 367:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 902              		.loc 1 367 15
 903 0468 124B     		ldr	r3, .L68
 904 046a 1B68     		ldr	r3, [r3]
 905 046c 03F00073 		and	r3, r3, #33554432
 367:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 906              		.loc 1 367 14
 907 0470 002B     		cmp	r3, #0
 908 0472 EFD0     		beq	.L62
 909 0474 19E0     		b	.L53
 910              	.L55:
 372:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 373:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 374:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 375:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 376:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 377:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Disable the main PLL. */
 378:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 911              		.loc 1 378 9
 912 0476 114B     		ldr	r3, .L68+8
 913 0478 0022     		movs	r2, #0
 914 047a 1A60     		str	r2, [r3]
 379:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 380:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 381:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 915              		.loc 1 381 21
 916 047c FFF7FEFF 		bl	HAL_GetTick
 917 0480 7863     		str	r0, [r7, #52]
 382:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 383:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till PLL is ready */
 384:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 918              		.loc 1 384 14
 919 0482 09E0     		b	.L63
 920              	.L64:
 385:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 386:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 921              		.loc 1 386 15
 922 0484 FFF7FEFF 		bl	HAL_GetTick
 923 0488 0246     		mov	r2, r0
 924              		.loc 1 386 29
 925 048a 7B6B     		ldr	r3, [r7, #52]
 926 048c D31A     		subs	r3, r2, r3
 927              		.loc 1 386 13
 928 048e 0C4A     		ldr	r2, .L68+12
 929 0490 9342     		cmp	r3, r2
 930 0492 01D9     		bls	.L63
 387:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 388:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 931              		.loc 1 388 20
 932 0494 0323     		movs	r3, #3
 933 0496 09E0     		b	.L16
 934              	.L63:
 384:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 935              		.loc 1 384 15
 936 0498 064B     		ldr	r3, .L68
 937 049a 1B68     		ldr	r3, [r3]
 938 049c 03F00073 		and	r3, r3, #33554432
 384:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 939              		.loc 1 384 14
 940 04a0 002B     		cmp	r3, #0
 941 04a2 EFD1     		bne	.L64
 942 04a4 01E0     		b	.L53
 943              	.L54:
 389:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 390:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 391:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 392:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 393:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 394:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 395:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_ERROR;
 944              		.loc 1 395 14
 945 04a6 0123     		movs	r3, #1
 946 04a8 00E0     		b	.L16
 947              	.L53:
 396:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 397:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 398:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 948              		.loc 1 398 10
 949 04aa 0023     		movs	r3, #0
 950              	.L16:
 399:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 951              		.loc 1 399 1
 952 04ac 1846     		mov	r0, r3
 953 04ae 3837     		adds	r7, r7, #56
 954              	.LCFI13:
 955              		.cfi_def_cfa_offset 8
 956 04b0 BD46     		mov	sp, r7
 957              	.LCFI14:
 958              		.cfi_def_cfa_register 13
 959              		@ sp needed
 960 04b2 80BD     		pop	{r7, pc}
 961              	.L69:
 962              		.align	2
 963              	.L68:
 964 04b4 00380240 		.word	1073887232
 965 04b8 00700040 		.word	1073770496
 966 04bc 60004742 		.word	1111949408
 967 04c0 80841E00 		.word	2000000
 968              		.cfi_endproc
 969              	.LFE128:
 971              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 972              		.align	1
 973              		.global	HAL_RCC_ClockConfig
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 977              		.fpu softvfp
 979              	HAL_RCC_ClockConfig:
 980              	.LFB129:
 400:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 401:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 402:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 403:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 404:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 405:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 406:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 407:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 408:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 409:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 410:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 411:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 412:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 413:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 414:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 415:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 416:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 417:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 418:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 419:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         occur when the clock source will be ready.
 420:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 421:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 422:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 423:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 424:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 425:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 426:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 427:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 981              		.loc 1 427 1
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 16
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 0000 80B5     		push	{r7, lr}
 986              	.LCFI15:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 84B0     		sub	sp, sp, #16
 991              	.LCFI16:
 992              		.cfi_def_cfa_offset 24
 993 0004 00AF     		add	r7, sp, #0
 994              	.LCFI17:
 995              		.cfi_def_cfa_register 7
 996 0006 7860     		str	r0, [r7, #4]
 997 0008 3960     		str	r1, [r7]
 428:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 998              		.loc 1 428 12
 999 000a 0023     		movs	r3, #0
 1000 000c FB60     		str	r3, [r7, #12]
 429:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 430:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 431:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 432:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 433:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 434:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 435:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     must be correctly programmed according to the frequency of the CPU clock
 436:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     (HCLK) and the supply voltage of the device. */
 437:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 438:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 439:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1001              		.loc 1 439 23
 1002 000e 744B     		ldr	r3, .L94
 1003 0010 1B68     		ldr	r3, [r3]
 1004              		.loc 1 439 29
 1005 0012 03F00F03 		and	r3, r3, #15
 1006              		.loc 1 439 5
 1007 0016 3A68     		ldr	r2, [r7]
 1008 0018 9A42     		cmp	r2, r3
 1009 001a 0CD9     		bls	.L71
 440:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 441:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 442:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1010              		.loc 1 442 5
 1011 001c 704B     		ldr	r3, .L94
 1012 001e 3A68     		ldr	r2, [r7]
 1013 0020 D2B2     		uxtb	r2, r2
 1014 0022 1A70     		strb	r2, [r3]
 443:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 444:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 445:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 446:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1015              		.loc 1 446 14
 1016 0024 6E4B     		ldr	r3, .L94
 1017 0026 1B68     		ldr	r3, [r3]
 1018              		.loc 1 446 20
 1019 0028 03F00F03 		and	r3, r3, #15
 1020              		.loc 1 446 7
 1021 002c 3A68     		ldr	r2, [r7]
 1022 002e 9A42     		cmp	r2, r3
 1023 0030 01D0     		beq	.L71
 447:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 448:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_ERROR;
 1024              		.loc 1 448 14
 1025 0032 0123     		movs	r3, #1
 1026 0034 CFE0     		b	.L72
 1027              	.L71:
 449:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 450:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 451:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 452:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 453:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1028              		.loc 1 453 25
 1029 0036 7B68     		ldr	r3, [r7, #4]
 1030 0038 1B68     		ldr	r3, [r3]
 1031              		.loc 1 453 38
 1032 003a 03F00203 		and	r3, r3, #2
 1033              		.loc 1 453 5
 1034 003e 002B     		cmp	r3, #0
 1035 0040 08D0     		beq	.L73
 454:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 455:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 456:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1036              		.loc 1 456 5
 1037 0042 684B     		ldr	r3, .L94+4
 1038 0044 9B68     		ldr	r3, [r3, #8]
 1039 0046 23F0F002 		bic	r2, r3, #240
 1040 004a 7B68     		ldr	r3, [r7, #4]
 1041 004c 9B68     		ldr	r3, [r3, #8]
 1042 004e 6549     		ldr	r1, .L94+4
 1043 0050 1343     		orrs	r3, r3, r2
 1044 0052 8B60     		str	r3, [r1, #8]
 1045              	.L73:
 457:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 458:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 459:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 460:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1046              		.loc 1 460 25
 1047 0054 7B68     		ldr	r3, [r7, #4]
 1048 0056 1B68     		ldr	r3, [r3]
 1049              		.loc 1 460 38
 1050 0058 03F00103 		and	r3, r3, #1
 1051              		.loc 1 460 5
 1052 005c 002B     		cmp	r3, #0
 1053 005e 00F08680 		beq	.L74
 461:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 462:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 463:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 464:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 465:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1054              		.loc 1 465 25
 1055 0062 7B68     		ldr	r3, [r7, #4]
 1056 0064 5B68     		ldr	r3, [r3, #4]
 1057              		.loc 1 465 7
 1058 0066 012B     		cmp	r3, #1
 1059 0068 07D1     		bne	.L75
 466:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 467:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSE ready flag */
 468:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1060              		.loc 1 468 10
 1061 006a 5E4B     		ldr	r3, .L94+4
 1062 006c 1B68     		ldr	r3, [r3]
 1063 006e 03F40033 		and	r3, r3, #131072
 1064              		.loc 1 468 9
 1065 0072 002B     		cmp	r3, #0
 1066 0074 19D1     		bne	.L76
 469:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 470:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 1067              		.loc 1 470 16
 1068 0076 0123     		movs	r3, #1
 1069 0078 ADE0     		b	.L72
 1070              	.L75:
 471:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 472:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 473:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 474:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 1071              		.loc 1 474 31
 1072 007a 7B68     		ldr	r3, [r7, #4]
 1073 007c 5B68     		ldr	r3, [r3, #4]
 1074              		.loc 1 474 12
 1075 007e 022B     		cmp	r3, #2
 1076 0080 03D0     		beq	.L77
 475:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1077              		.loc 1 475 31 discriminator 1
 1078 0082 7B68     		ldr	r3, [r7, #4]
 1079 0084 5B68     		ldr	r3, [r3, #4]
 474:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1080              		.loc 1 474 76 discriminator 1
 1081 0086 032B     		cmp	r3, #3
 1082 0088 07D1     		bne	.L78
 1083              	.L77:
 476:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 477:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the PLL ready flag */
 478:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1084              		.loc 1 478 10
 1085 008a 564B     		ldr	r3, .L94+4
 1086 008c 1B68     		ldr	r3, [r3]
 1087 008e 03F00073 		and	r3, r3, #33554432
 1088              		.loc 1 478 9
 1089 0092 002B     		cmp	r3, #0
 1090 0094 09D1     		bne	.L76
 479:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 480:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 1091              		.loc 1 480 16
 1092 0096 0123     		movs	r3, #1
 1093 0098 9DE0     		b	.L72
 1094              	.L78:
 481:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 482:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 483:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 484:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 485:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 486:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSI ready flag */
 487:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1095              		.loc 1 487 10
 1096 009a 524B     		ldr	r3, .L94+4
 1097 009c 1B68     		ldr	r3, [r3]
 1098 009e 03F00203 		and	r3, r3, #2
 1099              		.loc 1 487 9
 1100 00a2 002B     		cmp	r3, #0
 1101 00a4 01D1     		bne	.L76
 488:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 489:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 1102              		.loc 1 489 16
 1103 00a6 0123     		movs	r3, #1
 1104 00a8 95E0     		b	.L72
 1105              	.L76:
 490:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 491:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 492:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 493:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1106              		.loc 1 493 5
 1107 00aa 4E4B     		ldr	r3, .L94+4
 1108 00ac 9B68     		ldr	r3, [r3, #8]
 1109 00ae 23F00302 		bic	r2, r3, #3
 1110 00b2 7B68     		ldr	r3, [r7, #4]
 1111 00b4 5B68     		ldr	r3, [r3, #4]
 1112 00b6 4B49     		ldr	r1, .L94+4
 1113 00b8 1343     		orrs	r3, r3, r2
 1114 00ba 8B60     		str	r3, [r1, #8]
 494:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get Start Tick*/
 495:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 1115              		.loc 1 495 17
 1116 00bc FFF7FEFF 		bl	HAL_GetTick
 1117 00c0 F860     		str	r0, [r7, #12]
 496:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 497:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1118              		.loc 1 497 25
 1119 00c2 7B68     		ldr	r3, [r7, #4]
 1120 00c4 5B68     		ldr	r3, [r3, #4]
 1121              		.loc 1 497 7
 1122 00c6 012B     		cmp	r3, #1
 1123 00c8 12D1     		bne	.L80
 498:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 499:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1124              		.loc 1 499 13
 1125 00ca 0AE0     		b	.L81
 1126              	.L82:
 500:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 501:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1127              		.loc 1 501 13
 1128 00cc FFF7FEFF 		bl	HAL_GetTick
 1129 00d0 0246     		mov	r2, r0
 1130              		.loc 1 501 27
 1131 00d2 FB68     		ldr	r3, [r7, #12]
 1132 00d4 D31A     		subs	r3, r2, r3
 1133              		.loc 1 501 11
 1134 00d6 41F28832 		movw	r2, #5000
 1135 00da 9342     		cmp	r3, r2
 1136 00dc 01D9     		bls	.L81
 502:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 503:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 1137              		.loc 1 503 18
 1138 00de 0323     		movs	r3, #3
 1139 00e0 79E0     		b	.L72
 1140              	.L81:
 499:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1141              		.loc 1 499 14
 1142 00e2 404B     		ldr	r3, .L94+4
 1143 00e4 9B68     		ldr	r3, [r3, #8]
 1144 00e6 03F00C03 		and	r3, r3, #12
 499:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1145              		.loc 1 499 13
 1146 00ea 042B     		cmp	r3, #4
 1147 00ec EED1     		bne	.L82
 1148 00ee 3EE0     		b	.L74
 1149              	.L80:
 504:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 505:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 506:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 507:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1150              		.loc 1 507 30
 1151 00f0 7B68     		ldr	r3, [r7, #4]
 1152 00f2 5B68     		ldr	r3, [r3, #4]
 1153              		.loc 1 507 12
 1154 00f4 022B     		cmp	r3, #2
 1155 00f6 12D1     		bne	.L83
 508:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 509:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1156              		.loc 1 509 13
 1157 00f8 0AE0     		b	.L84
 1158              	.L85:
 510:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 511:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1159              		.loc 1 511 13
 1160 00fa FFF7FEFF 		bl	HAL_GetTick
 1161 00fe 0246     		mov	r2, r0
 1162              		.loc 1 511 27
 1163 0100 FB68     		ldr	r3, [r7, #12]
 1164 0102 D31A     		subs	r3, r2, r3
 1165              		.loc 1 511 11
 1166 0104 41F28832 		movw	r2, #5000
 1167 0108 9342     		cmp	r3, r2
 1168 010a 01D9     		bls	.L84
 512:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 513:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 1169              		.loc 1 513 18
 1170 010c 0323     		movs	r3, #3
 1171 010e 62E0     		b	.L72
 1172              	.L84:
 509:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1173              		.loc 1 509 14
 1174 0110 344B     		ldr	r3, .L94+4
 1175 0112 9B68     		ldr	r3, [r3, #8]
 1176 0114 03F00C03 		and	r3, r3, #12
 509:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1177              		.loc 1 509 13
 1178 0118 082B     		cmp	r3, #8
 1179 011a EED1     		bne	.L85
 1180 011c 27E0     		b	.L74
 1181              	.L83:
 514:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 515:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 516:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 517:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK)
 1182              		.loc 1 517 30
 1183 011e 7B68     		ldr	r3, [r7, #4]
 1184 0120 5B68     		ldr	r3, [r3, #4]
 1185              		.loc 1 517 12
 1186 0122 032B     		cmp	r3, #3
 1187 0124 1DD1     		bne	.L89
 518:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 519:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLRCLK)
 1188              		.loc 1 519 13
 1189 0126 0AE0     		b	.L87
 1190              	.L88:
 520:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 521:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1191              		.loc 1 521 13
 1192 0128 FFF7FEFF 		bl	HAL_GetTick
 1193 012c 0246     		mov	r2, r0
 1194              		.loc 1 521 27
 1195 012e FB68     		ldr	r3, [r7, #12]
 1196 0130 D31A     		subs	r3, r2, r3
 1197              		.loc 1 521 11
 1198 0132 41F28832 		movw	r2, #5000
 1199 0136 9342     		cmp	r3, r2
 1200 0138 01D9     		bls	.L87
 522:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 523:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 1201              		.loc 1 523 18
 1202 013a 0323     		movs	r3, #3
 1203 013c 4BE0     		b	.L72
 1204              	.L87:
 519:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1205              		.loc 1 519 14
 1206 013e 294B     		ldr	r3, .L94+4
 1207 0140 9B68     		ldr	r3, [r3, #8]
 1208 0142 03F00C03 		and	r3, r3, #12
 519:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1209              		.loc 1 519 13
 1210 0146 0C2B     		cmp	r3, #12
 1211 0148 EED1     		bne	.L88
 1212 014a 10E0     		b	.L74
 1213              	.L90:
 524:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 525:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 526:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 527:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 528:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 529:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 530:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 531:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1214              		.loc 1 531 13
 1215 014c FFF7FEFF 		bl	HAL_GetTick
 1216 0150 0246     		mov	r2, r0
 1217              		.loc 1 531 27
 1218 0152 FB68     		ldr	r3, [r7, #12]
 1219 0154 D31A     		subs	r3, r2, r3
 1220              		.loc 1 531 11
 1221 0156 41F28832 		movw	r2, #5000
 1222 015a 9342     		cmp	r3, r2
 1223 015c 01D9     		bls	.L89
 532:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 533:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 1224              		.loc 1 533 18
 1225 015e 0323     		movs	r3, #3
 1226 0160 39E0     		b	.L72
 1227              	.L89:
 529:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1228              		.loc 1 529 13
 1229 0162 204B     		ldr	r3, .L94+4
 1230 0164 9B68     		ldr	r3, [r3, #8]
 1231 0166 03F00C03 		and	r3, r3, #12
 529:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1232              		.loc 1 529 12
 1233 016a 002B     		cmp	r3, #0
 1234 016c EED1     		bne	.L90
 1235              	.L74:
 534:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 535:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 536:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 537:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 538:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 539:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 540:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1236              		.loc 1 540 23
 1237 016e 1C4B     		ldr	r3, .L94
 1238 0170 1B68     		ldr	r3, [r3]
 1239              		.loc 1 540 29
 1240 0172 03F00F03 		and	r3, r3, #15
 1241              		.loc 1 540 5
 1242 0176 3A68     		ldr	r2, [r7]
 1243 0178 9A42     		cmp	r2, r3
 1244 017a 0CD2     		bcs	.L91
 541:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 542:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 543:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1245              		.loc 1 543 5
 1246 017c 184B     		ldr	r3, .L94
 1247 017e 3A68     		ldr	r2, [r7]
 1248 0180 D2B2     		uxtb	r2, r2
 1249 0182 1A70     		strb	r2, [r3]
 544:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 545:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 546:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 547:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1250              		.loc 1 547 14
 1251 0184 164B     		ldr	r3, .L94
 1252 0186 1B68     		ldr	r3, [r3]
 1253              		.loc 1 547 20
 1254 0188 03F00F03 		and	r3, r3, #15
 1255              		.loc 1 547 7
 1256 018c 3A68     		ldr	r2, [r7]
 1257 018e 9A42     		cmp	r2, r3
 1258 0190 01D0     		beq	.L91
 548:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 549:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_ERROR;
 1259              		.loc 1 549 14
 1260 0192 0123     		movs	r3, #1
 1261 0194 1FE0     		b	.L72
 1262              	.L91:
 550:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 551:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****  }
 552:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 553:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 554:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1263              		.loc 1 554 25
 1264 0196 7B68     		ldr	r3, [r7, #4]
 1265 0198 1B68     		ldr	r3, [r3]
 1266              		.loc 1 554 38
 1267 019a 03F00403 		and	r3, r3, #4
 1268              		.loc 1 554 5
 1269 019e 002B     		cmp	r3, #0
 1270 01a0 08D0     		beq	.L92
 555:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 556:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 557:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1271              		.loc 1 557 5
 1272 01a2 104B     		ldr	r3, .L94+4
 1273 01a4 9B68     		ldr	r3, [r3, #8]
 1274 01a6 23F4E052 		bic	r2, r3, #7168
 1275 01aa 7B68     		ldr	r3, [r7, #4]
 1276 01ac DB68     		ldr	r3, [r3, #12]
 1277 01ae 0D49     		ldr	r1, .L94+4
 1278 01b0 1343     		orrs	r3, r3, r2
 1279 01b2 8B60     		str	r3, [r1, #8]
 1280              	.L92:
 558:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 559:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 560:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 561:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1281              		.loc 1 561 25
 1282 01b4 7B68     		ldr	r3, [r7, #4]
 1283 01b6 1B68     		ldr	r3, [r3]
 1284              		.loc 1 561 38
 1285 01b8 03F00803 		and	r3, r3, #8
 1286              		.loc 1 561 5
 1287 01bc 002B     		cmp	r3, #0
 1288 01be 09D0     		beq	.L93
 562:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 563:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 564:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1289              		.loc 1 564 5
 1290 01c0 084B     		ldr	r3, .L94+4
 1291 01c2 9B68     		ldr	r3, [r3, #8]
 1292 01c4 23F46042 		bic	r2, r3, #57344
 1293 01c8 7B68     		ldr	r3, [r7, #4]
 1294 01ca 1B69     		ldr	r3, [r3, #16]
 1295 01cc DB00     		lsls	r3, r3, #3
 1296 01ce 0549     		ldr	r1, .L94+4
 1297 01d0 1343     		orrs	r3, r3, r2
 1298 01d2 8B60     		str	r3, [r1, #8]
 1299              	.L93:
 565:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 566:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 567:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 568:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSI
 569:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 570:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 571:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 572:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 573:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 1300              		.loc 1 573 10
 1301 01d4 0023     		movs	r3, #0
 1302              	.L72:
 574:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 1303              		.loc 1 574 1
 1304 01d6 1846     		mov	r0, r3
 1305 01d8 1037     		adds	r7, r7, #16
 1306              	.LCFI18:
 1307              		.cfi_def_cfa_offset 8
 1308 01da BD46     		mov	sp, r7
 1309              	.LCFI19:
 1310              		.cfi_def_cfa_register 13
 1311              		@ sp needed
 1312 01dc 80BD     		pop	{r7, pc}
 1313              	.L95:
 1314 01de 00BF     		.align	2
 1315              	.L94:
 1316 01e0 003C0240 		.word	1073888256
 1317 01e4 00380240 		.word	1073887232
 1318              		.cfi_endproc
 1319              	.LFE129:
 1321              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1322              		.align	1
 1323              		.global	HAL_RCC_GetPCLK1Freq
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1327              		.fpu softvfp
 1329              	HAL_RCC_GetPCLK1Freq:
 1330              	.LFB130:
 575:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 576:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 577:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Returns the PCLK1 frequency
 578:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 579:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 580:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval PCLK1 frequency
 581:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 582:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 583:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 1331              		.loc 1 583 1
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336 0000 80B4     		push	{r7}
 1337              	.LCFI20:
 1338              		.cfi_def_cfa_offset 4
 1339              		.cfi_offset 7, -4
 1340 0002 00AF     		add	r7, sp, #0
 1341              	.LCFI21:
 1342              		.cfi_def_cfa_register 7
 584:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 585:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC_
 586:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return 7.37E6;
 1343              		.loc 1 586 10
 1344 0004 024B     		ldr	r3, .L98
 587:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 1345              		.loc 1 587 1
 1346 0006 1846     		mov	r0, r3
 1347 0008 BD46     		mov	sp, r7
 1348              	.LCFI22:
 1349              		.cfi_def_cfa_register 13
 1350              		@ sp needed
 1351 000a 80BC     		pop	{r7}
 1352              	.LCFI23:
 1353              		.cfi_restore 7
 1354              		.cfi_def_cfa_offset 0
 1355 000c 7047     		bx	lr
 1356              	.L99:
 1357 000e 00BF     		.align	2
 1358              	.L98:
 1359 0010 10757000 		.word	7370000
 1360              		.cfi_endproc
 1361              	.LFE130:
 1363              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1364              		.align	1
 1365              		.global	HAL_RCC_GetPCLK2Freq
 1366              		.syntax unified
 1367              		.thumb
 1368              		.thumb_func
 1369              		.fpu softvfp
 1371              	HAL_RCC_GetPCLK2Freq:
 1372              	.LFB131:
 588:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 589:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 590:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
 591:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 592:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 593:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval PCLK2 frequency
 594:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 595:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 596:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 1373              		.loc 1 596 1
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 0
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377              		@ link register save eliminated.
 1378 0000 80B4     		push	{r7}
 1379              	.LCFI24:
 1380              		.cfi_def_cfa_offset 4
 1381              		.cfi_offset 7, -4
 1382 0002 00AF     		add	r7, sp, #0
 1383              	.LCFI25:
 1384              		.cfi_def_cfa_register 7
 597:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 598:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
 599:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return 7.37E6;
 1385              		.loc 1 599 10
 1386 0004 024B     		ldr	r3, .L102
 600:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 1387              		.loc 1 600 1
 1388 0006 1846     		mov	r0, r3
 1389 0008 BD46     		mov	sp, r7
 1390              	.LCFI26:
 1391              		.cfi_def_cfa_register 13
 1392              		@ sp needed
 1393 000a 80BC     		pop	{r7}
 1394              	.LCFI27:
 1395              		.cfi_restore 7
 1396              		.cfi_def_cfa_offset 0
 1397 000c 7047     		bx	lr
 1398              	.L103:
 1399 000e 00BF     		.align	2
 1400              	.L102:
 1401 0010 10757000 		.word	7370000
 1402              		.cfi_endproc
 1403              	.LFE131:
 1405              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 1406              		.align	1
 1407              		.global	HAL_GPIO_Init
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1411              		.fpu softvfp
 1413              	HAL_GPIO_Init:
 1414              	.LFB132:
 601:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 602:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 603:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 604:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_MODE             0x00000003U
 605:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define EXTI_MODE             0x10000000U
 606:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_MODE_IT          0x00010000U
 607:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_MODE_EVT         0x00020000U
 608:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define RISING_EDGE           0x00100000U
 609:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define FALLING_EDGE          0x00200000U
 610:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      0x00000010U
 611:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 612:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_NUMBER           16U
 613:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 614:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 615:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 616:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 617:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 618:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 619:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 620:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 621:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 622:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 623:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 1415              		.loc 1 623 1
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 32
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 1420 0000 80B4     		push	{r7}
 1421              	.LCFI28:
 1422              		.cfi_def_cfa_offset 4
 1423              		.cfi_offset 7, -4
 1424 0002 89B0     		sub	sp, sp, #36
 1425              	.LCFI29:
 1426              		.cfi_def_cfa_offset 40
 1427 0004 00AF     		add	r7, sp, #0
 1428              	.LCFI30:
 1429              		.cfi_def_cfa_register 7
 1430 0006 7860     		str	r0, [r7, #4]
 1431 0008 3960     		str	r1, [r7]
 624:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t position;
 625:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t ioposition = 0x00U;
 1432              		.loc 1 625 12
 1433 000a 0023     		movs	r3, #0
 1434 000c 7B61     		str	r3, [r7, #20]
 626:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1435              		.loc 1 626 12
 1436 000e 0023     		movs	r3, #0
 1437 0010 3B61     		str	r3, [r7, #16]
 627:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 1438              		.loc 1 627 12
 1439 0012 0023     		movs	r3, #0
 1440 0014 BB61     		str	r3, [r7, #24]
 628:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 629:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 630:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 631:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 632:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 633:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 634:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 635:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the port pins */
 636:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   for(position = 0U; position < GPIO_NUMBER; position++)
 1441              		.loc 1 636 16
 1442 0016 0023     		movs	r3, #0
 1443 0018 FB61     		str	r3, [r7, #28]
 1444              		.loc 1 636 3
 1445 001a 6BE1     		b	.L105
 1446              	.L131:
 637:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 638:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get the IO position */
 639:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ioposition = 0x01U << position;
 1447              		.loc 1 639 16
 1448 001c 0122     		movs	r2, #1
 1449 001e FB69     		ldr	r3, [r7, #28]
 1450 0020 02FA03F3 		lsl	r3, r2, r3
 1451 0024 7B61     		str	r3, [r7, #20]
 640:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get the current IO position */
 641:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 1452              		.loc 1 641 37
 1453 0026 3B68     		ldr	r3, [r7]
 1454 0028 1B68     		ldr	r3, [r3]
 1455              		.loc 1 641 15
 1456 002a 7A69     		ldr	r2, [r7, #20]
 1457 002c 1340     		ands	r3, r3, r2
 1458 002e 3B61     		str	r3, [r7, #16]
 642:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 643:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(iocurrent == ioposition)
 1459              		.loc 1 643 7
 1460 0030 3A69     		ldr	r2, [r7, #16]
 1461 0032 7B69     		ldr	r3, [r7, #20]
 1462 0034 9A42     		cmp	r2, r3
 1463 0036 40F05A81 		bne	.L106
 644:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 645:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 646:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 647:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1464              		.loc 1 647 20
 1465 003a 3B68     		ldr	r3, [r7]
 1466 003c 5B68     		ldr	r3, [r3, #4]
 1467              		.loc 1 647 9
 1468 003e 022B     		cmp	r3, #2
 1469 0040 03D0     		beq	.L107
 1470              		.loc 1 647 60 discriminator 1
 1471 0042 3B68     		ldr	r3, [r7]
 1472 0044 5B68     		ldr	r3, [r3, #4]
 1473              		.loc 1 647 47 discriminator 1
 1474 0046 122B     		cmp	r3, #18
 1475 0048 23D1     		bne	.L108
 1476              	.L107:
 648:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 649:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Check the Alternate function parameter */
 650:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 651:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */
 652:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3U];
 1477              		.loc 1 652 36
 1478 004a FB69     		ldr	r3, [r7, #28]
 1479 004c DA08     		lsrs	r2, r3, #3
 1480              		.loc 1 652 14
 1481 004e 7B68     		ldr	r3, [r7, #4]
 1482 0050 0832     		adds	r2, r2, #8
 1483 0052 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1484 0056 BB61     		str	r3, [r7, #24]
 653:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 1485              		.loc 1 653 28
 1486 0058 FB69     		ldr	r3, [r7, #28]
 1487 005a 03F00703 		and	r3, r3, #7
 1488              		.loc 1 653 57
 1489 005e 9B00     		lsls	r3, r3, #2
 1490              		.loc 1 653 24
 1491 0060 0F22     		movs	r2, #15
 1492 0062 02FA03F3 		lsl	r3, r2, r3
 1493              		.loc 1 653 17
 1494 0066 DB43     		mvns	r3, r3
 1495              		.loc 1 653 14
 1496 0068 BA69     		ldr	r2, [r7, #24]
 1497 006a 1340     		ands	r3, r3, r2
 1498 006c BB61     		str	r3, [r7, #24]
 654:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 1499              		.loc 1 654 38
 1500 006e 3B68     		ldr	r3, [r7]
 1501 0070 1A69     		ldr	r2, [r3, #16]
 1502              		.loc 1 654 75
 1503 0072 FB69     		ldr	r3, [r7, #28]
 1504 0074 03F00703 		and	r3, r3, #7
 1505              		.loc 1 654 84
 1506 0078 9B00     		lsls	r3, r3, #2
 1507              		.loc 1 654 51
 1508 007a 02FA03F3 		lsl	r3, r2, r3
 1509              		.loc 1 654 14
 1510 007e BA69     		ldr	r2, [r7, #24]
 1511 0080 1343     		orrs	r3, r3, r2
 1512 0082 BB61     		str	r3, [r7, #24]
 655:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1513              		.loc 1 655 29
 1514 0084 FB69     		ldr	r3, [r7, #28]
 1515 0086 DA08     		lsrs	r2, r3, #3
 1516              		.loc 1 655 36
 1517 0088 7B68     		ldr	r3, [r7, #4]
 1518 008a 0832     		adds	r2, r2, #8
 1519 008c B969     		ldr	r1, [r7, #24]
 1520 008e 43F82210 		str	r1, [r3, r2, lsl #2]
 1521              	.L108:
 656:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 657:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 658:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 659:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp = GPIOx->MODER;
 1522              		.loc 1 659 12
 1523 0092 7B68     		ldr	r3, [r7, #4]
 1524 0094 1B68     		ldr	r3, [r3]
 1525 0096 BB61     		str	r3, [r7, #24]
 660:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 1526              		.loc 1 660 48
 1527 0098 FB69     		ldr	r3, [r7, #28]
 1528 009a 5B00     		lsls	r3, r3, #1
 1529              		.loc 1 660 35
 1530 009c 0322     		movs	r2, #3
 1531 009e 02FA03F3 		lsl	r3, r2, r3
 1532              		.loc 1 660 15
 1533 00a2 DB43     		mvns	r3, r3
 1534              		.loc 1 660 12
 1535 00a4 BA69     		ldr	r2, [r7, #24]
 1536 00a6 1340     		ands	r3, r3, r2
 1537 00a8 BB61     		str	r3, [r7, #24]
 661:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1538              		.loc 1 661 26
 1539 00aa 3B68     		ldr	r3, [r7]
 1540 00ac 5B68     		ldr	r3, [r3, #4]
 1541              		.loc 1 661 33
 1542 00ae 03F00302 		and	r2, r3, #3
 1543              		.loc 1 661 59
 1544 00b2 FB69     		ldr	r3, [r7, #28]
 1545 00b4 5B00     		lsls	r3, r3, #1
 1546              		.loc 1 661 46
 1547 00b6 02FA03F3 		lsl	r3, r2, r3
 1548              		.loc 1 661 12
 1549 00ba BA69     		ldr	r2, [r7, #24]
 1550 00bc 1343     		orrs	r3, r3, r2
 1551 00be BB61     		str	r3, [r7, #24]
 662:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1552              		.loc 1 662 20
 1553 00c0 7B68     		ldr	r3, [r7, #4]
 1554 00c2 BA69     		ldr	r2, [r7, #24]
 1555 00c4 1A60     		str	r2, [r3]
 663:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 664:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 665:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 1556              		.loc 1 665 20
 1557 00c6 3B68     		ldr	r3, [r7]
 1558 00c8 5B68     		ldr	r3, [r3, #4]
 1559              		.loc 1 665 9
 1560 00ca 012B     		cmp	r3, #1
 1561 00cc 0BD0     		beq	.L109
 1562              		.loc 1 665 64 discriminator 1
 1563 00ce 3B68     		ldr	r3, [r7]
 1564 00d0 5B68     		ldr	r3, [r3, #4]
 1565              		.loc 1 665 51 discriminator 1
 1566 00d2 022B     		cmp	r3, #2
 1567 00d4 07D0     		beq	.L109
 666:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1568              		.loc 1 666 20 discriminator 2
 1569 00d6 3B68     		ldr	r3, [r7]
 1570 00d8 5B68     		ldr	r3, [r3, #4]
 665:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1571              		.loc 1 665 91 discriminator 2
 1572 00da 112B     		cmp	r3, #17
 1573 00dc 03D0     		beq	.L109
 1574              		.loc 1 666 64
 1575 00de 3B68     		ldr	r3, [r7]
 1576 00e0 5B68     		ldr	r3, [r3, #4]
 1577              		.loc 1 666 51
 1578 00e2 122B     		cmp	r3, #18
 1579 00e4 30D1     		bne	.L110
 1580              	.L109:
 667:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 668:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Check the Speed parameter */
 669:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 670:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the IO Speed */
 671:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR;
 1581              		.loc 1 671 14
 1582 00e6 7B68     		ldr	r3, [r7, #4]
 1583 00e8 9B68     		ldr	r3, [r3, #8]
 1584 00ea BB61     		str	r3, [r7, #24]
 672:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1585              		.loc 1 672 55
 1586 00ec FB69     		ldr	r3, [r7, #28]
 1587 00ee 5B00     		lsls	r3, r3, #1
 1588              		.loc 1 672 42
 1589 00f0 0322     		movs	r2, #3
 1590 00f2 02FA03F3 		lsl	r3, r2, r3
 1591              		.loc 1 672 17
 1592 00f6 DB43     		mvns	r3, r3
 1593              		.loc 1 672 14
 1594 00f8 BA69     		ldr	r2, [r7, #24]
 1595 00fa 1340     		ands	r3, r3, r2
 1596 00fc BB61     		str	r3, [r7, #24]
 673:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 1597              		.loc 1 673 27
 1598 00fe 3B68     		ldr	r3, [r7]
 1599 0100 DA68     		ldr	r2, [r3, #12]
 1600              		.loc 1 673 48
 1601 0102 FB69     		ldr	r3, [r7, #28]
 1602 0104 5B00     		lsls	r3, r3, #1
 1603              		.loc 1 673 35
 1604 0106 02FA03F3 		lsl	r3, r2, r3
 1605              		.loc 1 673 14
 1606 010a BA69     		ldr	r2, [r7, #24]
 1607 010c 1343     		orrs	r3, r3, r2
 1608 010e BB61     		str	r3, [r7, #24]
 674:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1609              		.loc 1 674 24
 1610 0110 7B68     		ldr	r3, [r7, #4]
 1611 0112 BA69     		ldr	r2, [r7, #24]
 1612 0114 9A60     		str	r2, [r3, #8]
 675:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 676:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the IO Output Type */
 677:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 1613              		.loc 1 677 14
 1614 0116 7B68     		ldr	r3, [r7, #4]
 1615 0118 5B68     		ldr	r3, [r3, #4]
 1616 011a BB61     		str	r3, [r7, #24]
 678:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 1617              		.loc 1 678 36
 1618 011c 0122     		movs	r2, #1
 1619 011e FB69     		ldr	r3, [r7, #28]
 1620 0120 02FA03F3 		lsl	r3, r2, r3
 1621              		.loc 1 678 17
 1622 0124 DB43     		mvns	r3, r3
 1623              		.loc 1 678 14
 1624 0126 BA69     		ldr	r2, [r7, #24]
 1625 0128 1340     		ands	r3, r3, r2
 1626 012a BB61     		str	r3, [r7, #24]
 679:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1627              		.loc 1 679 29
 1628 012c 3B68     		ldr	r3, [r7]
 1629 012e 5B68     		ldr	r3, [r3, #4]
 1630              		.loc 1 679 56
 1631 0130 1B09     		lsrs	r3, r3, #4
 1632 0132 03F00102 		and	r2, r3, #1
 1633              		.loc 1 679 63
 1634 0136 FB69     		ldr	r3, [r7, #28]
 1635 0138 02FA03F3 		lsl	r3, r2, r3
 1636              		.loc 1 679 14
 1637 013c BA69     		ldr	r2, [r7, #24]
 1638 013e 1343     		orrs	r3, r3, r2
 1639 0140 BB61     		str	r3, [r7, #24]
 680:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1640              		.loc 1 680 23
 1641 0142 7B68     		ldr	r3, [r7, #4]
 1642 0144 BA69     		ldr	r2, [r7, #24]
 1643 0146 5A60     		str	r2, [r3, #4]
 1644              	.L110:
 681:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 682:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 683:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 684:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 1645              		.loc 1 684 12
 1646 0148 7B68     		ldr	r3, [r7, #4]
 1647 014a DB68     		ldr	r3, [r3, #12]
 1648 014c BB61     		str	r3, [r7, #24]
 685:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 1649              		.loc 1 685 48
 1650 014e FB69     		ldr	r3, [r7, #28]
 1651 0150 5B00     		lsls	r3, r3, #1
 1652              		.loc 1 685 35
 1653 0152 0322     		movs	r2, #3
 1654 0154 02FA03F3 		lsl	r3, r2, r3
 1655              		.loc 1 685 15
 1656 0158 DB43     		mvns	r3, r3
 1657              		.loc 1 685 12
 1658 015a BA69     		ldr	r2, [r7, #24]
 1659 015c 1340     		ands	r3, r3, r2
 1660 015e BB61     		str	r3, [r7, #24]
 686:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 1661              		.loc 1 686 26
 1662 0160 3B68     		ldr	r3, [r7]
 1663 0162 9A68     		ldr	r2, [r3, #8]
 1664              		.loc 1 686 47
 1665 0164 FB69     		ldr	r3, [r7, #28]
 1666 0166 5B00     		lsls	r3, r3, #1
 1667              		.loc 1 686 34
 1668 0168 02FA03F3 		lsl	r3, r2, r3
 1669              		.loc 1 686 12
 1670 016c BA69     		ldr	r2, [r7, #24]
 1671 016e 1343     		orrs	r3, r3, r2
 1672 0170 BB61     		str	r3, [r7, #24]
 687:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1673              		.loc 1 687 20
 1674 0172 7B68     		ldr	r3, [r7, #4]
 1675 0174 BA69     		ldr	r2, [r7, #24]
 1676 0176 DA60     		str	r2, [r3, #12]
 688:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 689:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 690:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 691:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 1677              		.loc 1 691 20
 1678 0178 3B68     		ldr	r3, [r7]
 1679 017a 5B68     		ldr	r3, [r3, #4]
 1680              		.loc 1 691 27
 1681 017c 03F08053 		and	r3, r3, #268435456
 1682              		.loc 1 691 9
 1683 0180 002B     		cmp	r3, #0
 1684 0182 00F0B480 		beq	.L106
 1685              	.LBB60:
 692:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 693:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 694:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 1686              		.loc 1 694 9
 1687 0186 0023     		movs	r3, #0
 1688 0188 FB60     		str	r3, [r7, #12]
 1689 018a 5F4B     		ldr	r3, .L132
 1690 018c 5B6C     		ldr	r3, [r3, #68]
 1691 018e 5E4A     		ldr	r2, .L132
 1692 0190 43F48043 		orr	r3, r3, #16384
 1693 0194 5364     		str	r3, [r2, #68]
 1694 0196 5C4B     		ldr	r3, .L132
 1695 0198 5B6C     		ldr	r3, [r3, #68]
 1696 019a 03F48043 		and	r3, r3, #16384
 1697 019e FB60     		str	r3, [r7, #12]
 1698 01a0 FB68     		ldr	r3, [r7, #12]
 1699              	.LBE60:
 695:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 696:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2U];
 1700              		.loc 1 696 22
 1701 01a2 5A4A     		ldr	r2, .L132+4
 1702              		.loc 1 696 40
 1703 01a4 FB69     		ldr	r3, [r7, #28]
 1704 01a6 9B08     		lsrs	r3, r3, #2
 1705              		.loc 1 696 14
 1706 01a8 0233     		adds	r3, r3, #2
 1707 01aa 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1708 01ae BB61     		str	r3, [r7, #24]
 697:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0x0FU << (4U * (position & 0x03U)));
 1709              		.loc 1 697 44
 1710 01b0 FB69     		ldr	r3, [r7, #28]
 1711 01b2 03F00303 		and	r3, r3, #3
 1712              		.loc 1 697 32
 1713 01b6 9B00     		lsls	r3, r3, #2
 1714              		.loc 1 697 25
 1715 01b8 0F22     		movs	r2, #15
 1716 01ba 02FA03F3 		lsl	r3, r2, r3
 1717              		.loc 1 697 17
 1718 01be DB43     		mvns	r3, r3
 1719              		.loc 1 697 14
 1720 01c0 BA69     		ldr	r2, [r7, #24]
 1721 01c2 1340     		ands	r3, r3, r2
 1722 01c4 BB61     		str	r3, [r7, #24]
 698:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1723              		.loc 1 698 18
 1724 01c6 7B68     		ldr	r3, [r7, #4]
 1725 01c8 514A     		ldr	r2, .L132+8
 1726 01ca 9342     		cmp	r3, r2
 1727 01cc 2BD0     		beq	.L111
 1728              		.loc 1 698 29 discriminator 1
 1729 01ce 7B68     		ldr	r3, [r7, #4]
 1730 01d0 504A     		ldr	r2, .L132+12
 1731 01d2 9342     		cmp	r3, r2
 1732 01d4 25D0     		beq	.L112
 1733              		.loc 1 698 29 is_stmt 0 discriminator 3
 1734 01d6 7B68     		ldr	r3, [r7, #4]
 1735 01d8 4F4A     		ldr	r2, .L132+16
 1736 01da 9342     		cmp	r3, r2
 1737 01dc 1FD0     		beq	.L113
 1738              		.loc 1 698 29 discriminator 5
 1739 01de 7B68     		ldr	r3, [r7, #4]
 1740 01e0 4E4A     		ldr	r2, .L132+20
 1741 01e2 9342     		cmp	r3, r2
 1742 01e4 19D0     		beq	.L114
 1743              		.loc 1 698 29 discriminator 7
 1744 01e6 7B68     		ldr	r3, [r7, #4]
 1745 01e8 4D4A     		ldr	r2, .L132+24
 1746 01ea 9342     		cmp	r3, r2
 1747 01ec 13D0     		beq	.L115
 1748              		.loc 1 698 29 discriminator 9
 1749 01ee 7B68     		ldr	r3, [r7, #4]
 1750 01f0 4C4A     		ldr	r2, .L132+28
 1751 01f2 9342     		cmp	r3, r2
 1752 01f4 0DD0     		beq	.L116
 1753              		.loc 1 698 29 discriminator 11
 1754 01f6 7B68     		ldr	r3, [r7, #4]
 1755 01f8 4B4A     		ldr	r2, .L132+32
 1756 01fa 9342     		cmp	r3, r2
 1757 01fc 07D0     		beq	.L117
 1758              		.loc 1 698 29 discriminator 13
 1759 01fe 7B68     		ldr	r3, [r7, #4]
 1760 0200 4A4A     		ldr	r2, .L132+36
 1761 0202 9342     		cmp	r3, r2
 1762 0204 01D1     		bne	.L118
 1763              		.loc 1 698 29 discriminator 15
 1764 0206 0723     		movs	r3, #7
 1765 0208 0EE0     		b	.L126
 1766              	.L118:
 1767              		.loc 1 698 29 discriminator 16
 1768 020a 0823     		movs	r3, #8
 1769 020c 0CE0     		b	.L126
 1770              	.L117:
 1771              		.loc 1 698 29 discriminator 14
 1772 020e 0623     		movs	r3, #6
 1773 0210 0AE0     		b	.L126
 1774              	.L116:
 1775              		.loc 1 698 29 discriminator 12
 1776 0212 0523     		movs	r3, #5
 1777 0214 08E0     		b	.L126
 1778              	.L115:
 1779              		.loc 1 698 29 discriminator 10
 1780 0216 0423     		movs	r3, #4
 1781 0218 06E0     		b	.L126
 1782              	.L114:
 1783              		.loc 1 698 29 discriminator 8
 1784 021a 0323     		movs	r3, #3
 1785 021c 04E0     		b	.L126
 1786              	.L113:
 1787              		.loc 1 698 29 discriminator 6
 1788 021e 0223     		movs	r3, #2
 1789 0220 02E0     		b	.L126
 1790              	.L112:
 1791              		.loc 1 698 29 discriminator 4
 1792 0222 0123     		movs	r3, #1
 1793 0224 00E0     		b	.L126
 1794              	.L111:
 1795              		.loc 1 698 18 is_stmt 1 discriminator 2
 1796 0226 0023     		movs	r3, #0
 1797              	.L126:
 1798              		.loc 1 698 71 discriminator 32
 1799 0228 FA69     		ldr	r2, [r7, #28]
 1800 022a 02F00302 		and	r2, r2, #3
 1801              		.loc 1 698 59 discriminator 32
 1802 022e 9200     		lsls	r2, r2, #2
 1803              		.loc 1 698 52 discriminator 32
 1804 0230 9340     		lsls	r3, r3, r2
 1805              		.loc 1 698 14 discriminator 32
 1806 0232 BA69     		ldr	r2, [r7, #24]
 1807 0234 1343     		orrs	r3, r3, r2
 1808 0236 BB61     		str	r3, [r7, #24]
 699:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 1809              		.loc 1 699 15 discriminator 32
 1810 0238 3449     		ldr	r1, .L132+4
 1811              		.loc 1 699 33 discriminator 32
 1812 023a FB69     		ldr	r3, [r7, #28]
 1813 023c 9B08     		lsrs	r3, r3, #2
 1814              		.loc 1 699 40 discriminator 32
 1815 023e 0233     		adds	r3, r3, #2
 1816 0240 BA69     		ldr	r2, [r7, #24]
 1817 0242 41F82320 		str	r2, [r1, r3, lsl #2]
 700:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 701:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 702:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->IMR;
 1818              		.loc 1 702 20 discriminator 32
 1819 0246 3A4B     		ldr	r3, .L132+40
 1820              		.loc 1 702 14 discriminator 32
 1821 0248 1B68     		ldr	r3, [r3]
 1822 024a BB61     		str	r3, [r7, #24]
 703:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 1823              		.loc 1 703 17 discriminator 32
 1824 024c 3B69     		ldr	r3, [r7, #16]
 1825 024e DB43     		mvns	r3, r3
 1826              		.loc 1 703 14 discriminator 32
 1827 0250 BA69     		ldr	r2, [r7, #24]
 1828 0252 1340     		ands	r3, r3, r2
 1829 0254 BB61     		str	r3, [r7, #24]
 704:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1830              		.loc 1 704 22 discriminator 32
 1831 0256 3B68     		ldr	r3, [r7]
 1832 0258 5B68     		ldr	r3, [r3, #4]
 1833              		.loc 1 704 29 discriminator 32
 1834 025a 03F48033 		and	r3, r3, #65536
 1835              		.loc 1 704 11 discriminator 32
 1836 025e 002B     		cmp	r3, #0
 1837 0260 03D0     		beq	.L127
 705:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 706:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 1838              		.loc 1 706 16
 1839 0262 BA69     		ldr	r2, [r7, #24]
 1840 0264 3B69     		ldr	r3, [r7, #16]
 1841 0266 1343     		orrs	r3, r3, r2
 1842 0268 BB61     		str	r3, [r7, #24]
 1843              	.L127:
 707:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 708:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->IMR = temp;
 1844              		.loc 1 708 13
 1845 026a 314A     		ldr	r2, .L132+40
 1846              		.loc 1 708 19
 1847 026c BB69     		ldr	r3, [r7, #24]
 1848 026e 1360     		str	r3, [r2]
 709:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 710:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->EMR;
 1849              		.loc 1 710 20
 1850 0270 2F4B     		ldr	r3, .L132+40
 1851              		.loc 1 710 14
 1852 0272 5B68     		ldr	r3, [r3, #4]
 1853 0274 BB61     		str	r3, [r7, #24]
 711:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 1854              		.loc 1 711 17
 1855 0276 3B69     		ldr	r3, [r7, #16]
 1856 0278 DB43     		mvns	r3, r3
 1857              		.loc 1 711 14
 1858 027a BA69     		ldr	r2, [r7, #24]
 1859 027c 1340     		ands	r3, r3, r2
 1860 027e BB61     		str	r3, [r7, #24]
 712:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1861              		.loc 1 712 22
 1862 0280 3B68     		ldr	r3, [r7]
 1863 0282 5B68     		ldr	r3, [r3, #4]
 1864              		.loc 1 712 29
 1865 0284 03F40033 		and	r3, r3, #131072
 1866              		.loc 1 712 11
 1867 0288 002B     		cmp	r3, #0
 1868 028a 03D0     		beq	.L128
 713:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 714:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 1869              		.loc 1 714 16
 1870 028c BA69     		ldr	r2, [r7, #24]
 1871 028e 3B69     		ldr	r3, [r7, #16]
 1872 0290 1343     		orrs	r3, r3, r2
 1873 0292 BB61     		str	r3, [r7, #24]
 1874              	.L128:
 715:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 716:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->EMR = temp;
 1875              		.loc 1 716 13
 1876 0294 264A     		ldr	r2, .L132+40
 1877              		.loc 1 716 19
 1878 0296 BB69     		ldr	r3, [r7, #24]
 1879 0298 5360     		str	r3, [r2, #4]
 717:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 718:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 719:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->RTSR;
 1880              		.loc 1 719 20
 1881 029a 254B     		ldr	r3, .L132+40
 1882              		.loc 1 719 14
 1883 029c 9B68     		ldr	r3, [r3, #8]
 1884 029e BB61     		str	r3, [r7, #24]
 720:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 1885              		.loc 1 720 17
 1886 02a0 3B69     		ldr	r3, [r7, #16]
 1887 02a2 DB43     		mvns	r3, r3
 1888              		.loc 1 720 14
 1889 02a4 BA69     		ldr	r2, [r7, #24]
 1890 02a6 1340     		ands	r3, r3, r2
 1891 02a8 BB61     		str	r3, [r7, #24]
 721:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 1892              		.loc 1 721 22
 1893 02aa 3B68     		ldr	r3, [r7]
 1894 02ac 5B68     		ldr	r3, [r3, #4]
 1895              		.loc 1 721 29
 1896 02ae 03F48013 		and	r3, r3, #1048576
 1897              		.loc 1 721 11
 1898 02b2 002B     		cmp	r3, #0
 1899 02b4 03D0     		beq	.L129
 722:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 723:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 1900              		.loc 1 723 16
 1901 02b6 BA69     		ldr	r2, [r7, #24]
 1902 02b8 3B69     		ldr	r3, [r7, #16]
 1903 02ba 1343     		orrs	r3, r3, r2
 1904 02bc BB61     		str	r3, [r7, #24]
 1905              	.L129:
 724:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 725:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->RTSR = temp;
 1906              		.loc 1 725 13
 1907 02be 1C4A     		ldr	r2, .L132+40
 1908              		.loc 1 725 20
 1909 02c0 BB69     		ldr	r3, [r7, #24]
 1910 02c2 9360     		str	r3, [r2, #8]
 726:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 727:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->FTSR;
 1911              		.loc 1 727 20
 1912 02c4 1A4B     		ldr	r3, .L132+40
 1913              		.loc 1 727 14
 1914 02c6 DB68     		ldr	r3, [r3, #12]
 1915 02c8 BB61     		str	r3, [r7, #24]
 728:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 1916              		.loc 1 728 17
 1917 02ca 3B69     		ldr	r3, [r7, #16]
 1918 02cc DB43     		mvns	r3, r3
 1919              		.loc 1 728 14
 1920 02ce BA69     		ldr	r2, [r7, #24]
 1921 02d0 1340     		ands	r3, r3, r2
 1922 02d2 BB61     		str	r3, [r7, #24]
 729:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 1923              		.loc 1 729 22
 1924 02d4 3B68     		ldr	r3, [r7]
 1925 02d6 5B68     		ldr	r3, [r3, #4]
 1926              		.loc 1 729 29
 1927 02d8 03F40013 		and	r3, r3, #2097152
 1928              		.loc 1 729 11
 1929 02dc 002B     		cmp	r3, #0
 1930 02de 03D0     		beq	.L130
 730:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 731:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 1931              		.loc 1 731 16
 1932 02e0 BA69     		ldr	r2, [r7, #24]
 1933 02e2 3B69     		ldr	r3, [r7, #16]
 1934 02e4 1343     		orrs	r3, r3, r2
 1935 02e6 BB61     		str	r3, [r7, #24]
 1936              	.L130:
 732:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 733:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->FTSR = temp;
 1937              		.loc 1 733 13
 1938 02e8 114A     		ldr	r2, .L132+40
 1939              		.loc 1 733 20
 1940 02ea BB69     		ldr	r3, [r7, #24]
 1941 02ec D360     		str	r3, [r2, #12]
 1942              	.L106:
 636:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1943              		.loc 1 636 54 discriminator 2
 1944 02ee FB69     		ldr	r3, [r7, #28]
 1945 02f0 0133     		adds	r3, r3, #1
 1946 02f2 FB61     		str	r3, [r7, #28]
 1947              	.L105:
 636:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1948              		.loc 1 636 3 discriminator 1
 1949 02f4 FB69     		ldr	r3, [r7, #28]
 1950 02f6 0F2B     		cmp	r3, #15
 1951 02f8 7FF690AE 		bls	.L131
 734:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 735:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 736:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 737:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 1952              		.loc 1 737 1
 1953 02fc 00BF     		nop
 1954 02fe 00BF     		nop
 1955 0300 2437     		adds	r7, r7, #36
 1956              	.LCFI31:
 1957              		.cfi_def_cfa_offset 4
 1958 0302 BD46     		mov	sp, r7
 1959              	.LCFI32:
 1960              		.cfi_def_cfa_register 13
 1961              		@ sp needed
 1962 0304 80BC     		pop	{r7}
 1963              	.LCFI33:
 1964              		.cfi_restore 7
 1965              		.cfi_def_cfa_offset 0
 1966 0306 7047     		bx	lr
 1967              	.L133:
 1968              		.align	2
 1969              	.L132:
 1970 0308 00380240 		.word	1073887232
 1971 030c 00380140 		.word	1073821696
 1972 0310 00000240 		.word	1073872896
 1973 0314 00040240 		.word	1073873920
 1974 0318 00080240 		.word	1073874944
 1975 031c 000C0240 		.word	1073875968
 1976 0320 00100240 		.word	1073876992
 1977 0324 00140240 		.word	1073878016
 1978 0328 00180240 		.word	1073879040
 1979 032c 001C0240 		.word	1073880064
 1980 0330 003C0140 		.word	1073822720
 1981              		.cfi_endproc
 1982              	.LFE132:
 1984              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 1985              		.align	1
 1986              		.global	HAL_GPIO_WritePin
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1990              		.fpu softvfp
 1992              	HAL_GPIO_WritePin:
 1993              	.LFB133:
 738:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 739:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 740:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Sets or clears the selected data port bit.
 741:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 742:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR register to allow atomic read/modify
 743:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 744:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the read and the modify access.
 745:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 746:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 747:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 748:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 749:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
 750:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
 751:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be one of the GPIO_PinState enum values:
 752:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 753:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 754:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 755:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 756:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 757:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 1994              		.loc 1 757 1
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 8
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998              		@ link register save eliminated.
 1999 0000 80B4     		push	{r7}
 2000              	.LCFI34:
 2001              		.cfi_def_cfa_offset 4
 2002              		.cfi_offset 7, -4
 2003 0002 83B0     		sub	sp, sp, #12
 2004              	.LCFI35:
 2005              		.cfi_def_cfa_offset 16
 2006 0004 00AF     		add	r7, sp, #0
 2007              	.LCFI36:
 2008              		.cfi_def_cfa_register 7
 2009 0006 7860     		str	r0, [r7, #4]
 2010 0008 0B46     		mov	r3, r1
 2011 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 2012 000c 1346     		mov	r3, r2
 2013 000e 7B70     		strb	r3, [r7, #1]
 758:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 759:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 760:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 761:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 762:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(PinState != GPIO_PIN_RESET)
 2014              		.loc 1 762 5
 2015 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2016 0012 002B     		cmp	r3, #0
 2017 0014 03D0     		beq	.L135
 763:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 764:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     GPIOx->BSRR = GPIO_Pin;
 2018              		.loc 1 764 17
 2019 0016 7A88     		ldrh	r2, [r7, #2]
 2020 0018 7B68     		ldr	r3, [r7, #4]
 2021 001a 9A61     		str	r2, [r3, #24]
 765:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 766:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
 767:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 768:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 769:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 770:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2022              		.loc 1 770 1
 2023 001c 03E0     		b	.L137
 2024              	.L135:
 768:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2025              		.loc 1 768 19
 2026 001e 7B88     		ldrh	r3, [r7, #2]
 768:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2027              		.loc 1 768 38
 2028 0020 1A04     		lsls	r2, r3, #16
 768:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2029              		.loc 1 768 17
 2030 0022 7B68     		ldr	r3, [r7, #4]
 2031 0024 9A61     		str	r2, [r3, #24]
 2032              	.L137:
 2033              		.loc 1 770 1
 2034 0026 00BF     		nop
 2035 0028 0C37     		adds	r7, r7, #12
 2036              	.LCFI37:
 2037              		.cfi_def_cfa_offset 4
 2038 002a BD46     		mov	sp, r7
 2039              	.LCFI38:
 2040              		.cfi_def_cfa_register 13
 2041              		@ sp needed
 2042 002c 80BC     		pop	{r7}
 2043              	.LCFI39:
 2044              		.cfi_restore 7
 2045              		.cfi_def_cfa_offset 0
 2046 002e 7047     		bx	lr
 2047              		.cfi_endproc
 2048              	.LFE133:
 2050              		.section	.text.UART_SetConfig,"ax",%progbits
 2051              		.align	1
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2055              		.fpu softvfp
 2057              	UART_SetConfig:
 2058              	.LFB134:
 771:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 772:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 773:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 774:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Configures the UART peripheral.
 775:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 776:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
 777:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 778:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 779:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
 780:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 2059              		.loc 1 780 1
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 16
 2062              		@ frame_needed = 1, uses_anonymous_args = 0
 2063 0000 B0B5     		push	{r4, r5, r7, lr}
 2064              	.LCFI40:
 2065              		.cfi_def_cfa_offset 16
 2066              		.cfi_offset 4, -16
 2067              		.cfi_offset 5, -12
 2068              		.cfi_offset 7, -8
 2069              		.cfi_offset 14, -4
 2070 0002 84B0     		sub	sp, sp, #16
 2071              	.LCFI41:
 2072              		.cfi_def_cfa_offset 32
 2073 0004 00AF     		add	r7, sp, #0
 2074              	.LCFI42:
 2075              		.cfi_def_cfa_register 7
 2076 0006 7860     		str	r0, [r7, #4]
 781:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tmpreg = 0x00U;
 2077              		.loc 1 781 12
 2078 0008 0023     		movs	r3, #0
 2079 000a FB60     		str	r3, [r7, #12]
 782:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 783:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 784:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 785:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 786:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 787:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 788:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 789:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
 790:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg = huart->Instance->CR2;
 2080              		.loc 1 790 17
 2081 000c 7B68     		ldr	r3, [r7, #4]
 2082 000e 1B68     		ldr	r3, [r3]
 2083              		.loc 1 790 10
 2084 0010 1B69     		ldr	r3, [r3, #16]
 2085 0012 FB60     		str	r3, [r7, #12]
 791:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 792:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Clear STOP[13:12] bits */
 793:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 2086              		.loc 1 793 10
 2087 0014 FB68     		ldr	r3, [r7, #12]
 2088 0016 23F44053 		bic	r3, r3, #12288
 2089 001a FB60     		str	r3, [r7, #12]
 794:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 795:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
 796:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 2090              		.loc 1 796 34
 2091 001c 7B68     		ldr	r3, [r7, #4]
 2092 001e DB68     		ldr	r3, [r3, #12]
 2093              		.loc 1 796 10
 2094 0020 FA68     		ldr	r2, [r7, #12]
 2095 0022 1343     		orrs	r3, r3, r2
 2096 0024 FB60     		str	r3, [r7, #12]
 797:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 798:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Write to USART CR2 */
 799:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 2097              		.loc 1 799 3
 2098 0026 7B68     		ldr	r3, [r7, #4]
 2099 0028 1B68     		ldr	r3, [r3]
 2100 002a FA68     		ldr	r2, [r7, #12]
 2101 002c 1A61     		str	r2, [r3, #16]
 800:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 801:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
 802:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg = huart->Instance->CR1;
 2102              		.loc 1 802 17
 2103 002e 7B68     		ldr	r3, [r7, #4]
 2104 0030 1B68     		ldr	r3, [r3]
 2105              		.loc 1 802 10
 2106 0032 DB68     		ldr	r3, [r3, #12]
 2107 0034 FB60     		str	r3, [r7, #12]
 803:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 804:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE and RE bits */
 805:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 2108              		.loc 1 805 10
 2109 0036 FB68     		ldr	r3, [r7, #12]
 2110 0038 23F41643 		bic	r3, r3, #38400
 2111 003c 23F00C03 		bic	r3, r3, #12
 2112 0040 FB60     		str	r3, [r7, #12]
 806:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
 807:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 808:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the UART Word Length, Parity and mode:
 809:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set the M bits according to huart->Init.WordLength value
 810:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set PCE and PS bits according to huart->Init.Parity value
 811:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set TE and RE bits according to huart->Init.Mode value
 812:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
 813:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 2113              		.loc 1 813 34
 2114 0042 7B68     		ldr	r3, [r7, #4]
 2115 0044 9A68     		ldr	r2, [r3, #8]
 2116              		.loc 1 813 59
 2117 0046 7B68     		ldr	r3, [r7, #4]
 2118 0048 1B69     		ldr	r3, [r3, #16]
 2119              		.loc 1 813 46
 2120 004a 1A43     		orrs	r2, r2, r3
 2121              		.loc 1 813 80
 2122 004c 7B68     		ldr	r3, [r7, #4]
 2123 004e 5B69     		ldr	r3, [r3, #20]
 2124              		.loc 1 813 67
 2125 0050 1A43     		orrs	r2, r2, r3
 2126              		.loc 1 813 99
 2127 0052 7B68     		ldr	r3, [r7, #4]
 2128 0054 DB69     		ldr	r3, [r3, #28]
 2129              		.loc 1 813 86
 2130 0056 1343     		orrs	r3, r3, r2
 2131              		.loc 1 813 10
 2132 0058 FA68     		ldr	r2, [r7, #12]
 2133 005a 1343     		orrs	r3, r3, r2
 2134 005c FB60     		str	r3, [r7, #12]
 814:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 815:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Write to USART CR1 */
 816:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 2135              		.loc 1 816 3
 2136 005e 7B68     		ldr	r3, [r7, #4]
 2137 0060 1B68     		ldr	r3, [r3]
 2138 0062 FA68     		ldr	r2, [r7, #12]
 2139 0064 DA60     		str	r2, [r3, #12]
 817:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 818:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
 819:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg = huart->Instance->CR3;
 2140              		.loc 1 819 17
 2141 0066 7B68     		ldr	r3, [r7, #4]
 2142 0068 1B68     		ldr	r3, [r3]
 2143              		.loc 1 819 10
 2144 006a 5B69     		ldr	r3, [r3, #20]
 2145 006c FB60     		str	r3, [r7, #12]
 820:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 821:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Clear CTSE and RTSE bits */
 822:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 2146              		.loc 1 822 10
 2147 006e FB68     		ldr	r3, [r7, #12]
 2148 0070 23F44073 		bic	r3, r3, #768
 2149 0074 FB60     		str	r3, [r7, #12]
 823:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 824:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
 825:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg |= huart->Init.HwFlowCtl;
 2150              		.loc 1 825 24
 2151 0076 7B68     		ldr	r3, [r7, #4]
 2152 0078 9B69     		ldr	r3, [r3, #24]
 2153              		.loc 1 825 10
 2154 007a FA68     		ldr	r2, [r7, #12]
 2155 007c 1343     		orrs	r3, r3, r2
 2156 007e FB60     		str	r3, [r7, #12]
 826:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 827:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Write to USART CR3 */
 828:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 2157              		.loc 1 828 3
 2158 0080 7B68     		ldr	r3, [r7, #4]
 2159 0082 1B68     		ldr	r3, [r3]
 2160 0084 FA68     		ldr	r2, [r7, #12]
 2161 0086 5A61     		str	r2, [r3, #20]
 829:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 830:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the Over Sampling */
 831:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2162              		.loc 1 831 17
 2163 0088 7B68     		ldr	r3, [r7, #4]
 2164 008a DB69     		ldr	r3, [r3, #28]
 2165              		.loc 1 831 5
 2166 008c B3F5004F 		cmp	r3, #32768
 2167 0090 40F0E480 		bne	.L139
 832:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 833:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
 834:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #if defined(USART6)
 835:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 2168              		.loc 1 835 14
 2169 0094 7B68     		ldr	r3, [r7, #4]
 2170 0096 1B68     		ldr	r3, [r3]
 2171              		.loc 1 835 7
 2172 0098 AB4A     		ldr	r2, .L147
 2173 009a 9342     		cmp	r3, r2
 2174 009c 04D0     		beq	.L140
 2175              		.loc 1 835 45 discriminator 1
 2176 009e 7B68     		ldr	r3, [r7, #4]
 2177 00a0 1B68     		ldr	r3, [r3]
 2178              		.loc 1 835 36 discriminator 1
 2179 00a2 AA4A     		ldr	r2, .L147+4
 2180 00a4 9342     		cmp	r3, r2
 2181 00a6 6CD1     		bne	.L141
 2182              	.L140:
 836:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 837:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 2183              		.loc 1 837 30
 2184 00a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2185 00ac 0246     		mov	r2, r0
 2186 00ae 1346     		mov	r3, r2
 2187 00b0 9B00     		lsls	r3, r3, #2
 2188 00b2 1344     		add	r3, r3, r2
 2189 00b4 9A00     		lsls	r2, r3, #2
 2190 00b6 1A44     		add	r2, r2, r3
 2191 00b8 7B68     		ldr	r3, [r7, #4]
 2192 00ba 5B68     		ldr	r3, [r3, #4]
 2193 00bc 5B00     		lsls	r3, r3, #1
 2194 00be B2FBF3F3 		udiv	r3, r2, r3
 2195 00c2 A34A     		ldr	r2, .L147+8
 2196 00c4 A2FB0323 		umull	r2, r3, r2, r3
 2197 00c8 5B09     		lsrs	r3, r3, #5
 2198 00ca 1C01     		lsls	r4, r3, #4
 2199 00cc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2200 00d0 0246     		mov	r2, r0
 2201 00d2 1346     		mov	r3, r2
 2202 00d4 9B00     		lsls	r3, r3, #2
 2203 00d6 1344     		add	r3, r3, r2
 2204 00d8 9A00     		lsls	r2, r3, #2
 2205 00da 1A44     		add	r2, r2, r3
 2206 00dc 7B68     		ldr	r3, [r7, #4]
 2207 00de 5B68     		ldr	r3, [r3, #4]
 2208 00e0 5B00     		lsls	r3, r3, #1
 2209 00e2 B2FBF3F5 		udiv	r5, r2, r3
 2210 00e6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2211 00ea 0246     		mov	r2, r0
 2212 00ec 1346     		mov	r3, r2
 2213 00ee 9B00     		lsls	r3, r3, #2
 2214 00f0 1344     		add	r3, r3, r2
 2215 00f2 9A00     		lsls	r2, r3, #2
 2216 00f4 1A44     		add	r2, r2, r3
 2217 00f6 7B68     		ldr	r3, [r7, #4]
 2218 00f8 5B68     		ldr	r3, [r3, #4]
 2219 00fa 5B00     		lsls	r3, r3, #1
 2220 00fc B2FBF3F3 		udiv	r3, r2, r3
 2221 0100 934A     		ldr	r2, .L147+8
 2222 0102 A2FB0323 		umull	r2, r3, r2, r3
 2223 0106 5B09     		lsrs	r3, r3, #5
 2224 0108 6422     		movs	r2, #100
 2225 010a 02FB03F3 		mul	r3, r2, r3
 2226 010e EB1A     		subs	r3, r5, r3
 2227 0110 DB00     		lsls	r3, r3, #3
 2228 0112 3233     		adds	r3, r3, #50
 2229 0114 8E4A     		ldr	r2, .L147+8
 2230 0116 A2FB0323 		umull	r2, r3, r2, r3
 2231 011a 5B09     		lsrs	r3, r3, #5
 2232 011c 5B00     		lsls	r3, r3, #1
 2233 011e 03F4F873 		and	r3, r3, #496
 2234 0122 1C44     		add	r4, r4, r3
 2235 0124 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2236 0128 0246     		mov	r2, r0
 2237 012a 1346     		mov	r3, r2
 2238 012c 9B00     		lsls	r3, r3, #2
 2239 012e 1344     		add	r3, r3, r2
 2240 0130 9A00     		lsls	r2, r3, #2
 2241 0132 1A44     		add	r2, r2, r3
 2242 0134 7B68     		ldr	r3, [r7, #4]
 2243 0136 5B68     		ldr	r3, [r3, #4]
 2244 0138 5B00     		lsls	r3, r3, #1
 2245 013a B2FBF3F5 		udiv	r5, r2, r3
 2246 013e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2247 0142 0246     		mov	r2, r0
 2248 0144 1346     		mov	r3, r2
 2249 0146 9B00     		lsls	r3, r3, #2
 2250 0148 1344     		add	r3, r3, r2
 2251 014a 9A00     		lsls	r2, r3, #2
 2252 014c 1A44     		add	r2, r2, r3
 2253 014e 7B68     		ldr	r3, [r7, #4]
 2254 0150 5B68     		ldr	r3, [r3, #4]
 2255 0152 5B00     		lsls	r3, r3, #1
 2256 0154 B2FBF3F3 		udiv	r3, r2, r3
 2257 0158 7D4A     		ldr	r2, .L147+8
 2258 015a A2FB0323 		umull	r2, r3, r2, r3
 2259 015e 5B09     		lsrs	r3, r3, #5
 2260 0160 6422     		movs	r2, #100
 2261 0162 02FB03F3 		mul	r3, r2, r3
 2262 0166 EB1A     		subs	r3, r5, r3
 2263 0168 DB00     		lsls	r3, r3, #3
 2264 016a 3233     		adds	r3, r3, #50
 2265 016c 784A     		ldr	r2, .L147+8
 2266 016e A2FB0323 		umull	r2, r3, r2, r3
 2267 0172 5B09     		lsrs	r3, r3, #5
 2268 0174 03F00702 		and	r2, r3, #7
 2269              		.loc 1 837 12
 2270 0178 7B68     		ldr	r3, [r7, #4]
 2271 017a 1B68     		ldr	r3, [r3]
 2272              		.loc 1 837 30
 2273 017c 2244     		add	r2, r2, r4
 2274              		.loc 1 837 28
 2275 017e 9A60     		str	r2, [r3, #8]
 2276 0180 54E1     		b	.L143
 2277              	.L141:
 838:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 839:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #else
 840:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(huart->Instance == USART1)
 841:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 842:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 843:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 844:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #endif /* USART6 */
 845:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 846:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 847:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 2278              		.loc 1 847 30
 2279 0182 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2280 0186 0246     		mov	r2, r0
 2281 0188 1346     		mov	r3, r2
 2282 018a 9B00     		lsls	r3, r3, #2
 2283 018c 1344     		add	r3, r3, r2
 2284 018e 9A00     		lsls	r2, r3, #2
 2285 0190 1A44     		add	r2, r2, r3
 2286 0192 7B68     		ldr	r3, [r7, #4]
 2287 0194 5B68     		ldr	r3, [r3, #4]
 2288 0196 5B00     		lsls	r3, r3, #1
 2289 0198 B2FBF3F3 		udiv	r3, r2, r3
 2290 019c 6C4A     		ldr	r2, .L147+8
 2291 019e A2FB0323 		umull	r2, r3, r2, r3
 2292 01a2 5B09     		lsrs	r3, r3, #5
 2293 01a4 1C01     		lsls	r4, r3, #4
 2294 01a6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2295 01aa 0246     		mov	r2, r0
 2296 01ac 1346     		mov	r3, r2
 2297 01ae 9B00     		lsls	r3, r3, #2
 2298 01b0 1344     		add	r3, r3, r2
 2299 01b2 9A00     		lsls	r2, r3, #2
 2300 01b4 1A44     		add	r2, r2, r3
 2301 01b6 7B68     		ldr	r3, [r7, #4]
 2302 01b8 5B68     		ldr	r3, [r3, #4]
 2303 01ba 5B00     		lsls	r3, r3, #1
 2304 01bc B2FBF3F5 		udiv	r5, r2, r3
 2305 01c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2306 01c4 0246     		mov	r2, r0
 2307 01c6 1346     		mov	r3, r2
 2308 01c8 9B00     		lsls	r3, r3, #2
 2309 01ca 1344     		add	r3, r3, r2
 2310 01cc 9A00     		lsls	r2, r3, #2
 2311 01ce 1A44     		add	r2, r2, r3
 2312 01d0 7B68     		ldr	r3, [r7, #4]
 2313 01d2 5B68     		ldr	r3, [r3, #4]
 2314 01d4 5B00     		lsls	r3, r3, #1
 2315 01d6 B2FBF3F3 		udiv	r3, r2, r3
 2316 01da 5D4A     		ldr	r2, .L147+8
 2317 01dc A2FB0323 		umull	r2, r3, r2, r3
 2318 01e0 5B09     		lsrs	r3, r3, #5
 2319 01e2 6422     		movs	r2, #100
 2320 01e4 02FB03F3 		mul	r3, r2, r3
 2321 01e8 EB1A     		subs	r3, r5, r3
 2322 01ea DB00     		lsls	r3, r3, #3
 2323 01ec 3233     		adds	r3, r3, #50
 2324 01ee 584A     		ldr	r2, .L147+8
 2325 01f0 A2FB0323 		umull	r2, r3, r2, r3
 2326 01f4 5B09     		lsrs	r3, r3, #5
 2327 01f6 5B00     		lsls	r3, r3, #1
 2328 01f8 03F4F873 		and	r3, r3, #496
 2329 01fc 1C44     		add	r4, r4, r3
 2330 01fe FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2331 0202 0246     		mov	r2, r0
 2332 0204 1346     		mov	r3, r2
 2333 0206 9B00     		lsls	r3, r3, #2
 2334 0208 1344     		add	r3, r3, r2
 2335 020a 9A00     		lsls	r2, r3, #2
 2336 020c 1A44     		add	r2, r2, r3
 2337 020e 7B68     		ldr	r3, [r7, #4]
 2338 0210 5B68     		ldr	r3, [r3, #4]
 2339 0212 5B00     		lsls	r3, r3, #1
 2340 0214 B2FBF3F5 		udiv	r5, r2, r3
 2341 0218 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2342 021c 0246     		mov	r2, r0
 2343 021e 1346     		mov	r3, r2
 2344 0220 9B00     		lsls	r3, r3, #2
 2345 0222 1344     		add	r3, r3, r2
 2346 0224 9A00     		lsls	r2, r3, #2
 2347 0226 1A44     		add	r2, r2, r3
 2348 0228 7B68     		ldr	r3, [r7, #4]
 2349 022a 5B68     		ldr	r3, [r3, #4]
 2350 022c 5B00     		lsls	r3, r3, #1
 2351 022e B2FBF3F3 		udiv	r3, r2, r3
 2352 0232 474A     		ldr	r2, .L147+8
 2353 0234 A2FB0323 		umull	r2, r3, r2, r3
 2354 0238 5B09     		lsrs	r3, r3, #5
 2355 023a 6422     		movs	r2, #100
 2356 023c 02FB03F3 		mul	r3, r2, r3
 2357 0240 EB1A     		subs	r3, r5, r3
 2358 0242 DB00     		lsls	r3, r3, #3
 2359 0244 3233     		adds	r3, r3, #50
 2360 0246 424A     		ldr	r2, .L147+8
 2361 0248 A2FB0323 		umull	r2, r3, r2, r3
 2362 024c 5B09     		lsrs	r3, r3, #5
 2363 024e 03F00702 		and	r2, r3, #7
 2364              		.loc 1 847 12
 2365 0252 7B68     		ldr	r3, [r7, #4]
 2366 0254 1B68     		ldr	r3, [r3]
 2367              		.loc 1 847 30
 2368 0256 2244     		add	r2, r2, r4
 2369              		.loc 1 847 28
 2370 0258 9A60     		str	r2, [r3, #8]
 848:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 849:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 850:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
 851:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 852:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
 853:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #if defined(USART6)
 854:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 855:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 856:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 857:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 858:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #else
 859:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(huart->Instance == USART1)
 860:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 861:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 862:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 863:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** #endif /* USART6 */
 864:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 865:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 866:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 867:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 868:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 869:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2371              		.loc 1 869 1
 2372 025a E7E0     		b	.L146
 2373              	.L139:
 854:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2374              		.loc 1 854 14
 2375 025c 7B68     		ldr	r3, [r7, #4]
 2376 025e 1B68     		ldr	r3, [r3]
 854:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2377              		.loc 1 854 7
 2378 0260 394A     		ldr	r2, .L147
 2379 0262 9342     		cmp	r3, r2
 2380 0264 04D0     		beq	.L144
 854:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2381              		.loc 1 854 45 discriminator 1
 2382 0266 7B68     		ldr	r3, [r7, #4]
 2383 0268 1B68     		ldr	r3, [r3]
 854:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2384              		.loc 1 854 36 discriminator 1
 2385 026a 384A     		ldr	r2, .L147+4
 2386 026c 9342     		cmp	r3, r2
 2387 026e 71D1     		bne	.L145
 2388              	.L144:
 856:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2389              		.loc 1 856 30
 2390 0270 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2391 0274 0246     		mov	r2, r0
 2392 0276 1346     		mov	r3, r2
 2393 0278 9B00     		lsls	r3, r3, #2
 2394 027a 1344     		add	r3, r3, r2
 2395 027c 9A00     		lsls	r2, r3, #2
 2396 027e 1A44     		add	r2, r2, r3
 2397 0280 7B68     		ldr	r3, [r7, #4]
 2398 0282 5B68     		ldr	r3, [r3, #4]
 2399 0284 9B00     		lsls	r3, r3, #2
 2400 0286 B2FBF3F3 		udiv	r3, r2, r3
 2401 028a 314A     		ldr	r2, .L147+8
 2402 028c A2FB0323 		umull	r2, r3, r2, r3
 2403 0290 5B09     		lsrs	r3, r3, #5
 2404 0292 1C01     		lsls	r4, r3, #4
 2405 0294 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2406 0298 0246     		mov	r2, r0
 2407 029a 1346     		mov	r3, r2
 2408 029c 9B00     		lsls	r3, r3, #2
 2409 029e 1344     		add	r3, r3, r2
 2410 02a0 9A00     		lsls	r2, r3, #2
 2411 02a2 1A44     		add	r2, r2, r3
 2412 02a4 7B68     		ldr	r3, [r7, #4]
 2413 02a6 5B68     		ldr	r3, [r3, #4]
 2414 02a8 9B00     		lsls	r3, r3, #2
 2415 02aa B2FBF3F5 		udiv	r5, r2, r3
 2416 02ae FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2417 02b2 0246     		mov	r2, r0
 2418 02b4 1346     		mov	r3, r2
 2419 02b6 9B00     		lsls	r3, r3, #2
 2420 02b8 1344     		add	r3, r3, r2
 2421 02ba 9A00     		lsls	r2, r3, #2
 2422 02bc 1A44     		add	r2, r2, r3
 2423 02be 7B68     		ldr	r3, [r7, #4]
 2424 02c0 5B68     		ldr	r3, [r3, #4]
 2425 02c2 9B00     		lsls	r3, r3, #2
 2426 02c4 B2FBF3F3 		udiv	r3, r2, r3
 2427 02c8 214A     		ldr	r2, .L147+8
 2428 02ca A2FB0323 		umull	r2, r3, r2, r3
 2429 02ce 5B09     		lsrs	r3, r3, #5
 2430 02d0 6422     		movs	r2, #100
 2431 02d2 02FB03F3 		mul	r3, r2, r3
 2432 02d6 EB1A     		subs	r3, r5, r3
 2433 02d8 1B01     		lsls	r3, r3, #4
 2434 02da 3233     		adds	r3, r3, #50
 2435 02dc 1C4A     		ldr	r2, .L147+8
 2436 02de A2FB0323 		umull	r2, r3, r2, r3
 2437 02e2 5B09     		lsrs	r3, r3, #5
 2438 02e4 03F0F003 		and	r3, r3, #240
 2439 02e8 1C44     		add	r4, r4, r3
 2440 02ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2441 02ee 0246     		mov	r2, r0
 2442 02f0 1346     		mov	r3, r2
 2443 02f2 9B00     		lsls	r3, r3, #2
 2444 02f4 1344     		add	r3, r3, r2
 2445 02f6 9A00     		lsls	r2, r3, #2
 2446 02f8 1A44     		add	r2, r2, r3
 2447 02fa 7B68     		ldr	r3, [r7, #4]
 2448 02fc 5B68     		ldr	r3, [r3, #4]
 2449 02fe 9B00     		lsls	r3, r3, #2
 2450 0300 B2FBF3F5 		udiv	r5, r2, r3
 2451 0304 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2452 0308 0246     		mov	r2, r0
 2453 030a 1346     		mov	r3, r2
 2454 030c 9B00     		lsls	r3, r3, #2
 2455 030e 1344     		add	r3, r3, r2
 2456 0310 9A00     		lsls	r2, r3, #2
 2457 0312 1A44     		add	r2, r2, r3
 2458 0314 7B68     		ldr	r3, [r7, #4]
 2459 0316 5B68     		ldr	r3, [r3, #4]
 2460 0318 9B00     		lsls	r3, r3, #2
 2461 031a B2FBF3F3 		udiv	r3, r2, r3
 2462 031e 0C4A     		ldr	r2, .L147+8
 2463 0320 A2FB0323 		umull	r2, r3, r2, r3
 2464 0324 5B09     		lsrs	r3, r3, #5
 2465 0326 6422     		movs	r2, #100
 2466 0328 02FB03F3 		mul	r3, r2, r3
 2467 032c EB1A     		subs	r3, r5, r3
 2468 032e 1B01     		lsls	r3, r3, #4
 2469 0330 3233     		adds	r3, r3, #50
 2470 0332 074A     		ldr	r2, .L147+8
 2471 0334 A2FB0323 		umull	r2, r3, r2, r3
 2472 0338 5B09     		lsrs	r3, r3, #5
 2473 033a 03F00F02 		and	r2, r3, #15
 856:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2474              		.loc 1 856 12
 2475 033e 7B68     		ldr	r3, [r7, #4]
 2476 0340 1B68     		ldr	r3, [r3]
 856:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2477              		.loc 1 856 30
 2478 0342 2244     		add	r2, r2, r4
 856:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2479              		.loc 1 856 28
 2480 0344 9A60     		str	r2, [r3, #8]
 2481 0346 71E0     		b	.L143
 2482              	.L148:
 2483              		.align	2
 2484              	.L147:
 2485 0348 00100140 		.word	1073811456
 2486 034c 00140140 		.word	1073812480
 2487 0350 1F85EB51 		.word	1374389535
 2488              	.L145:
 866:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2489              		.loc 1 866 30
 2490 0354 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2491 0358 0246     		mov	r2, r0
 2492 035a 1346     		mov	r3, r2
 2493 035c 9B00     		lsls	r3, r3, #2
 2494 035e 1344     		add	r3, r3, r2
 2495 0360 9A00     		lsls	r2, r3, #2
 2496 0362 1A44     		add	r2, r2, r3
 2497 0364 7B68     		ldr	r3, [r7, #4]
 2498 0366 5B68     		ldr	r3, [r3, #4]
 2499 0368 9B00     		lsls	r3, r3, #2
 2500 036a B2FBF3F3 		udiv	r3, r2, r3
 2501 036e 314A     		ldr	r2, .L149
 2502 0370 A2FB0323 		umull	r2, r3, r2, r3
 2503 0374 5B09     		lsrs	r3, r3, #5
 2504 0376 1C01     		lsls	r4, r3, #4
 2505 0378 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2506 037c 0246     		mov	r2, r0
 2507 037e 1346     		mov	r3, r2
 2508 0380 9B00     		lsls	r3, r3, #2
 2509 0382 1344     		add	r3, r3, r2
 2510 0384 9A00     		lsls	r2, r3, #2
 2511 0386 1A44     		add	r2, r2, r3
 2512 0388 7B68     		ldr	r3, [r7, #4]
 2513 038a 5B68     		ldr	r3, [r3, #4]
 2514 038c 9B00     		lsls	r3, r3, #2
 2515 038e B2FBF3F5 		udiv	r5, r2, r3
 2516 0392 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2517 0396 0246     		mov	r2, r0
 2518 0398 1346     		mov	r3, r2
 2519 039a 9B00     		lsls	r3, r3, #2
 2520 039c 1344     		add	r3, r3, r2
 2521 039e 9A00     		lsls	r2, r3, #2
 2522 03a0 1A44     		add	r2, r2, r3
 2523 03a2 7B68     		ldr	r3, [r7, #4]
 2524 03a4 5B68     		ldr	r3, [r3, #4]
 2525 03a6 9B00     		lsls	r3, r3, #2
 2526 03a8 B2FBF3F3 		udiv	r3, r2, r3
 2527 03ac 214A     		ldr	r2, .L149
 2528 03ae A2FB0323 		umull	r2, r3, r2, r3
 2529 03b2 5B09     		lsrs	r3, r3, #5
 2530 03b4 6422     		movs	r2, #100
 2531 03b6 02FB03F3 		mul	r3, r2, r3
 2532 03ba EB1A     		subs	r3, r5, r3
 2533 03bc 1B01     		lsls	r3, r3, #4
 2534 03be 3233     		adds	r3, r3, #50
 2535 03c0 1C4A     		ldr	r2, .L149
 2536 03c2 A2FB0323 		umull	r2, r3, r2, r3
 2537 03c6 5B09     		lsrs	r3, r3, #5
 2538 03c8 03F0F003 		and	r3, r3, #240
 2539 03cc 1C44     		add	r4, r4, r3
 2540 03ce FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2541 03d2 0246     		mov	r2, r0
 2542 03d4 1346     		mov	r3, r2
 2543 03d6 9B00     		lsls	r3, r3, #2
 2544 03d8 1344     		add	r3, r3, r2
 2545 03da 9A00     		lsls	r2, r3, #2
 2546 03dc 1A44     		add	r2, r2, r3
 2547 03de 7B68     		ldr	r3, [r7, #4]
 2548 03e0 5B68     		ldr	r3, [r3, #4]
 2549 03e2 9B00     		lsls	r3, r3, #2
 2550 03e4 B2FBF3F5 		udiv	r5, r2, r3
 2551 03e8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2552 03ec 0246     		mov	r2, r0
 2553 03ee 1346     		mov	r3, r2
 2554 03f0 9B00     		lsls	r3, r3, #2
 2555 03f2 1344     		add	r3, r3, r2
 2556 03f4 9A00     		lsls	r2, r3, #2
 2557 03f6 1A44     		add	r2, r2, r3
 2558 03f8 7B68     		ldr	r3, [r7, #4]
 2559 03fa 5B68     		ldr	r3, [r3, #4]
 2560 03fc 9B00     		lsls	r3, r3, #2
 2561 03fe B2FBF3F3 		udiv	r3, r2, r3
 2562 0402 0C4A     		ldr	r2, .L149
 2563 0404 A2FB0323 		umull	r2, r3, r2, r3
 2564 0408 5B09     		lsrs	r3, r3, #5
 2565 040a 6422     		movs	r2, #100
 2566 040c 02FB03F3 		mul	r3, r2, r3
 2567 0410 EB1A     		subs	r3, r5, r3
 2568 0412 1B01     		lsls	r3, r3, #4
 2569 0414 3233     		adds	r3, r3, #50
 2570 0416 074A     		ldr	r2, .L149
 2571 0418 A2FB0323 		umull	r2, r3, r2, r3
 2572 041c 5B09     		lsrs	r3, r3, #5
 2573 041e 03F00F02 		and	r2, r3, #15
 866:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2574              		.loc 1 866 12
 2575 0422 7B68     		ldr	r3, [r7, #4]
 2576 0424 1B68     		ldr	r3, [r3]
 866:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2577              		.loc 1 866 30
 2578 0426 2244     		add	r2, r2, r4
 866:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2579              		.loc 1 866 28
 2580 0428 9A60     		str	r2, [r3, #8]
 2581              		.loc 1 869 1
 2582 042a FFE7     		b	.L146
 2583              	.L143:
 2584              	.L146:
 2585 042c 00BF     		nop
 2586 042e 1037     		adds	r7, r7, #16
 2587              	.LCFI43:
 2588              		.cfi_def_cfa_offset 16
 2589 0430 BD46     		mov	sp, r7
 2590              	.LCFI44:
 2591              		.cfi_def_cfa_register 13
 2592              		@ sp needed
 2593 0432 B0BD     		pop	{r4, r5, r7, pc}
 2594              	.L150:
 2595              		.align	2
 2596              	.L149:
 2597 0434 1F85EB51 		.word	1374389535
 2598              		.cfi_endproc
 2599              	.LFE134:
 2601              		.section	.text.HAL_UART_Init,"ax",%progbits
 2602              		.align	1
 2603              		.global	HAL_UART_Init
 2604              		.syntax unified
 2605              		.thumb
 2606              		.thumb_func
 2607              		.fpu softvfp
 2609              	HAL_UART_Init:
 2610              	.LFB135:
 870:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 871:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 872:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 873:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the UART_InitTypeDef and create the associated handle.
 874:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 875:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
 876:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
 877:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 878:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 879:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 2611              		.loc 1 879 1
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 8
 2614              		@ frame_needed = 1, uses_anonymous_args = 0
 2615 0000 80B5     		push	{r7, lr}
 2616              	.LCFI45:
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 7, -8
 2619              		.cfi_offset 14, -4
 2620 0002 82B0     		sub	sp, sp, #8
 2621              	.LCFI46:
 2622              		.cfi_def_cfa_offset 16
 2623 0004 00AF     		add	r7, sp, #0
 2624              	.LCFI47:
 2625              		.cfi_def_cfa_register 7
 2626 0006 7860     		str	r0, [r7, #4]
 880:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the UART handle allocation */
 881:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart == NULL)
 2627              		.loc 1 881 5
 2628 0008 7B68     		ldr	r3, [r7, #4]
 2629 000a 002B     		cmp	r3, #0
 2630 000c 01D1     		bne	.L152
 882:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 883:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_ERROR;
 2631              		.loc 1 883 12
 2632 000e 0123     		movs	r3, #1
 2633 0010 3CE0     		b	.L153
 2634              	.L152:
 884:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 885:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 886:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 887:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 888:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 889:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 890:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 891:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 892:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 893:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
 894:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 895:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 896:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 897:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 898:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 899:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 900:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 2635              		.loc 1 900 11
 2636 0012 7B68     		ldr	r3, [r7, #4]
 2637 0014 93F83930 		ldrb	r3, [r3, #57]
 2638 0018 DBB2     		uxtb	r3, r3
 2639              		.loc 1 900 5
 2640 001a 002B     		cmp	r3, #0
 2641 001c 03D1     		bne	.L154
 901:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 902:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
 903:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
 2642              		.loc 1 903 17
 2643 001e 7B68     		ldr	r3, [r7, #4]
 2644 0020 0022     		movs	r2, #0
 2645 0022 83F83820 		strb	r2, [r3, #56]
 2646              	.L154:
 904:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init the low level hardware */
 905:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
 906:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 907:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 908:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2647              		.loc 1 908 17
 2648 0026 7B68     		ldr	r3, [r7, #4]
 2649 0028 2422     		movs	r2, #36
 2650 002a 83F83920 		strb	r2, [r3, #57]
 909:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 910:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Disable the peripheral */
 911:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
 2651              		.loc 1 911 3
 2652 002e 7B68     		ldr	r3, [r7, #4]
 2653 0030 1B68     		ldr	r3, [r3]
 2654 0032 DA68     		ldr	r2, [r3, #12]
 2655 0034 7B68     		ldr	r3, [r7, #4]
 2656 0036 1B68     		ldr	r3, [r3]
 2657 0038 22F40052 		bic	r2, r2, #8192
 2658 003c DA60     		str	r2, [r3, #12]
 912:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 913:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the UART Communication parameters */
 914:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   UART_SetConfig(huart);
 2659              		.loc 1 914 3
 2660 003e 7868     		ldr	r0, [r7, #4]
 2661 0040 FFF7FEFF 		bl	UART_SetConfig
 915:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 916:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 917:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 918:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 919:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 2662              		.loc 1 919 3
 2663 0044 7B68     		ldr	r3, [r7, #4]
 2664 0046 1B68     		ldr	r3, [r3]
 2665 0048 1A69     		ldr	r2, [r3, #16]
 2666 004a 7B68     		ldr	r3, [r7, #4]
 2667 004c 1B68     		ldr	r3, [r3]
 2668 004e 22F49042 		bic	r2, r2, #18432
 2669 0052 1A61     		str	r2, [r3, #16]
 920:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 2670              		.loc 1 920 3
 2671 0054 7B68     		ldr	r3, [r7, #4]
 2672 0056 1B68     		ldr	r3, [r3]
 2673 0058 5A69     		ldr	r2, [r3, #20]
 2674 005a 7B68     		ldr	r3, [r7, #4]
 2675 005c 1B68     		ldr	r3, [r3]
 2676 005e 22F02A02 		bic	r2, r2, #42
 2677 0062 5A61     		str	r2, [r3, #20]
 921:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 922:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Enable the peripheral */
 923:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
 2678              		.loc 1 923 3
 2679 0064 7B68     		ldr	r3, [r7, #4]
 2680 0066 1B68     		ldr	r3, [r3]
 2681 0068 DA68     		ldr	r2, [r3, #12]
 2682 006a 7B68     		ldr	r3, [r7, #4]
 2683 006c 1B68     		ldr	r3, [r3]
 2684 006e 42F40052 		orr	r2, r2, #8192
 2685 0072 DA60     		str	r2, [r3, #12]
 924:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 925:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Initialize the UART state */
 926:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2686              		.loc 1 926 20
 2687 0074 7B68     		ldr	r3, [r7, #4]
 2688 0076 0022     		movs	r2, #0
 2689 0078 DA63     		str	r2, [r3, #60]
 927:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->gState= HAL_UART_STATE_READY;
 2690              		.loc 1 927 16
 2691 007a 7B68     		ldr	r3, [r7, #4]
 2692 007c 2022     		movs	r2, #32
 2693 007e 83F83920 		strb	r2, [r3, #57]
 928:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->RxState= HAL_UART_STATE_READY;
 2694              		.loc 1 928 17
 2695 0082 7B68     		ldr	r3, [r7, #4]
 2696 0084 2022     		movs	r2, #32
 2697 0086 83F83A20 		strb	r2, [r3, #58]
 929:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 930:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2698              		.loc 1 930 10
 2699 008a 0023     		movs	r3, #0
 2700              	.L153:
 931:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2701              		.loc 1 931 1
 2702 008c 1846     		mov	r0, r3
 2703 008e 0837     		adds	r7, r7, #8
 2704              	.LCFI48:
 2705              		.cfi_def_cfa_offset 8
 2706 0090 BD46     		mov	sp, r7
 2707              	.LCFI49:
 2708              		.cfi_def_cfa_register 13
 2709              		@ sp needed
 2710 0092 80BD     		pop	{r7, pc}
 2711              		.cfi_endproc
 2712              	.LFE135:
 2714              		.section	.text.UART_WaitOnFlagForever,"ax",%progbits
 2715              		.align	1
 2716              		.syntax unified
 2717              		.thumb
 2718              		.thumb_func
 2719              		.fpu softvfp
 2721              	UART_WaitOnFlagForever:
 2722              	.LFB136:
 932:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 933:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** static HAL_StatusTypeDef UART_WaitOnFlagForever(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatu
 934:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 2723              		.loc 1 934 1
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 16
 2726              		@ frame_needed = 1, uses_anonymous_args = 0
 2727              		@ link register save eliminated.
 2728 0000 80B4     		push	{r7}
 2729              	.LCFI50:
 2730              		.cfi_def_cfa_offset 4
 2731              		.cfi_offset 7, -4
 2732 0002 85B0     		sub	sp, sp, #20
 2733              	.LCFI51:
 2734              		.cfi_def_cfa_offset 24
 2735 0004 00AF     		add	r7, sp, #0
 2736              	.LCFI52:
 2737              		.cfi_def_cfa_register 7
 2738 0006 F860     		str	r0, [r7, #12]
 2739 0008 B960     		str	r1, [r7, #8]
 2740 000a 1346     		mov	r3, r2
 2741 000c FB71     		strb	r3, [r7, #7]
 935:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Wait until flag is set */
 936:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status);
 2742              		.loc 1 936 8
 2743 000e 00BF     		nop
 2744              	.L156:
 2745              		.loc 1 936 10 discriminator 1
 2746 0010 FB68     		ldr	r3, [r7, #12]
 2747 0012 1B68     		ldr	r3, [r3]
 2748 0014 1A68     		ldr	r2, [r3]
 2749 0016 BB68     		ldr	r3, [r7, #8]
 2750 0018 1340     		ands	r3, r3, r2
 2751              		.loc 1 936 49 discriminator 1
 2752 001a BA68     		ldr	r2, [r7, #8]
 2753 001c 9A42     		cmp	r2, r3
 2754 001e 0CBF     		ite	eq
 2755 0020 0123     		moveq	r3, #1
 2756 0022 0023     		movne	r3, #0
 2757 0024 DBB2     		uxtb	r3, r3
 2758 0026 1A46     		mov	r2, r3
 2759              		.loc 1 936 58 discriminator 1
 2760 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2761              		.loc 1 936 8 discriminator 1
 2762 002a 9A42     		cmp	r2, r3
 2763 002c F0D0     		beq	.L156
 937:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2764              		.loc 1 937 10
 2765 002e 0023     		movs	r3, #0
 938:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2766              		.loc 1 938 1
 2767 0030 1846     		mov	r0, r3
 2768 0032 1437     		adds	r7, r7, #20
 2769              	.LCFI53:
 2770              		.cfi_def_cfa_offset 4
 2771 0034 BD46     		mov	sp, r7
 2772              	.LCFI54:
 2773              		.cfi_def_cfa_register 13
 2774              		@ sp needed
 2775 0036 80BC     		pop	{r7}
 2776              	.LCFI55:
 2777              		.cfi_restore 7
 2778              		.cfi_def_cfa_offset 0
 2779 0038 7047     		bx	lr
 2780              		.cfi_endproc
 2781              	.LFE136:
 2783              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2784              		.align	1
 2785              		.global	HAL_UART_Transmit
 2786              		.syntax unified
 2787              		.thumb
 2788              		.thumb_func
 2789              		.fpu softvfp
 2791              	HAL_UART_Transmit:
 2792              	.LFB137:
 939:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 940:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 941:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Sends an amount of data in blocking mode.
 942:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 943:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
 944:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pData: Pointer to data buffer
 945:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Size: Amount of data to be sent
 946:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout: Timeout duration
 947:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
 948:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 949:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 950:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 2793              		.loc 1 950 1
 2794              		.cfi_startproc
 2795              		@ args = 0, pretend = 0, frame = 24
 2796              		@ frame_needed = 1, uses_anonymous_args = 0
 2797 0000 80B5     		push	{r7, lr}
 2798              	.LCFI56:
 2799              		.cfi_def_cfa_offset 8
 2800              		.cfi_offset 7, -8
 2801              		.cfi_offset 14, -4
 2802 0002 86B0     		sub	sp, sp, #24
 2803              	.LCFI57:
 2804              		.cfi_def_cfa_offset 32
 2805 0004 00AF     		add	r7, sp, #0
 2806              	.LCFI58:
 2807              		.cfi_def_cfa_register 7
 2808 0006 F860     		str	r0, [r7, #12]
 2809 0008 B960     		str	r1, [r7, #8]
 2810 000a 3B60     		str	r3, [r7]
 2811 000c 1346     		mov	r3, r2	@ movhi
 2812 000e FB80     		strh	r3, [r7, #6]	@ movhi
 951:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
 952:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tickstart = 0U;
 953:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 954:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
 955:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 2813              		.loc 1 955 11
 2814 0010 FB68     		ldr	r3, [r7, #12]
 2815 0012 93F83930 		ldrb	r3, [r3, #57]
 2816 0016 DBB2     		uxtb	r3, r3
 2817              		.loc 1 955 5
 2818 0018 202B     		cmp	r3, #32
 2819 001a 76D1     		bne	.L159
 956:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 957:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0))
 2820              		.loc 1 957 7
 2821 001c BB68     		ldr	r3, [r7, #8]
 2822 001e 002B     		cmp	r3, #0
 2823 0020 02D0     		beq	.L160
 2824              		.loc 1 957 25 discriminator 1
 2825 0022 FB88     		ldrh	r3, [r7, #6]
 2826 0024 002B     		cmp	r3, #0
 2827 0026 01D1     		bne	.L161
 2828              	.L160:
 958:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 959:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return  HAL_ERROR;
 2829              		.loc 1 959 15
 2830 0028 0123     		movs	r3, #1
 2831 002a 6FE0     		b	.L162
 2832              	.L161:
 960:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 961:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 962:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Locked */
 963:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_LOCK(huart);
 2833              		.loc 1 963 5
 2834 002c FB68     		ldr	r3, [r7, #12]
 2835 002e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2836 0032 012B     		cmp	r3, #1
 2837 0034 01D1     		bne	.L163
 2838              		.loc 1 963 5 is_stmt 0 discriminator 1
 2839 0036 0223     		movs	r3, #2
 2840 0038 68E0     		b	.L162
 2841              	.L163:
 2842              		.loc 1 963 5 discriminator 2
 2843 003a FB68     		ldr	r3, [r7, #12]
 2844 003c 0122     		movs	r2, #1
 2845 003e 83F83820 		strb	r2, [r3, #56]
 964:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 965:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2846              		.loc 1 965 22 is_stmt 1 discriminator 2
 2847 0042 FB68     		ldr	r3, [r7, #12]
 2848 0044 0022     		movs	r2, #0
 2849 0046 DA63     		str	r2, [r3, #60]
 966:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2850              		.loc 1 966 19 discriminator 2
 2851 0048 FB68     		ldr	r3, [r7, #12]
 2852 004a 2122     		movs	r2, #33
 2853 004c 83F83920 		strb	r2, [r3, #57]
 967:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 968:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init tickstart for timeout managment */
 969:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tickstart = HAL_GetTick();
 970:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 971:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->TxXferSize = Size;
 2854              		.loc 1 971 23 discriminator 2
 2855 0050 FB68     		ldr	r3, [r7, #12]
 2856 0052 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2857 0054 9A84     		strh	r2, [r3, #36]	@ movhi
 972:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->TxXferCount = Size;
 2858              		.loc 1 972 24 discriminator 2
 2859 0056 FB68     		ldr	r3, [r7, #12]
 2860 0058 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2861 005a DA84     		strh	r2, [r3, #38]	@ movhi
 973:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(huart->TxXferCount > 0U)
 2862              		.loc 1 973 10 discriminator 2
 2863 005c 3CE0     		b	.L164
 2864              	.L169:
 974:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 975:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->TxXferCount--;
 2865              		.loc 1 975 12
 2866 005e FB68     		ldr	r3, [r7, #12]
 2867 0060 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 2868 0062 9BB2     		uxth	r3, r3
 2869              		.loc 1 975 25
 2870 0064 013B     		subs	r3, r3, #1
 2871 0066 9AB2     		uxth	r2, r3
 2872 0068 FB68     		ldr	r3, [r7, #12]
 2873 006a DA84     		strh	r2, [r3, #38]	@ movhi
 976:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2874              		.loc 1 976 21
 2875 006c FB68     		ldr	r3, [r7, #12]
 2876 006e 9B68     		ldr	r3, [r3, #8]
 2877              		.loc 1 976 9
 2878 0070 B3F5805F 		cmp	r3, #4096
 2879 0074 1FD1     		bne	.L165
 977:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 978:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_TXE, RESET) != HAL_OK)
 2880              		.loc 1 978 12
 2881 0076 0022     		movs	r2, #0
 2882 0078 8021     		movs	r1, #128
 2883 007a F868     		ldr	r0, [r7, #12]
 2884 007c FFF7FEFF 		bl	UART_WaitOnFlagForever
 2885 0080 0346     		mov	r3, r0
 2886              		.loc 1 978 11
 2887 0082 002B     		cmp	r3, #0
 2888 0084 01D0     		beq	.L166
 979:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 980:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 2889              		.loc 1 980 18
 2890 0086 0323     		movs	r3, #3
 2891 0088 40E0     		b	.L162
 2892              	.L166:
 981:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 982:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
 2893              		.loc 1 982 13
 2894 008a BB68     		ldr	r3, [r7, #8]
 2895 008c 7B61     		str	r3, [r7, #20]
 983:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 2896              		.loc 1 983 32
 2897 008e 7B69     		ldr	r3, [r7, #20]
 2898 0090 1B88     		ldrh	r3, [r3]
 2899              		.loc 1 983 37
 2900 0092 1A46     		mov	r2, r3
 2901              		.loc 1 983 14
 2902 0094 FB68     		ldr	r3, [r7, #12]
 2903 0096 1B68     		ldr	r3, [r3]
 2904              		.loc 1 983 37
 2905 0098 C2F30802 		ubfx	r2, r2, #0, #9
 2906              		.loc 1 983 29
 2907 009c 5A60     		str	r2, [r3, #4]
 984:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 2908              		.loc 1 984 23
 2909 009e FB68     		ldr	r3, [r7, #12]
 2910 00a0 1B69     		ldr	r3, [r3, #16]
 2911              		.loc 1 984 11
 2912 00a2 002B     		cmp	r3, #0
 2913 00a4 03D1     		bne	.L167
 985:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 986:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 2914              		.loc 1 986 17
 2915 00a6 BB68     		ldr	r3, [r7, #8]
 2916 00a8 0233     		adds	r3, r3, #2
 2917 00aa BB60     		str	r3, [r7, #8]
 2918 00ac 14E0     		b	.L164
 2919              	.L167:
 987:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 988:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         else
 989:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 990:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 2920              		.loc 1 990 17
 2921 00ae BB68     		ldr	r3, [r7, #8]
 2922 00b0 0133     		adds	r3, r3, #1
 2923 00b2 BB60     		str	r3, [r7, #8]
 2924 00b4 10E0     		b	.L164
 2925              	.L165:
 991:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 992:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 993:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 994:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 995:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_TXE, RESET) != HAL_OK)
 2926              		.loc 1 995 12
 2927 00b6 0022     		movs	r2, #0
 2928 00b8 8021     		movs	r1, #128
 2929 00ba F868     		ldr	r0, [r7, #12]
 2930 00bc FFF7FEFF 		bl	UART_WaitOnFlagForever
 2931 00c0 0346     		mov	r3, r0
 2932              		.loc 1 995 11
 2933 00c2 002B     		cmp	r3, #0
 2934 00c4 01D0     		beq	.L168
 996:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 997:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 2935              		.loc 1 997 18
 2936 00c6 0323     		movs	r3, #3
 2937 00c8 20E0     		b	.L162
 2938              	.L168:
 998:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 999:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 2939              		.loc 1 999 38
 2940 00ca BB68     		ldr	r3, [r7, #8]
 2941 00cc 5A1C     		adds	r2, r3, #1
 2942 00ce BA60     		str	r2, [r7, #8]
 2943              		.loc 1 999 32
 2944 00d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2945              		.loc 1 999 14
 2946 00d2 FB68     		ldr	r3, [r7, #12]
 2947 00d4 1B68     		ldr	r3, [r3]
 2948              		.loc 1 999 29
 2949 00d6 5A60     		str	r2, [r3, #4]
 2950              	.L164:
 973:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2951              		.loc 1 973 16
 2952 00d8 FB68     		ldr	r3, [r7, #12]
 2953 00da DB8C     		ldrh	r3, [r3, #38]	@ movhi
 2954 00dc 9BB2     		uxth	r3, r3
 973:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2955              		.loc 1 973 10
 2956 00de 002B     		cmp	r3, #0
 2957 00e0 BDD1     		bne	.L169
1000:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1001:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1002:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1003:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(UART_WaitOnFlagForever(huart, UART_FLAG_TC, RESET) != HAL_OK)
 2958              		.loc 1 1003 8
 2959 00e2 0022     		movs	r2, #0
 2960 00e4 4021     		movs	r1, #64
 2961 00e6 F868     		ldr	r0, [r7, #12]
 2962 00e8 FFF7FEFF 		bl	UART_WaitOnFlagForever
 2963 00ec 0346     		mov	r3, r0
 2964              		.loc 1 1003 7
 2965 00ee 002B     		cmp	r3, #0
 2966 00f0 01D0     		beq	.L170
1004:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1005:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_TIMEOUT;
 2967              		.loc 1 1005 14
 2968 00f2 0323     		movs	r3, #3
 2969 00f4 0AE0     		b	.L162
 2970              	.L170:
1006:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1007:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1008:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1009:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->gState = HAL_UART_STATE_READY;
 2971              		.loc 1 1009 21
 2972 00f6 FB68     		ldr	r3, [r7, #12]
 2973 00f8 2022     		movs	r2, #32
 2974 00fa 83F83920 		strb	r2, [r3, #57]
1010:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1011:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Unlocked */
1012:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 2975              		.loc 1 1012 5
 2976 00fe FB68     		ldr	r3, [r7, #12]
 2977 0100 0022     		movs	r2, #0
 2978 0102 83F83820 		strb	r2, [r3, #56]
1013:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1014:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_OK;
 2979              		.loc 1 1014 12
 2980 0106 0023     		movs	r3, #0
 2981 0108 00E0     		b	.L162
 2982              	.L159:
1015:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1016:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
1017:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1018:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_BUSY;
 2983              		.loc 1 1018 12
 2984 010a 0223     		movs	r3, #2
 2985              	.L162:
1019:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1020:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2986              		.loc 1 1020 1
 2987 010c 1846     		mov	r0, r3
 2988 010e 1837     		adds	r7, r7, #24
 2989              	.LCFI59:
 2990              		.cfi_def_cfa_offset 8
 2991 0110 BD46     		mov	sp, r7
 2992              	.LCFI60:
 2993              		.cfi_def_cfa_register 13
 2994              		@ sp needed
 2995 0112 80BD     		pop	{r7, pc}
 2996              		.cfi_endproc
 2997              	.LFE137:
 2999              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3000              		.align	1
 3001              		.global	HAL_UART_Receive
 3002              		.syntax unified
 3003              		.thumb
 3004              		.thumb_func
 3005              		.fpu softvfp
 3007              	HAL_UART_Receive:
 3008              	.LFB138:
1021:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1022:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1023:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1024:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1025:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Receives an amount of data in blocking mode.
1026:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1027:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
1028:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pData: Pointer to data buffer
1029:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Size: Amount of data to be received
1030:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout: Timeout duration
1031:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
1032:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1033:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1034:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 3009              		.loc 1 1034 1
 3010              		.cfi_startproc
 3011              		@ args = 0, pretend = 0, frame = 24
 3012              		@ frame_needed = 1, uses_anonymous_args = 0
 3013 0000 80B5     		push	{r7, lr}
 3014              	.LCFI61:
 3015              		.cfi_def_cfa_offset 8
 3016              		.cfi_offset 7, -8
 3017              		.cfi_offset 14, -4
 3018 0002 86B0     		sub	sp, sp, #24
 3019              	.LCFI62:
 3020              		.cfi_def_cfa_offset 32
 3021 0004 00AF     		add	r7, sp, #0
 3022              	.LCFI63:
 3023              		.cfi_def_cfa_register 7
 3024 0006 F860     		str	r0, [r7, #12]
 3025 0008 B960     		str	r1, [r7, #8]
 3026 000a 3B60     		str	r3, [r7]
 3027 000c 1346     		mov	r3, r2	@ movhi
 3028 000e FB80     		strh	r3, [r7, #6]	@ movhi
1035:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
1036:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tickstart = 0U;
1037:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1038:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1039:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 3029              		.loc 1 1039 11
 3030 0010 FB68     		ldr	r3, [r7, #12]
 3031 0012 93F83A30 		ldrb	r3, [r3, #58]
 3032 0016 DBB2     		uxtb	r3, r3
 3033              		.loc 1 1039 5
 3034 0018 202B     		cmp	r3, #32
 3035 001a 40F08780 		bne	.L172
1040:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1041:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0))
 3036              		.loc 1 1041 7
 3037 001e BB68     		ldr	r3, [r7, #8]
 3038 0020 002B     		cmp	r3, #0
 3039 0022 02D0     		beq	.L173
 3040              		.loc 1 1041 25 discriminator 1
 3041 0024 FB88     		ldrh	r3, [r7, #6]
 3042 0026 002B     		cmp	r3, #0
 3043 0028 01D1     		bne	.L174
 3044              	.L173:
1042:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1043:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return  HAL_ERROR;
 3045              		.loc 1 1043 15
 3046 002a 0123     		movs	r3, #1
 3047 002c 7FE0     		b	.L175
 3048              	.L174:
1044:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1045:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1046:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Locked */
1047:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3049              		.loc 1 1047 5
 3050 002e FB68     		ldr	r3, [r7, #12]
 3051 0030 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3052 0034 012B     		cmp	r3, #1
 3053 0036 01D1     		bne	.L176
 3054              		.loc 1 1047 5 is_stmt 0 discriminator 1
 3055 0038 0223     		movs	r3, #2
 3056 003a 78E0     		b	.L175
 3057              	.L176:
 3058              		.loc 1 1047 5 discriminator 2
 3059 003c FB68     		ldr	r3, [r7, #12]
 3060 003e 0122     		movs	r2, #1
 3061 0040 83F83820 		strb	r2, [r3, #56]
1048:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1049:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3062              		.loc 1 1049 22 is_stmt 1 discriminator 2
 3063 0044 FB68     		ldr	r3, [r7, #12]
 3064 0046 0022     		movs	r2, #0
 3065 0048 DA63     		str	r2, [r3, #60]
1050:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3066              		.loc 1 1050 20 discriminator 2
 3067 004a FB68     		ldr	r3, [r7, #12]
 3068 004c 2222     		movs	r2, #34
 3069 004e 83F83A20 		strb	r2, [r3, #58]
1051:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1052:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init tickstart for timeout managment */
1053:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tickstart = HAL_GetTick();
1054:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1055:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxXferSize = Size;
 3070              		.loc 1 1055 23 discriminator 2
 3071 0052 FB68     		ldr	r3, [r7, #12]
 3072 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3073 0056 9A85     		strh	r2, [r3, #44]	@ movhi
1056:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxXferCount = Size;
 3074              		.loc 1 1056 24 discriminator 2
 3075 0058 FB68     		ldr	r3, [r7, #12]
 3076 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 3077 005c DA85     		strh	r2, [r3, #46]	@ movhi
1057:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1058:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the remain data to be received */
1059:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
 3078              		.loc 1 1059 10 discriminator 2
 3079 005e 56E0     		b	.L177
 3080              	.L183:
1060:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1061:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->RxXferCount--;
 3081              		.loc 1 1061 12
 3082 0060 FB68     		ldr	r3, [r7, #12]
 3083 0062 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3084 0064 9BB2     		uxth	r3, r3
 3085              		.loc 1 1061 25
 3086 0066 013B     		subs	r3, r3, #1
 3087 0068 9AB2     		uxth	r2, r3
 3088 006a FB68     		ldr	r3, [r7, #12]
 3089 006c DA85     		strh	r2, [r3, #46]	@ movhi
1062:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3090              		.loc 1 1062 21
 3091 006e FB68     		ldr	r3, [r7, #12]
 3092 0070 9B68     		ldr	r3, [r3, #8]
 3093              		.loc 1 1062 9
 3094 0072 B3F5805F 		cmp	r3, #4096
 3095 0076 28D1     		bne	.L178
1063:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1064:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_RXNE, RESET) != HAL_OK)
 3096              		.loc 1 1064 12
 3097 0078 0022     		movs	r2, #0
 3098 007a 2021     		movs	r1, #32
 3099 007c F868     		ldr	r0, [r7, #12]
 3100 007e FFF7FEFF 		bl	UART_WaitOnFlagForever
 3101 0082 0346     		mov	r3, r0
 3102              		.loc 1 1064 11
 3103 0084 002B     		cmp	r3, #0
 3104 0086 01D0     		beq	.L179
1065:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1066:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 3105              		.loc 1 1066 18
 3106 0088 0323     		movs	r3, #3
 3107 008a 50E0     		b	.L175
 3108              	.L179:
1067:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1068:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
 3109              		.loc 1 1068 13
 3110 008c BB68     		ldr	r3, [r7, #8]
 3111 008e 7B61     		str	r3, [r7, #20]
1069:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 3112              		.loc 1 1069 23
 3113 0090 FB68     		ldr	r3, [r7, #12]
 3114 0092 1B69     		ldr	r3, [r3, #16]
 3115              		.loc 1 1069 11
 3116 0094 002B     		cmp	r3, #0
 3117 0096 0CD1     		bne	.L180
1070:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1071:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 3118              		.loc 1 1071 34
 3119 0098 FB68     		ldr	r3, [r7, #12]
 3120 009a 1B68     		ldr	r3, [r3]
 3121              		.loc 1 1071 44
 3122 009c 5B68     		ldr	r3, [r3, #4]
 3123              		.loc 1 1071 18
 3124 009e 9BB2     		uxth	r3, r3
 3125 00a0 C3F30803 		ubfx	r3, r3, #0, #9
 3126 00a4 9AB2     		uxth	r2, r3
 3127              		.loc 1 1071 16
 3128 00a6 7B69     		ldr	r3, [r7, #20]
 3129 00a8 1A80     		strh	r2, [r3]	@ movhi
1072:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 3130              		.loc 1 1072 17
 3131 00aa BB68     		ldr	r3, [r7, #8]
 3132 00ac 0233     		adds	r3, r3, #2
 3133 00ae BB60     		str	r3, [r7, #8]
 3134 00b0 2DE0     		b	.L177
 3135              	.L180:
1073:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1074:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         else
1075:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1076:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 3136              		.loc 1 1076 34
 3137 00b2 FB68     		ldr	r3, [r7, #12]
 3138 00b4 1B68     		ldr	r3, [r3]
 3139              		.loc 1 1076 44
 3140 00b6 5B68     		ldr	r3, [r3, #4]
 3141              		.loc 1 1076 18
 3142 00b8 9BB2     		uxth	r3, r3
 3143 00ba DBB2     		uxtb	r3, r3
 3144 00bc 9AB2     		uxth	r2, r3
 3145              		.loc 1 1076 16
 3146 00be 7B69     		ldr	r3, [r7, #20]
 3147 00c0 1A80     		strh	r2, [r3]	@ movhi
1077:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 3148              		.loc 1 1077 17
 3149 00c2 BB68     		ldr	r3, [r7, #8]
 3150 00c4 0133     		adds	r3, r3, #1
 3151 00c6 BB60     		str	r3, [r7, #8]
 3152 00c8 21E0     		b	.L177
 3153              	.L178:
1078:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1079:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1080:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1081:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
1082:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1083:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_RXNE, RESET) != HAL_OK)
 3154              		.loc 1 1083 12
 3155 00ca 0022     		movs	r2, #0
 3156 00cc 2021     		movs	r1, #32
 3157 00ce F868     		ldr	r0, [r7, #12]
 3158 00d0 FFF7FEFF 		bl	UART_WaitOnFlagForever
 3159 00d4 0346     		mov	r3, r0
 3160              		.loc 1 1083 11
 3161 00d6 002B     		cmp	r3, #0
 3162 00d8 01D0     		beq	.L181
1084:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1085:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 3163              		.loc 1 1085 18
 3164 00da 0323     		movs	r3, #3
 3165 00dc 27E0     		b	.L175
 3166              	.L181:
1086:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1087:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 3167              		.loc 1 1087 23
 3168 00de FB68     		ldr	r3, [r7, #12]
 3169 00e0 1B69     		ldr	r3, [r3, #16]
 3170              		.loc 1 1087 11
 3171 00e2 002B     		cmp	r3, #0
 3172 00e4 08D1     		bne	.L182
1088:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1089:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 3173              		.loc 1 1089 37
 3174 00e6 FB68     		ldr	r3, [r7, #12]
 3175 00e8 1B68     		ldr	r3, [r3]
 3176              		.loc 1 1089 47
 3177 00ea 5968     		ldr	r1, [r3, #4]
 3178              		.loc 1 1089 17
 3179 00ec BB68     		ldr	r3, [r7, #8]
 3180 00ee 5A1C     		adds	r2, r3, #1
 3181 00f0 BA60     		str	r2, [r7, #8]
 3182              		.loc 1 1089 22
 3183 00f2 CAB2     		uxtb	r2, r1
 3184              		.loc 1 1089 20
 3185 00f4 1A70     		strb	r2, [r3]
 3186 00f6 0AE0     		b	.L177
 3187              	.L182:
1090:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1091:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         else
1092:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1093:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 3188              		.loc 1 1093 37
 3189 00f8 FB68     		ldr	r3, [r7, #12]
 3190 00fa 1B68     		ldr	r3, [r3]
 3191              		.loc 1 1093 47
 3192 00fc 5B68     		ldr	r3, [r3, #4]
 3193              		.loc 1 1093 22
 3194 00fe DAB2     		uxtb	r2, r3
 3195              		.loc 1 1093 17
 3196 0100 BB68     		ldr	r3, [r7, #8]
 3197 0102 591C     		adds	r1, r3, #1
 3198 0104 B960     		str	r1, [r7, #8]
 3199              		.loc 1 1093 22
 3200 0106 02F07F02 		and	r2, r2, #127
 3201 010a D2B2     		uxtb	r2, r2
 3202              		.loc 1 1093 20
 3203 010c 1A70     		strb	r2, [r3]
 3204              	.L177:
1059:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 3205              		.loc 1 1059 16
 3206 010e FB68     		ldr	r3, [r7, #12]
 3207 0110 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3208 0112 9BB2     		uxth	r3, r3
1059:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 3209              		.loc 1 1059 10
 3210 0114 002B     		cmp	r3, #0
 3211 0116 A3D1     		bne	.L183
1094:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1095:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1096:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1097:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1098:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1099:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1100:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
 3212              		.loc 1 1100 20
 3213 0118 FB68     		ldr	r3, [r7, #12]
 3214 011a 2022     		movs	r2, #32
 3215 011c 83F83A20 		strb	r2, [r3, #58]
1101:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1102:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Unlocked */
1103:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 3216              		.loc 1 1103 5
 3217 0120 FB68     		ldr	r3, [r7, #12]
 3218 0122 0022     		movs	r2, #0
 3219 0124 83F83820 		strb	r2, [r3, #56]
1104:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1105:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_OK;
 3220              		.loc 1 1105 12
 3221 0128 0023     		movs	r3, #0
 3222 012a 00E0     		b	.L175
 3223              	.L172:
1106:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1107:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
1108:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1109:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_BUSY;
 3224              		.loc 1 1109 12
 3225 012c 0223     		movs	r3, #2
 3226              	.L175:
1110:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1111:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3227              		.loc 1 1111 1
 3228 012e 1846     		mov	r0, r3
 3229 0130 1837     		adds	r7, r7, #24
 3230              	.LCFI64:
 3231              		.cfi_def_cfa_offset 8
 3232 0132 BD46     		mov	sp, r7
 3233              	.LCFI65:
 3234              		.cfi_def_cfa_register 13
 3235              		@ sp needed
 3236 0134 80BD     		pop	{r7, pc}
 3237              		.cfi_endproc
 3238              	.LFE138:
 3240              		.section	.text.CRYP_SetKey,"ax",%progbits
 3241              		.align	1
 3242              		.syntax unified
 3243              		.thumb
 3244              		.thumb_func
 3245              		.fpu softvfp
 3247              	CRYP_SetKey:
 3248              	.LFB139:
1112:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1113:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///// ----- From stm32f4xx_cryp.c ------------------------------------------------
1114:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //#define FLAG_MASK     ((uint8_t)0x20)
1115:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1116:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1117:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Fills each CRYP_KeyInitStruct member with its default value.
1118:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
1119:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         which will be initialized.
1120:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1121:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1122:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
1123:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1124:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
1125:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key0Right = 0;
1126:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
1127:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key1Right = 0;
1128:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
1129:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key2Right = 0;
1130:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
1131:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key3Right = 0;
1132:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1133:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1134:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1135:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
1136:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         FIFOs are reset)
1137:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @note   The FIFOs must be flushed only when BUSY flag is reset.  
1138:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  None
1139:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1140:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1141:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_FIFOFlush(void)
1142:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1143:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Reset the read and write pointers of the FIFOs */
1144:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_CR_FFLUSH;
1145:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1146:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1147:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1148:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Initializes the CRYP peripheral according to the specified parameters
1149:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         in the CRYP_InitStruct.
1150:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
1151:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         the configuration information for the CRYP peripheral.
1152:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1153:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1154:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
1155:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1156:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the parameters */
1157:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
1158:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
1159:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
1160:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1161:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Select Algorithm mode*/  
1162:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR &= ~CRYP_CR_ALGOMODE;
1163:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
1164:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1165:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Select dataType */ 
1166:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR &= ~CRYP_CR_DATATYPE;
1167:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
1168:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1169:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* select Key size (used only with AES algorithm) */
1170:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_ECB) &&
1171:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //(CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_CBC) &&
1172:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //(CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_ECB) &&
1173:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //(CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_CBC))
1174:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1175:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
1176:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR &= ~CRYP_CR_KEYSIZE;
1177:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
1178:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                                   //configured once the key has 
1179:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                                                   //been prepared */
1180:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1181:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1182:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Select data Direction */ 
1183:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR &= ~CRYP_CR_ALGODIR;
1184:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
1185:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1186:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1187:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1188:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Initializes the CRYP Keys according to the specified parameters in
1189:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         the CRYP_KeyInitStruct.
1190:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
1191:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         contains the configuration information for the CRYP Keys.
1192:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1193:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1194:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
1195:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1196:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Key Initialisation */
1197:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
1198:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
1199:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
1200:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
1201:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
1202:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
1203:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
1204:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
1205:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1206:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1207:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1208:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Enables or disables the CRYP peripheral.
1209:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  NewState: new state of the CRYP peripheral.
1210:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          This parameter can be: ENABLE or DISABLE.
1211:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1212:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1213:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_Cmd(FunctionalState NewState)
1214:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1215:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the parameters */
1216:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1217:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1218:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if (NewState != DISABLE)
1219:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1220:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Enable the Cryptographic processor */
1221:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR |= CRYP_CR_CRYPEN;
1222:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1223:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else
1224:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1225:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Disable the Cryptographic processor */
1226:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR &= ~CRYP_CR_CRYPEN;
1227:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1228:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1229:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1230:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1231:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Returns whether CRYP peripheral is enabled or disabled.
1232:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  none.
1233:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval Current state of the CRYP peripheral (ENABLE or DISABLE).
1234:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1235:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //FunctionalState CRYP_GetCmdStatus(void)
1236:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1237:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //FunctionalState state = DISABLE;
1238:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1239:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((CRYP->CR & CRYP_CR_CRYPEN) != 0)
1240:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1241:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYPEN bit is set */
1242:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //state = ENABLE;
1243:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1244:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else
1245:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1246:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYPEN bit is reset */
1247:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //state = DISABLE;
1248:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1249:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return state;
1250:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1251:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1252:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1253:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Writes data in the Data Input register (DIN).
1254:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @note   After the DIN register has been read once or several times, 
1255:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
1256:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Data: data to write in Data Input register
1257:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1258:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1259:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_DataIn(uint32_t Data)
1260:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1261:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->DR = Data;
1262:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1263:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1264:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1265:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Returns the last data entered into the output FIFO.
1266:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  None
1267:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval Last data entered into the output FIFO.
1268:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1269:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //uint32_t CRYP_DataOut(void)
1270:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1271:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return CRYP->DOUT;
1272:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1273:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1274:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1275:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Checks whether the specified CRYP flag is set or not.
1276:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_FLAG: specifies the CRYP flag to check.
1277:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          This parameter can be one of the following values:
1278:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
1279:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
1280:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
1281:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
1282:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_BUSY: Busy flag.
1283:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
1284:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
1285:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval The new state of CRYP_FLAG (SET or RESET).
1286:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1287:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
1288:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1289:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //FlagStatus bitstatus = RESET;
1290:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tempreg = 0;
1291:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1292:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the parameters */
1293:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
1294:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1295:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* check if the FLAG is in RISR register */
1296:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
1297:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1298:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tempreg = CRYP->RISR;
1299:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1300:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else  /* The FLAG is in SR register */
1301:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1302:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tempreg = CRYP->SR;
1303:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1304:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1305:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1306:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the status of the specified CRYP flag */
1307:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
1308:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1309:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYP_FLAG is set */
1310:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //bitstatus = SET;
1311:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1312:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else
1313:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1314:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYP_FLAG is reset */
1315:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //bitstatus = RESET;
1316:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1317:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1318:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Return the CRYP_FLAG status */
1319:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return  bitstatus;
1320:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1321:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1322:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///// ----- From stm32f4xx_cryp_aes.c --------------------------------------------
1323:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //#define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
1324:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1325:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1326:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Encrypt and decrypt using AES in ECB Mode
1327:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Mode: encryption or decryption Mode.
1328:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          This parameter can be one of the following values:
1329:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg MODE_ENCRYPT: Encryption
1330:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg MODE_DECRYPT: Decryption
1331:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Key: Key used for AES algorithm.
1332:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Keysize: length of the Key, must be a 128, 192 or 256.
1333:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Input: pointer to the Input buffer.
1334:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Ilength: length of the Input buffer, must be a multiple of 16.
1335:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Output: pointer to the returned buffer.
1336:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval An ErrorStatus enumeration value:
1337:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          - SUCCESS: Operation done
1338:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          - ERROR: Operation failed
1339:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1340:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
1341:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****                          //uint8_t* Input, uint32_t Ilength, uint8_t* Output)
1342:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1343:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_InitTypeDef AES_CRYP_InitStructure;
1344:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
1345:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //__IO uint32_t counter = 0;
1346:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t busystatus = 0;
1347:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //ErrorStatus status = SUCCESS;
1348:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t keyaddr    = (uint32_t)Key;
1349:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t inputaddr  = (uint32_t)Input;
1350:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t outputaddr = (uint32_t)Output;
1351:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t i = 0;
1352:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1353:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Crypto structures initialisation*/
1354:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
1355:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1356:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //switch(Keysize)
1357:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1358:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //case 128:
1359:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
1360:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1361:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1362:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1363:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1364:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1365:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1366:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1367:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1368:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //case 192:
1369:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
1370:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1371:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1372:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1373:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1374:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1375:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1376:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1377:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1378:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1379:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1380:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1381:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1382:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //case 256:
1383:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
1384:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
1385:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1386:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
1387:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1388:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1389:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1390:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1391:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1392:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1393:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1394:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1395:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1396:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1397:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1398:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1399:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1400:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //default:
1401:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1402:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1403:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1404:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///*------------------ AES Decryption ------------------*/
1405:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if(Mode == MODE_DECRYPT) /* AES decryption */
1406:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1407:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Flush IN/OUT FIFOs */
1408:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_FIFOFlush();
1409:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1410:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Crypto Init for Key preparation for decryption process */
1411:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
1412:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
1413:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
1414:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_Init(&AES_CRYP_InitStructure);
1415:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1416:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Key Initialisation */
1417:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
1418:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1419:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Enable Crypto processor */
1420:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_Cmd(ENABLE);
1421:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1422:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* wait until the Busy flag is RESET */
1423:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //do
1424:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1425:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1426:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //counter++;
1427:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1428:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1429:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //if (busystatus != RESET)
1430:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    //{
1431:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****        //status = ERROR;
1432:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1433:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //else
1434:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1435:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       ///* Crypto Init for decryption process */  
1436:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
1437:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1438:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1439:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///*------------------ AES Encryption ------------------*/
1440:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else /* AES encryption */
1441:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1442:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1443:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
1444:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1445:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Crypto Init for Encryption process */
1446:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
1447:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1448:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1449:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
1450:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
1451:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_Init(&AES_CRYP_InitStructure);
1452:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1453:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Flush IN/OUT FIFOs */
1454:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_FIFOFlush();
1455:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1456:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Enable Crypto processor */
1457:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_Cmd(ENABLE);
1458:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1459:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if(CRYP_GetCmdStatus() == DISABLE)
1460:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1461:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* The CRYP peripheral clock is not enabled or the device doesn't embed 
1462:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****        //the CRYP peripheral (please check the device sales type. */
1463:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //return(ERROR);
1464:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1465:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1466:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
1467:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1468:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1469:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Write the Input block in the IN FIFO */
1470:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1471:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1472:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1473:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1474:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1475:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1476:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1477:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1478:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1479:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Wait until the complete message has been processed */
1480:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //counter = 0;
1481:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //do
1482:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1483:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1484:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //counter++;
1485:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1486:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1487:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //if (busystatus != RESET)
1488:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    //{
1489:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****        //status = ERROR;
1490:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1491:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //else
1492:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1493:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1494:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       ///* Read the Output block from the Output FIFO */
1495:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut();
1496:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1497:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut();
1498:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1499:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut();
1500:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1501:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut(); 
1502:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1503:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1504:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1505:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1506:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Disable Crypto */
1507:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_Cmd(DISABLE);
1508:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1509:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return status; 
1510:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1511:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1512:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1513:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Writes the Key in Key registers. 
1514:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1515:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1516:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Key Pointer to Key buffer
1517:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  KeySize Size of Key
1518:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
1519:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1520:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** static void CRYP_SetKey(CRYP_HandleTypeDef *hcryp, uint8_t *Key, uint32_t KeySize)
1521:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 3249              		.loc 1 1521 1
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 96
 3252              		@ frame_needed = 1, uses_anonymous_args = 0
 3253              		@ link register save eliminated.
 3254 0000 80B4     		push	{r7}
 3255              	.LCFI66:
 3256              		.cfi_def_cfa_offset 4
 3257              		.cfi_offset 7, -4
 3258 0002 99B0     		sub	sp, sp, #100
 3259              	.LCFI67:
 3260              		.cfi_def_cfa_offset 104
 3261 0004 00AF     		add	r7, sp, #0
 3262              	.LCFI68:
 3263              		.cfi_def_cfa_register 7
 3264 0006 F860     		str	r0, [r7, #12]
 3265 0008 B960     		str	r1, [r7, #8]
 3266 000a 7A60     		str	r2, [r7, #4]
1522:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t keyaddr = (uint32_t)Key;
 3267              		.loc 1 1522 12
 3268 000c BB68     		ldr	r3, [r7, #8]
 3269 000e FB65     		str	r3, [r7, #92]
1523:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1524:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   switch(KeySize)
 3270              		.loc 1 1524 3
 3271 0010 7B68     		ldr	r3, [r7, #4]
 3272 0012 B3F5007F 		cmp	r3, #512
 3273 0016 0DD0     		beq	.L185
 3274 0018 7B68     		ldr	r3, [r7, #4]
 3275 001a B3F5007F 		cmp	r3, #512
 3276 001e 00F2C980 		bhi	.L208
 3277 0022 7B68     		ldr	r3, [r7, #4]
 3278 0024 002B     		cmp	r3, #0
 3279 0026 00F09B80 		beq	.L187
 3280 002a 7B68     		ldr	r3, [r7, #4]
 3281 002c B3F5807F 		cmp	r3, #256
 3282 0030 56D0     		beq	.L188
1525:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1526:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_256B:
1527:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Key Initialisation */
1528:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K0LR = __REV(*(uint32_t*)(keyaddr));
1529:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1530:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K0RR = __REV(*(uint32_t*)(keyaddr));
1531:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1532:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1LR = __REV(*(uint32_t*)(keyaddr));
1533:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1534:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
1535:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1536:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
1537:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1538:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
1539:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1540:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
1541:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1542:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
1543:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
1544:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_192B:
1545:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1LR = __REV(*(uint32_t*)(keyaddr));
1546:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1547:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
1548:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1549:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
1550:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1551:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
1552:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1553:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
1554:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1555:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
1556:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
1557:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_128B:       
1558:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
1559:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1560:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
1561:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1562:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
1563:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1564:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
1565:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
1566:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   default:
1567:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3283              		.loc 1 1567 5
 3284 0032 BFE0     		b	.L208
 3285              	.L185:
1528:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3286              		.loc 1 1528 36
 3287 0034 FB6D     		ldr	r3, [r7, #92]
1528:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3288              		.loc 1 1528 29
 3289 0036 1A68     		ldr	r2, [r3]
1528:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3290              		.loc 1 1528 10
 3291 0038 FB68     		ldr	r3, [r7, #12]
 3292 003a 1B68     		ldr	r3, [r3]
 3293 003c FA63     		str	r2, [r7, #60]
 3294              	.LBB61:
 3295              	.LBB62:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3296              		.loc 2 453 10
 3297 003e FA6B     		ldr	r2, [r7, #60]
 3298 0040 12BA     		rev	r2, r2
 3299              	.LBE62:
 3300              	.LBE61:
1528:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3301              		.loc 1 1528 27
 3302 0042 1A62     		str	r2, [r3, #32]
1529:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K0RR = __REV(*(uint32_t*)(keyaddr));
 3303              		.loc 1 1529 12
 3304 0044 FB6D     		ldr	r3, [r7, #92]
 3305 0046 0433     		adds	r3, r3, #4
 3306 0048 FB65     		str	r3, [r7, #92]
1530:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3307              		.loc 1 1530 36
 3308 004a FB6D     		ldr	r3, [r7, #92]
1530:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3309              		.loc 1 1530 29
 3310 004c 1A68     		ldr	r2, [r3]
1530:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3311              		.loc 1 1530 10
 3312 004e FB68     		ldr	r3, [r7, #12]
 3313 0050 1B68     		ldr	r3, [r3]
 3314 0052 3A64     		str	r2, [r7, #64]
 3315              	.LBB63:
 3316              	.LBB64:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3317              		.loc 2 453 10
 3318 0054 3A6C     		ldr	r2, [r7, #64]
 3319 0056 12BA     		rev	r2, r2
 3320              	.LBE64:
 3321              	.LBE63:
1530:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3322              		.loc 1 1530 27
 3323 0058 5A62     		str	r2, [r3, #36]
1531:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1LR = __REV(*(uint32_t*)(keyaddr));
 3324              		.loc 1 1531 12
 3325 005a FB6D     		ldr	r3, [r7, #92]
 3326 005c 0433     		adds	r3, r3, #4
 3327 005e FB65     		str	r3, [r7, #92]
1532:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3328              		.loc 1 1532 36
 3329 0060 FB6D     		ldr	r3, [r7, #92]
1532:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3330              		.loc 1 1532 29
 3331 0062 1A68     		ldr	r2, [r3]
1532:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3332              		.loc 1 1532 10
 3333 0064 FB68     		ldr	r3, [r7, #12]
 3334 0066 1B68     		ldr	r3, [r3]
 3335 0068 7A64     		str	r2, [r7, #68]
 3336              	.LBB65:
 3337              	.LBB66:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3338              		.loc 2 453 10
 3339 006a 7A6C     		ldr	r2, [r7, #68]
 3340 006c 12BA     		rev	r2, r2
 3341              	.LBE66:
 3342              	.LBE65:
1532:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3343              		.loc 1 1532 27
 3344 006e 9A62     		str	r2, [r3, #40]
1533:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
 3345              		.loc 1 1533 12
 3346 0070 FB6D     		ldr	r3, [r7, #92]
 3347 0072 0433     		adds	r3, r3, #4
 3348 0074 FB65     		str	r3, [r7, #92]
1534:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3349              		.loc 1 1534 36
 3350 0076 FB6D     		ldr	r3, [r7, #92]
1534:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3351              		.loc 1 1534 29
 3352 0078 1A68     		ldr	r2, [r3]
1534:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3353              		.loc 1 1534 10
 3354 007a FB68     		ldr	r3, [r7, #12]
 3355 007c 1B68     		ldr	r3, [r3]
 3356 007e BA64     		str	r2, [r7, #72]
 3357              	.LBB67:
 3358              	.LBB68:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3359              		.loc 2 453 10
 3360 0080 BA6C     		ldr	r2, [r7, #72]
 3361 0082 12BA     		rev	r2, r2
 3362              	.LBE68:
 3363              	.LBE67:
1534:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3364              		.loc 1 1534 27
 3365 0084 DA62     		str	r2, [r3, #44]
1535:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
 3366              		.loc 1 1535 12
 3367 0086 FB6D     		ldr	r3, [r7, #92]
 3368 0088 0433     		adds	r3, r3, #4
 3369 008a FB65     		str	r3, [r7, #92]
1536:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3370              		.loc 1 1536 36
 3371 008c FB6D     		ldr	r3, [r7, #92]
1536:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3372              		.loc 1 1536 29
 3373 008e 1A68     		ldr	r2, [r3]
1536:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3374              		.loc 1 1536 10
 3375 0090 FB68     		ldr	r3, [r7, #12]
 3376 0092 1B68     		ldr	r3, [r3]
 3377 0094 FA64     		str	r2, [r7, #76]
 3378              	.LBB69:
 3379              	.LBB70:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3380              		.loc 2 453 10
 3381 0096 FA6C     		ldr	r2, [r7, #76]
 3382 0098 12BA     		rev	r2, r2
 3383              	.LBE70:
 3384              	.LBE69:
1536:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3385              		.loc 1 1536 27
 3386 009a 1A63     		str	r2, [r3, #48]
1537:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
 3387              		.loc 1 1537 12
 3388 009c FB6D     		ldr	r3, [r7, #92]
 3389 009e 0433     		adds	r3, r3, #4
 3390 00a0 FB65     		str	r3, [r7, #92]
1538:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3391              		.loc 1 1538 36
 3392 00a2 FB6D     		ldr	r3, [r7, #92]
1538:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3393              		.loc 1 1538 29
 3394 00a4 1A68     		ldr	r2, [r3]
1538:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3395              		.loc 1 1538 10
 3396 00a6 FB68     		ldr	r3, [r7, #12]
 3397 00a8 1B68     		ldr	r3, [r3]
 3398 00aa 3A65     		str	r2, [r7, #80]
 3399              	.LBB71:
 3400              	.LBB72:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3401              		.loc 2 453 10
 3402 00ac 3A6D     		ldr	r2, [r7, #80]
 3403 00ae 12BA     		rev	r2, r2
 3404              	.LBE72:
 3405              	.LBE71:
1538:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3406              		.loc 1 1538 27
 3407 00b0 5A63     		str	r2, [r3, #52]
1539:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
 3408              		.loc 1 1539 12
 3409 00b2 FB6D     		ldr	r3, [r7, #92]
 3410 00b4 0433     		adds	r3, r3, #4
 3411 00b6 FB65     		str	r3, [r7, #92]
1540:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3412              		.loc 1 1540 36
 3413 00b8 FB6D     		ldr	r3, [r7, #92]
1540:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3414              		.loc 1 1540 29
 3415 00ba 1A68     		ldr	r2, [r3]
1540:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3416              		.loc 1 1540 10
 3417 00bc FB68     		ldr	r3, [r7, #12]
 3418 00be 1B68     		ldr	r3, [r3]
 3419 00c0 7A65     		str	r2, [r7, #84]
 3420              	.LBB73:
 3421              	.LBB74:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3422              		.loc 2 453 10
 3423 00c2 7A6D     		ldr	r2, [r7, #84]
 3424 00c4 12BA     		rev	r2, r2
 3425              	.LBE74:
 3426              	.LBE73:
1540:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3427              		.loc 1 1540 27
 3428 00c6 9A63     		str	r2, [r3, #56]
1541:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
 3429              		.loc 1 1541 12
 3430 00c8 FB6D     		ldr	r3, [r7, #92]
 3431 00ca 0433     		adds	r3, r3, #4
 3432 00cc FB65     		str	r3, [r7, #92]
1542:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3433              		.loc 1 1542 36
 3434 00ce FB6D     		ldr	r3, [r7, #92]
1542:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3435              		.loc 1 1542 29
 3436 00d0 1A68     		ldr	r2, [r3]
1542:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3437              		.loc 1 1542 10
 3438 00d2 FB68     		ldr	r3, [r7, #12]
 3439 00d4 1B68     		ldr	r3, [r3]
 3440 00d6 BA65     		str	r2, [r7, #88]
 3441              	.LBB75:
 3442              	.LBB76:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3443              		.loc 2 453 10
 3444 00d8 BA6D     		ldr	r2, [r7, #88]
 3445 00da 12BA     		rev	r2, r2
 3446              	.LBE76:
 3447              	.LBE75:
1542:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3448              		.loc 1 1542 27
 3449 00dc DA63     		str	r2, [r3, #60]
1543:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_192B:
 3450              		.loc 1 1543 5
 3451 00de 6AE0     		b	.L197
 3452              	.L188:
1545:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3453              		.loc 1 1545 36
 3454 00e0 FB6D     		ldr	r3, [r7, #92]
1545:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3455              		.loc 1 1545 29
 3456 00e2 1A68     		ldr	r2, [r3]
1545:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3457              		.loc 1 1545 10
 3458 00e4 FB68     		ldr	r3, [r7, #12]
 3459 00e6 1B68     		ldr	r3, [r3]
 3460 00e8 7A62     		str	r2, [r7, #36]
 3461              	.LBB77:
 3462              	.LBB78:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3463              		.loc 2 453 10
 3464 00ea 7A6A     		ldr	r2, [r7, #36]
 3465 00ec 12BA     		rev	r2, r2
 3466              	.LBE78:
 3467              	.LBE77:
1545:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3468              		.loc 1 1545 27
 3469 00ee 9A62     		str	r2, [r3, #40]
1546:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
 3470              		.loc 1 1546 12
 3471 00f0 FB6D     		ldr	r3, [r7, #92]
 3472 00f2 0433     		adds	r3, r3, #4
 3473 00f4 FB65     		str	r3, [r7, #92]
1547:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3474              		.loc 1 1547 36
 3475 00f6 FB6D     		ldr	r3, [r7, #92]
1547:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3476              		.loc 1 1547 29
 3477 00f8 1A68     		ldr	r2, [r3]
1547:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3478              		.loc 1 1547 10
 3479 00fa FB68     		ldr	r3, [r7, #12]
 3480 00fc 1B68     		ldr	r3, [r3]
 3481 00fe BA62     		str	r2, [r7, #40]
 3482              	.LBB79:
 3483              	.LBB80:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3484              		.loc 2 453 10
 3485 0100 BA6A     		ldr	r2, [r7, #40]
 3486 0102 12BA     		rev	r2, r2
 3487              	.LBE80:
 3488              	.LBE79:
1547:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3489              		.loc 1 1547 27
 3490 0104 DA62     		str	r2, [r3, #44]
1548:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
 3491              		.loc 1 1548 12
 3492 0106 FB6D     		ldr	r3, [r7, #92]
 3493 0108 0433     		adds	r3, r3, #4
 3494 010a FB65     		str	r3, [r7, #92]
1549:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3495              		.loc 1 1549 36
 3496 010c FB6D     		ldr	r3, [r7, #92]
1549:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3497              		.loc 1 1549 29
 3498 010e 1A68     		ldr	r2, [r3]
1549:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3499              		.loc 1 1549 10
 3500 0110 FB68     		ldr	r3, [r7, #12]
 3501 0112 1B68     		ldr	r3, [r3]
 3502 0114 FA62     		str	r2, [r7, #44]
 3503              	.LBB81:
 3504              	.LBB82:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3505              		.loc 2 453 10
 3506 0116 FA6A     		ldr	r2, [r7, #44]
 3507 0118 12BA     		rev	r2, r2
 3508              	.LBE82:
 3509              	.LBE81:
1549:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3510              		.loc 1 1549 27
 3511 011a 1A63     		str	r2, [r3, #48]
1550:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
 3512              		.loc 1 1550 12
 3513 011c FB6D     		ldr	r3, [r7, #92]
 3514 011e 0433     		adds	r3, r3, #4
 3515 0120 FB65     		str	r3, [r7, #92]
1551:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3516              		.loc 1 1551 36
 3517 0122 FB6D     		ldr	r3, [r7, #92]
1551:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3518              		.loc 1 1551 29
 3519 0124 1A68     		ldr	r2, [r3]
1551:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3520              		.loc 1 1551 10
 3521 0126 FB68     		ldr	r3, [r7, #12]
 3522 0128 1B68     		ldr	r3, [r3]
 3523 012a 3A63     		str	r2, [r7, #48]
 3524              	.LBB83:
 3525              	.LBB84:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3526              		.loc 2 453 10
 3527 012c 3A6B     		ldr	r2, [r7, #48]
 3528 012e 12BA     		rev	r2, r2
 3529              	.LBE84:
 3530              	.LBE83:
1551:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3531              		.loc 1 1551 27
 3532 0130 5A63     		str	r2, [r3, #52]
1552:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
 3533              		.loc 1 1552 12
 3534 0132 FB6D     		ldr	r3, [r7, #92]
 3535 0134 0433     		adds	r3, r3, #4
 3536 0136 FB65     		str	r3, [r7, #92]
1553:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3537              		.loc 1 1553 36
 3538 0138 FB6D     		ldr	r3, [r7, #92]
1553:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3539              		.loc 1 1553 29
 3540 013a 1A68     		ldr	r2, [r3]
1553:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3541              		.loc 1 1553 10
 3542 013c FB68     		ldr	r3, [r7, #12]
 3543 013e 1B68     		ldr	r3, [r3]
 3544 0140 7A63     		str	r2, [r7, #52]
 3545              	.LBB85:
 3546              	.LBB86:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3547              		.loc 2 453 10
 3548 0142 7A6B     		ldr	r2, [r7, #52]
 3549 0144 12BA     		rev	r2, r2
 3550              	.LBE86:
 3551              	.LBE85:
1553:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3552              		.loc 1 1553 27
 3553 0146 9A63     		str	r2, [r3, #56]
1554:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
 3554              		.loc 1 1554 12
 3555 0148 FB6D     		ldr	r3, [r7, #92]
 3556 014a 0433     		adds	r3, r3, #4
 3557 014c FB65     		str	r3, [r7, #92]
1555:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3558              		.loc 1 1555 36
 3559 014e FB6D     		ldr	r3, [r7, #92]
1555:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3560              		.loc 1 1555 29
 3561 0150 1A68     		ldr	r2, [r3]
1555:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3562              		.loc 1 1555 10
 3563 0152 FB68     		ldr	r3, [r7, #12]
 3564 0154 1B68     		ldr	r3, [r3]
 3565 0156 BA63     		str	r2, [r7, #56]
 3566              	.LBB87:
 3567              	.LBB88:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3568              		.loc 2 453 10
 3569 0158 BA6B     		ldr	r2, [r7, #56]
 3570 015a 12BA     		rev	r2, r2
 3571              	.LBE88:
 3572              	.LBE87:
1555:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3573              		.loc 1 1555 27
 3574 015c DA63     		str	r2, [r3, #60]
1556:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_128B:       
 3575              		.loc 1 1556 5
 3576 015e 2AE0     		b	.L197
 3577              	.L187:
1558:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3578              		.loc 1 1558 36
 3579 0160 FB6D     		ldr	r3, [r7, #92]
1558:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3580              		.loc 1 1558 29
 3581 0162 1A68     		ldr	r2, [r3]
1558:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3582              		.loc 1 1558 10
 3583 0164 FB68     		ldr	r3, [r7, #12]
 3584 0166 1B68     		ldr	r3, [r3]
 3585 0168 7A61     		str	r2, [r7, #20]
 3586              	.LBB89:
 3587              	.LBB90:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3588              		.loc 2 453 10
 3589 016a 7A69     		ldr	r2, [r7, #20]
 3590 016c 12BA     		rev	r2, r2
 3591              	.LBE90:
 3592              	.LBE89:
1558:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3593              		.loc 1 1558 27
 3594 016e 1A63     		str	r2, [r3, #48]
1559:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
 3595              		.loc 1 1559 12
 3596 0170 FB6D     		ldr	r3, [r7, #92]
 3597 0172 0433     		adds	r3, r3, #4
 3598 0174 FB65     		str	r3, [r7, #92]
1560:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3599              		.loc 1 1560 36
 3600 0176 FB6D     		ldr	r3, [r7, #92]
1560:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3601              		.loc 1 1560 29
 3602 0178 1A68     		ldr	r2, [r3]
1560:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3603              		.loc 1 1560 10
 3604 017a FB68     		ldr	r3, [r7, #12]
 3605 017c 1B68     		ldr	r3, [r3]
 3606 017e BA61     		str	r2, [r7, #24]
 3607              	.LBB91:
 3608              	.LBB92:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3609              		.loc 2 453 10
 3610 0180 BA69     		ldr	r2, [r7, #24]
 3611 0182 12BA     		rev	r2, r2
 3612              	.LBE92:
 3613              	.LBE91:
1560:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3614              		.loc 1 1560 27
 3615 0184 5A63     		str	r2, [r3, #52]
1561:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
 3616              		.loc 1 1561 12
 3617 0186 FB6D     		ldr	r3, [r7, #92]
 3618 0188 0433     		adds	r3, r3, #4
 3619 018a FB65     		str	r3, [r7, #92]
1562:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3620              		.loc 1 1562 36
 3621 018c FB6D     		ldr	r3, [r7, #92]
1562:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3622              		.loc 1 1562 29
 3623 018e 1A68     		ldr	r2, [r3]
1562:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3624              		.loc 1 1562 10
 3625 0190 FB68     		ldr	r3, [r7, #12]
 3626 0192 1B68     		ldr	r3, [r3]
 3627 0194 FA61     		str	r2, [r7, #28]
 3628              	.LBB93:
 3629              	.LBB94:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3630              		.loc 2 453 10
 3631 0196 FA69     		ldr	r2, [r7, #28]
 3632 0198 12BA     		rev	r2, r2
 3633              	.LBE94:
 3634              	.LBE93:
1562:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 3635              		.loc 1 1562 27
 3636 019a 9A63     		str	r2, [r3, #56]
1563:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
 3637              		.loc 1 1563 12
 3638 019c FB6D     		ldr	r3, [r7, #92]
 3639 019e 0433     		adds	r3, r3, #4
 3640 01a0 FB65     		str	r3, [r7, #92]
1564:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3641              		.loc 1 1564 36
 3642 01a2 FB6D     		ldr	r3, [r7, #92]
1564:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3643              		.loc 1 1564 29
 3644 01a4 1A68     		ldr	r2, [r3]
1564:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3645              		.loc 1 1564 10
 3646 01a6 FB68     		ldr	r3, [r7, #12]
 3647 01a8 1B68     		ldr	r3, [r3]
 3648 01aa 3A62     		str	r2, [r7, #32]
 3649              	.LBB95:
 3650              	.LBB96:
 453:../../hardware/victims/firmware/./hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 3651              		.loc 2 453 10
 3652 01ac 3A6A     		ldr	r2, [r7, #32]
 3653 01ae 12BA     		rev	r2, r2
 3654              	.LBE96:
 3655              	.LBE95:
1564:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 3656              		.loc 1 1564 27
 3657 01b0 DA63     		str	r2, [r3, #60]
1565:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   default:
 3658              		.loc 1 1565 5
 3659 01b2 00E0     		b	.L197
 3660              	.L208:
 3661              		.loc 1 1567 5
 3662 01b4 00BF     		nop
 3663              	.L197:
1568:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1569:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3664              		.loc 1 1569 1
 3665 01b6 00BF     		nop
 3666 01b8 6437     		adds	r7, r7, #100
 3667              	.LCFI69:
 3668              		.cfi_def_cfa_offset 4
 3669 01ba BD46     		mov	sp, r7
 3670              	.LCFI70:
 3671              		.cfi_def_cfa_register 13
 3672              		@ sp needed
 3673 01bc 80BC     		pop	{r7}
 3674              	.LCFI71:
 3675              		.cfi_restore 7
 3676              		.cfi_def_cfa_offset 0
 3677 01be 7047     		bx	lr
 3678              		.cfi_endproc
 3679              	.LFE139:
 3681              		.section	.text.CRYP_ProcessData,"ax",%progbits
 3682              		.align	1
 3683              		.syntax unified
 3684              		.thumb
 3685              		.thumb_func
 3686              		.fpu softvfp
 3688              	CRYP_ProcessData:
 3689              	.LFB140:
1570:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1571:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** static HAL_StatusTypeDef CRYP_ProcessData(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint16_t Ileng
1572:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1573:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1574:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Process Data: Writes Input data in polling mode and read the output data
1575:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1576:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1577:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Input Pointer to the Input buffer
1578:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Ilength Length of the Input buffer, must be a multiple of 16.
1579:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Output Pointer to the returned buffer
1580:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout Timeout value
1581:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
1582:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1583:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** static HAL_StatusTypeDef CRYP_ProcessData(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint16_t Ileng
1584:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 3690              		.loc 1 1584 1
 3691              		.cfi_startproc
 3692              		@ args = 4, pretend = 0, frame = 32
 3693              		@ frame_needed = 1, uses_anonymous_args = 0
 3694 0000 80B5     		push	{r7, lr}
 3695              	.LCFI72:
 3696              		.cfi_def_cfa_offset 8
 3697              		.cfi_offset 7, -8
 3698              		.cfi_offset 14, -4
 3699 0002 88B0     		sub	sp, sp, #32
 3700              	.LCFI73:
 3701              		.cfi_def_cfa_offset 40
 3702 0004 00AF     		add	r7, sp, #0
 3703              	.LCFI74:
 3704              		.cfi_def_cfa_register 7
 3705 0006 F860     		str	r0, [r7, #12]
 3706 0008 B960     		str	r1, [r7, #8]
 3707 000a 3B60     		str	r3, [r7]
 3708 000c 1346     		mov	r3, r2	@ movhi
 3709 000e FB80     		strh	r3, [r7, #6]	@ movhi
1585:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3710              		.loc 1 1585 12
 3711 0010 0023     		movs	r3, #0
 3712 0012 3B61     		str	r3, [r7, #16]
1586:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1587:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t i = 0U;
 3713              		.loc 1 1587 12
 3714 0014 0023     		movs	r3, #0
 3715 0016 FB61     		str	r3, [r7, #28]
1588:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t inputaddr  = (uint32_t)Input;
 3716              		.loc 1 1588 12
 3717 0018 BB68     		ldr	r3, [r7, #8]
 3718 001a BB61     		str	r3, [r7, #24]
1589:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t outputaddr = (uint32_t)Output;
 3719              		.loc 1 1589 12
 3720 001c 3B68     		ldr	r3, [r7]
 3721 001e 7B61     		str	r3, [r7, #20]
1590:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1591:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   for(i=0U; (i < Ilength); i+=16U)
 3722              		.loc 1 1591 8
 3723 0020 0023     		movs	r3, #0
 3724 0022 FB61     		str	r3, [r7, #28]
 3725              		.loc 1 1591 3
 3726 0024 66E0     		b	.L210
 3727              	.L215:
1592:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1593:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Write the Input block in the IN FIFO */
1594:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
 3728              		.loc 1 1594 28
 3729 0026 BA69     		ldr	r2, [r7, #24]
 3730              		.loc 1 1594 10
 3731 0028 FB68     		ldr	r3, [r7, #12]
 3732 002a 1B68     		ldr	r3, [r3]
 3733              		.loc 1 1594 27
 3734 002c 1268     		ldr	r2, [r2]
 3735              		.loc 1 1594 25
 3736 002e 9A60     		str	r2, [r3, #8]
1595:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 3737              		.loc 1 1595 14
 3738 0030 BB69     		ldr	r3, [r7, #24]
 3739 0032 0433     		adds	r3, r3, #4
 3740 0034 BB61     		str	r3, [r7, #24]
1596:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
 3741              		.loc 1 1596 28
 3742 0036 BA69     		ldr	r2, [r7, #24]
 3743              		.loc 1 1596 10
 3744 0038 FB68     		ldr	r3, [r7, #12]
 3745 003a 1B68     		ldr	r3, [r3]
 3746              		.loc 1 1596 27
 3747 003c 1268     		ldr	r2, [r2]
 3748              		.loc 1 1596 25
 3749 003e 9A60     		str	r2, [r3, #8]
1597:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 3750              		.loc 1 1597 14
 3751 0040 BB69     		ldr	r3, [r7, #24]
 3752 0042 0433     		adds	r3, r3, #4
 3753 0044 BB61     		str	r3, [r7, #24]
1598:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR  = *(uint32_t*)(inputaddr);
 3754              		.loc 1 1598 29
 3755 0046 BA69     		ldr	r2, [r7, #24]
 3756              		.loc 1 1598 10
 3757 0048 FB68     		ldr	r3, [r7, #12]
 3758 004a 1B68     		ldr	r3, [r3]
 3759              		.loc 1 1598 28
 3760 004c 1268     		ldr	r2, [r2]
 3761              		.loc 1 1598 26
 3762 004e 9A60     		str	r2, [r3, #8]
1599:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 3763              		.loc 1 1599 14
 3764 0050 BB69     		ldr	r3, [r7, #24]
 3765 0052 0433     		adds	r3, r3, #4
 3766 0054 BB61     		str	r3, [r7, #24]
1600:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
 3767              		.loc 1 1600 28
 3768 0056 BA69     		ldr	r2, [r7, #24]
 3769              		.loc 1 1600 10
 3770 0058 FB68     		ldr	r3, [r7, #12]
 3771 005a 1B68     		ldr	r3, [r3]
 3772              		.loc 1 1600 27
 3773 005c 1268     		ldr	r2, [r2]
 3774              		.loc 1 1600 25
 3775 005e 9A60     		str	r2, [r3, #8]
1601:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 3776              		.loc 1 1601 14
 3777 0060 BB69     		ldr	r3, [r7, #24]
 3778 0062 0433     		adds	r3, r3, #4
 3779 0064 BB61     		str	r3, [r7, #24]
1602:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1603:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get tick */
1604:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3780              		.loc 1 1604 17
 3781 0066 FFF7FEFF 		bl	HAL_GetTick
 3782 006a 3861     		str	r0, [r7, #16]
1605:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1606:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(HAL_IS_BIT_CLR(hcryp->Instance->SR, CRYP_FLAG_OFNE))
 3783              		.loc 1 1606 10
 3784 006c 18E0     		b	.L211
 3785              	.L214:
1607:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
1608:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check for the Timeout */
1609:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(Timeout != HAL_MAX_DELAY)
 3786              		.loc 1 1609 9
 3787 006e BB6A     		ldr	r3, [r7, #40]
 3788 0070 B3F1FF3F 		cmp	r3, #-1
 3789 0074 14D0     		beq	.L211
1610:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1611:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 3790              		.loc 1 1611 11
 3791 0076 BB6A     		ldr	r3, [r7, #40]
 3792 0078 002B     		cmp	r3, #0
 3793 007a 07D0     		beq	.L212
 3794              		.loc 1 1611 31 discriminator 1
 3795 007c FFF7FEFF 		bl	HAL_GetTick
 3796 0080 0246     		mov	r2, r0
 3797              		.loc 1 1611 45 discriminator 1
 3798 0082 3B69     		ldr	r3, [r7, #16]
 3799 0084 D31A     		subs	r3, r2, r3
 3800              		.loc 1 1611 27 discriminator 1
 3801 0086 BA6A     		ldr	r2, [r7, #40]
 3802 0088 9A42     		cmp	r2, r3
 3803 008a 09D2     		bcs	.L211
 3804              	.L212:
1612:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1613:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Change state */
1614:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           hcryp->State = HAL_CRYP_STATE_TIMEOUT;
 3805              		.loc 1 1614 24
 3806 008c FB68     		ldr	r3, [r7, #12]
 3807 008e 0322     		movs	r2, #3
 3808 0090 83F83D20 		strb	r2, [r3, #61]
1615:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           
1616:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Process Unlocked */
1617:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           __HAL_UNLOCK(hcryp);
 3809              		.loc 1 1617 11
 3810 0094 FB68     		ldr	r3, [r7, #12]
 3811 0096 0022     		movs	r2, #0
 3812 0098 83F83C20 		strb	r2, [r3, #60]
1618:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         
1619:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 3813              		.loc 1 1619 18
 3814 009c 0323     		movs	r3, #3
 3815 009e 2EE0     		b	.L213
 3816              	.L211:
1606:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 3817              		.loc 1 1606 11
 3818 00a0 FB68     		ldr	r3, [r7, #12]
 3819 00a2 1B68     		ldr	r3, [r3]
 3820 00a4 5B68     		ldr	r3, [r3, #4]
 3821 00a6 03F00403 		and	r3, r3, #4
1606:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 3822              		.loc 1 1606 10
 3823 00aa 002B     		cmp	r3, #0
 3824 00ac DFD0     		beq	.L214
1620:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1621:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1622:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1623:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Read the Output block from the Output FIFO */
1624:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 3825              		.loc 1 1624 37 discriminator 2
 3826 00ae FB68     		ldr	r3, [r7, #12]
 3827 00b0 1A68     		ldr	r2, [r3]
 3828              		.loc 1 1624 6 discriminator 2
 3829 00b2 7B69     		ldr	r3, [r7, #20]
 3830              		.loc 1 1624 47 discriminator 2
 3831 00b4 D268     		ldr	r2, [r2, #12]
 3832              		.loc 1 1624 30 discriminator 2
 3833 00b6 1A60     		str	r2, [r3]
1625:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 3834              		.loc 1 1625 15 discriminator 2
 3835 00b8 7B69     		ldr	r3, [r7, #20]
 3836 00ba 0433     		adds	r3, r3, #4
 3837 00bc 7B61     		str	r3, [r7, #20]
1626:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 3838              		.loc 1 1626 37 discriminator 2
 3839 00be FB68     		ldr	r3, [r7, #12]
 3840 00c0 1A68     		ldr	r2, [r3]
 3841              		.loc 1 1626 6 discriminator 2
 3842 00c2 7B69     		ldr	r3, [r7, #20]
 3843              		.loc 1 1626 47 discriminator 2
 3844 00c4 D268     		ldr	r2, [r2, #12]
 3845              		.loc 1 1626 30 discriminator 2
 3846 00c6 1A60     		str	r2, [r3]
1627:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 3847              		.loc 1 1627 15 discriminator 2
 3848 00c8 7B69     		ldr	r3, [r7, #20]
 3849 00ca 0433     		adds	r3, r3, #4
 3850 00cc 7B61     		str	r3, [r7, #20]
1628:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 3851              		.loc 1 1628 37 discriminator 2
 3852 00ce FB68     		ldr	r3, [r7, #12]
 3853 00d0 1A68     		ldr	r2, [r3]
 3854              		.loc 1 1628 6 discriminator 2
 3855 00d2 7B69     		ldr	r3, [r7, #20]
 3856              		.loc 1 1628 47 discriminator 2
 3857 00d4 D268     		ldr	r2, [r2, #12]
 3858              		.loc 1 1628 30 discriminator 2
 3859 00d6 1A60     		str	r2, [r3]
1629:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 3860              		.loc 1 1629 15 discriminator 2
 3861 00d8 7B69     		ldr	r3, [r7, #20]
 3862 00da 0433     		adds	r3, r3, #4
 3863 00dc 7B61     		str	r3, [r7, #20]
1630:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 3864              		.loc 1 1630 37 discriminator 2
 3865 00de FB68     		ldr	r3, [r7, #12]
 3866 00e0 1A68     		ldr	r2, [r3]
 3867              		.loc 1 1630 6 discriminator 2
 3868 00e2 7B69     		ldr	r3, [r7, #20]
 3869              		.loc 1 1630 47 discriminator 2
 3870 00e4 D268     		ldr	r2, [r2, #12]
 3871              		.loc 1 1630 30 discriminator 2
 3872 00e6 1A60     		str	r2, [r3]
1631:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 3873              		.loc 1 1631 15 discriminator 2
 3874 00e8 7B69     		ldr	r3, [r7, #20]
 3875 00ea 0433     		adds	r3, r3, #4
 3876 00ec 7B61     		str	r3, [r7, #20]
1591:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 3877              		.loc 1 1591 29 discriminator 2
 3878 00ee FB69     		ldr	r3, [r7, #28]
 3879 00f0 1033     		adds	r3, r3, #16
 3880 00f2 FB61     		str	r3, [r7, #28]
 3881              	.L210:
1591:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 3882              		.loc 1 1591 16 discriminator 1
 3883 00f4 FB88     		ldrh	r3, [r7, #6]
1591:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 3884              		.loc 1 1591 3 discriminator 1
 3885 00f6 FA69     		ldr	r2, [r7, #28]
 3886 00f8 9A42     		cmp	r2, r3
 3887 00fa 94D3     		bcc	.L215
1632:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1633:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1634:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 3888              		.loc 1 1634 10
 3889 00fc 0023     		movs	r3, #0
 3890              	.L213:
1635:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3891              		.loc 1 1635 1
 3892 00fe 1846     		mov	r0, r3
 3893 0100 2037     		adds	r7, r7, #32
 3894              	.LCFI75:
 3895              		.cfi_def_cfa_offset 8
 3896 0102 BD46     		mov	sp, r7
 3897              	.LCFI76:
 3898              		.cfi_def_cfa_register 13
 3899              		@ sp needed
 3900 0104 80BD     		pop	{r7, pc}
 3901              		.cfi_endproc
 3902              	.LFE140:
 3904              		.section	.text.HAL_CRYP_Init,"ax",%progbits
 3905              		.align	1
 3906              		.global	HAL_CRYP_Init
 3907              		.syntax unified
 3908              		.thumb
 3909              		.thumb_func
 3910              		.fpu softvfp
 3912              	HAL_CRYP_Init:
 3913              	.LFB141:
1636:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1637:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_Init(CRYP_HandleTypeDef *hcryp)
1638:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** { 
 3914              		.loc 1 1638 1
 3915              		.cfi_startproc
 3916              		@ args = 0, pretend = 0, frame = 8
 3917              		@ frame_needed = 1, uses_anonymous_args = 0
 3918              		@ link register save eliminated.
 3919 0000 80B4     		push	{r7}
 3920              	.LCFI77:
 3921              		.cfi_def_cfa_offset 4
 3922              		.cfi_offset 7, -4
 3923 0002 83B0     		sub	sp, sp, #12
 3924              	.LCFI78:
 3925              		.cfi_def_cfa_offset 16
 3926 0004 00AF     		add	r7, sp, #0
 3927              	.LCFI79:
 3928              		.cfi_def_cfa_register 7
 3929 0006 7860     		str	r0, [r7, #4]
1639:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the CRYP handle allocation */
1640:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp == NULL)
 3930              		.loc 1 1640 5
 3931 0008 7B68     		ldr	r3, [r7, #4]
 3932 000a 002B     		cmp	r3, #0
 3933 000c 01D1     		bne	.L217
1641:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1642:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_ERROR;
 3934              		.loc 1 1642 12
 3935 000e 0123     		movs	r3, #1
 3936 0010 23E0     		b	.L218
 3937              	.L217:
1643:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1644:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1645:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
1646:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_CRYP_KEYSIZE(hcryp->Init.KeySize));
1647:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_CRYP_DATATYPE(hcryp->Init.DataType));
1648:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1649:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp->State == HAL_CRYP_STATE_RESET)
 3938              		.loc 1 1649 11
 3939 0012 7B68     		ldr	r3, [r7, #4]
 3940 0014 93F83D30 		ldrb	r3, [r3, #61]
 3941 0018 DBB2     		uxtb	r3, r3
 3942              		.loc 1 1649 5
 3943 001a 002B     		cmp	r3, #0
 3944 001c 03D1     		bne	.L219
1650:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1651:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1652:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Lock = HAL_UNLOCKED;
 3945              		.loc 1 1652 17
 3946 001e 7B68     		ldr	r3, [r7, #4]
 3947 0020 0022     		movs	r2, #0
 3948 0022 83F83C20 		strb	r2, [r3, #60]
 3949              	.L219:
1653:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init the low level hardware */
1654:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     //HAL_CRYP_MspInit(hcryp);
1655:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1656:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1657:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1658:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 3950              		.loc 1 1658 16
 3951 0026 7B68     		ldr	r3, [r7, #4]
 3952 0028 0222     		movs	r2, #2
 3953 002a 83F83D20 		strb	r2, [r3, #61]
1659:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1660:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the key size and data type*/
1661:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   CRYP->CR = (uint32_t) (hcryp->Init.KeySize | hcryp->Init.DataType);
 3954              		.loc 1 1661 37
 3955 002e 7B68     		ldr	r3, [r7, #4]
 3956 0030 9A68     		ldr	r2, [r3, #8]
 3957              		.loc 1 1661 59
 3958 0032 7B68     		ldr	r3, [r7, #4]
 3959 0034 5B68     		ldr	r3, [r3, #4]
 3960              		.loc 1 1661 7
 3961 0036 0B49     		ldr	r1, .L220
 3962              		.loc 1 1661 46
 3963 0038 1343     		orrs	r3, r3, r2
 3964              		.loc 1 1661 12
 3965 003a 0B60     		str	r3, [r1]
1662:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1663:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Reset CrypInCount and CrypOutCount */
1664:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypInCount = 0U;
 3966              		.loc 1 1664 22
 3967 003c 7B68     		ldr	r3, [r7, #4]
 3968 003e 0022     		movs	r2, #0
 3969 0040 9A85     		strh	r2, [r3, #44]	@ movhi
1665:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 3970              		.loc 1 1665 23
 3971 0042 7B68     		ldr	r3, [r7, #4]
 3972 0044 0022     		movs	r2, #0
 3973 0046 DA85     		strh	r2, [r3, #46]	@ movhi
1666:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1667:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1668:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_READY;
 3974              		.loc 1 1668 16
 3975 0048 7B68     		ldr	r3, [r7, #4]
 3976 004a 0122     		movs	r2, #1
 3977 004c 83F83D20 		strb	r2, [r3, #61]
1669:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1670:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the default CRYP phase */
1671:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->Phase = HAL_CRYP_PHASE_READY;
 3978              		.loc 1 1671 16
 3979 0050 7B68     		ldr	r3, [r7, #4]
 3980 0052 0122     		movs	r2, #1
 3981 0054 83F83120 		strb	r2, [r3, #49]
1672:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1673:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1674:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 3982              		.loc 1 1674 10
 3983 0058 0023     		movs	r3, #0
 3984              	.L218:
1675:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3985              		.loc 1 1675 1
 3986 005a 1846     		mov	r0, r3
 3987 005c 0C37     		adds	r7, r7, #12
 3988              	.LCFI80:
 3989              		.cfi_def_cfa_offset 4
 3990 005e BD46     		mov	sp, r7
 3991              	.LCFI81:
 3992              		.cfi_def_cfa_register 13
 3993              		@ sp needed
 3994 0060 80BC     		pop	{r7}
 3995              	.LCFI82:
 3996              		.cfi_restore 7
 3997              		.cfi_def_cfa_offset 0
 3998 0062 7047     		bx	lr
 3999              	.L221:
 4000              		.align	2
 4001              	.L220:
 4002 0064 00000650 		.word	1342570496
 4003              		.cfi_endproc
 4004              	.LFE141:
 4006              		.section	.text.HAL_CRYP_DeInit,"ax",%progbits
 4007              		.align	1
 4008              		.global	HAL_CRYP_DeInit
 4009              		.syntax unified
 4010              		.thumb
 4011              		.thumb_func
 4012              		.fpu softvfp
 4014              	HAL_CRYP_DeInit:
 4015              	.LFB142:
1676:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1677:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1678:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  DeInitializes the CRYP peripheral. 
1679:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1680:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1681:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
1682:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1683:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_DeInit(CRYP_HandleTypeDef *hcryp)
1684:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 4016              		.loc 1 1684 1
 4017              		.cfi_startproc
 4018              		@ args = 0, pretend = 0, frame = 8
 4019              		@ frame_needed = 1, uses_anonymous_args = 0
 4020              		@ link register save eliminated.
 4021 0000 80B4     		push	{r7}
 4022              	.LCFI83:
 4023              		.cfi_def_cfa_offset 4
 4024              		.cfi_offset 7, -4
 4025 0002 83B0     		sub	sp, sp, #12
 4026              	.LCFI84:
 4027              		.cfi_def_cfa_offset 16
 4028 0004 00AF     		add	r7, sp, #0
 4029              	.LCFI85:
 4030              		.cfi_def_cfa_register 7
 4031 0006 7860     		str	r0, [r7, #4]
1685:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the CRYP handle allocation */
1686:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp == NULL)
 4032              		.loc 1 1686 5
 4033 0008 7B68     		ldr	r3, [r7, #4]
 4034 000a 002B     		cmp	r3, #0
 4035 000c 01D1     		bne	.L223
1687:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1688:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_ERROR;
 4036              		.loc 1 1688 12
 4037 000e 0123     		movs	r3, #1
 4038 0010 1EE0     		b	.L224
 4039              	.L223:
1689:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1690:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1691:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1692:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 4040              		.loc 1 1692 16
 4041 0012 7B68     		ldr	r3, [r7, #4]
 4042 0014 0222     		movs	r2, #2
 4043 0016 83F83D20 		strb	r2, [r3, #61]
1693:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1694:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the default CRYP phase */
1695:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->Phase = HAL_CRYP_PHASE_READY;
 4044              		.loc 1 1695 16
 4045 001a 7B68     		ldr	r3, [r7, #4]
 4046 001c 0122     		movs	r2, #1
 4047 001e 83F83120 		strb	r2, [r3, #49]
1696:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1697:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Reset CrypInCount and CrypOutCount */
1698:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypInCount = 0U;
 4048              		.loc 1 1698 22
 4049 0022 7B68     		ldr	r3, [r7, #4]
 4050 0024 0022     		movs	r2, #0
 4051 0026 9A85     		strh	r2, [r3, #44]	@ movhi
1699:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 4052              		.loc 1 1699 23
 4053 0028 7B68     		ldr	r3, [r7, #4]
 4054 002a 0022     		movs	r2, #0
 4055 002c DA85     		strh	r2, [r3, #46]	@ movhi
1700:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1701:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Disable the CRYP Peripheral Clock */
1702:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_CRYP_DISABLE(hcryp);
 4056              		.loc 1 1702 3
 4057 002e 7B68     		ldr	r3, [r7, #4]
 4058 0030 1B68     		ldr	r3, [r3]
 4059 0032 1A68     		ldr	r2, [r3]
 4060 0034 7B68     		ldr	r3, [r7, #4]
 4061 0036 1B68     		ldr	r3, [r3]
 4062 0038 22F40042 		bic	r2, r2, #32768
 4063 003c 1A60     		str	r2, [r3]
1703:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1704:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
1705:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   //HAL_CRYP_MspDeInit(hcryp);
1706:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1707:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1708:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_RESET;
 4064              		.loc 1 1708 16
 4065 003e 7B68     		ldr	r3, [r7, #4]
 4066 0040 0022     		movs	r2, #0
 4067 0042 83F83D20 		strb	r2, [r3, #61]
1709:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1710:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Release Lock */
1711:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UNLOCK(hcryp);
 4068              		.loc 1 1711 3
 4069 0046 7B68     		ldr	r3, [r7, #4]
 4070 0048 0022     		movs	r2, #0
 4071 004a 83F83C20 		strb	r2, [r3, #60]
1712:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1713:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1714:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 4072              		.loc 1 1714 10
 4073 004e 0023     		movs	r3, #0
 4074              	.L224:
1715:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 4075              		.loc 1 1715 1
 4076 0050 1846     		mov	r0, r3
 4077 0052 0C37     		adds	r7, r7, #12
 4078              	.LCFI86:
 4079              		.cfi_def_cfa_offset 4
 4080 0054 BD46     		mov	sp, r7
 4081              	.LCFI87:
 4082              		.cfi_def_cfa_register 13
 4083              		@ sp needed
 4084 0056 80BC     		pop	{r7}
 4085              	.LCFI88:
 4086              		.cfi_restore 7
 4087              		.cfi_def_cfa_offset 0
 4088 0058 7047     		bx	lr
 4089              		.cfi_endproc
 4090              	.LFE142:
 4092              		.section	.text.HAL_CRYP_AESECB_Encrypt,"ax",%progbits
 4093              		.align	1
 4094              		.global	HAL_CRYP_AESECB_Encrypt
 4095              		.syntax unified
 4096              		.thumb
 4097              		.thumb_func
 4098              		.fpu softvfp
 4100              	HAL_CRYP_AESECB_Encrypt:
 4101              	.LFB143:
1716:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1717:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_AESECB_Encrypt(CRYP_HandleTypeDef *hcryp, uint8_t *pPlainData, uint16_t 
1718:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 4102              		.loc 1 1718 1
 4103              		.cfi_startproc
 4104              		@ args = 4, pretend = 0, frame = 16
 4105              		@ frame_needed = 1, uses_anonymous_args = 0
 4106 0000 80B5     		push	{r7, lr}
 4107              	.LCFI89:
 4108              		.cfi_def_cfa_offset 8
 4109              		.cfi_offset 7, -8
 4110              		.cfi_offset 14, -4
 4111 0002 86B0     		sub	sp, sp, #24
 4112              	.LCFI90:
 4113              		.cfi_def_cfa_offset 32
 4114 0004 02AF     		add	r7, sp, #8
 4115              	.LCFI91:
 4116              		.cfi_def_cfa 7, 24
 4117 0006 F860     		str	r0, [r7, #12]
 4118 0008 B960     		str	r1, [r7, #8]
 4119 000a 3B60     		str	r3, [r7]
 4120 000c 1346     		mov	r3, r2	@ movhi
 4121 000e FB80     		strh	r3, [r7, #6]	@ movhi
1719:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
1720:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_LOCK(hcryp);
 4122              		.loc 1 1720 3
 4123 0010 FB68     		ldr	r3, [r7, #12]
 4124 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4125 0016 012B     		cmp	r3, #1
 4126 0018 01D1     		bne	.L226
 4127              		.loc 1 1720 3 is_stmt 0 discriminator 1
 4128 001a 0223     		movs	r3, #2
 4129 001c 46E0     		b	.L227
 4130              	.L226:
 4131              		.loc 1 1720 3 discriminator 2
 4132 001e FB68     		ldr	r3, [r7, #12]
 4133 0020 0122     		movs	r2, #1
 4134 0022 83F83C20 		strb	r2, [r3, #60]
1721:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1722:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1723:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 4135              		.loc 1 1723 16 is_stmt 1 discriminator 2
 4136 0026 FB68     		ldr	r3, [r7, #12]
 4137 0028 0222     		movs	r2, #2
 4138 002a 83F83D20 		strb	r2, [r3, #61]
1724:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1725:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check if initialization phase has already been performed */
1726:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp->Phase == HAL_CRYP_PHASE_READY)
 4139              		.loc 1 1726 11 discriminator 2
 4140 002e FB68     		ldr	r3, [r7, #12]
 4141 0030 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 4142              		.loc 1 1726 5 discriminator 2
 4143 0034 012B     		cmp	r3, #1
 4144 0036 23D1     		bne	.L228
1727:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1728:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the key */
1729:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     CRYP_SetKey(hcryp, hcryp->Init.pKey, hcryp->Init.KeySize);
 4145              		.loc 1 1729 5
 4146 0038 FB68     		ldr	r3, [r7, #12]
 4147 003a D968     		ldr	r1, [r3, #12]
 4148 003c FB68     		ldr	r3, [r7, #12]
 4149 003e 9B68     		ldr	r3, [r3, #8]
 4150 0040 1A46     		mov	r2, r3
 4151 0042 F868     		ldr	r0, [r7, #12]
 4152 0044 FFF7FEFF 		bl	CRYP_SetKey
1730:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1731:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the CRYP peripheral in AES ECB mode */
1732:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_SET_MODE(hcryp, CRYP_CR_ALGOMODE_AES_ECB);
 4153              		.loc 1 1732 5
 4154 0048 FB68     		ldr	r3, [r7, #12]
 4155 004a 1B68     		ldr	r3, [r3]
 4156 004c 1A68     		ldr	r2, [r3]
 4157 004e FB68     		ldr	r3, [r7, #12]
 4158 0050 1B68     		ldr	r3, [r3]
 4159 0052 42F02002 		orr	r2, r2, #32
 4160 0056 1A60     		str	r2, [r3]
1733:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1734:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Flush FIFO */
1735:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_FIFO_FLUSH(hcryp);
 4161              		.loc 1 1735 5
 4162 0058 FB68     		ldr	r3, [r7, #12]
 4163 005a 1B68     		ldr	r3, [r3]
 4164 005c 1A68     		ldr	r2, [r3]
 4165 005e FB68     		ldr	r3, [r7, #12]
 4166 0060 1B68     		ldr	r3, [r3]
 4167 0062 42F48042 		orr	r2, r2, #16384
 4168 0066 1A60     		str	r2, [r3]
1736:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1737:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable CRYP */
1738:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_ENABLE(hcryp);
 4169              		.loc 1 1738 5
 4170 0068 FB68     		ldr	r3, [r7, #12]
 4171 006a 1B68     		ldr	r3, [r3]
 4172 006c 1A68     		ldr	r2, [r3]
 4173 006e FB68     		ldr	r3, [r7, #12]
 4174 0070 1B68     		ldr	r3, [r3]
 4175 0072 42F40042 		orr	r2, r2, #32768
 4176 0076 1A60     		str	r2, [r3]
1739:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1740:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the phase */
1741:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Phase = HAL_CRYP_PHASE_PROCESS;
 4177              		.loc 1 1741 18
 4178 0078 FB68     		ldr	r3, [r7, #12]
 4179 007a 0222     		movs	r2, #2
 4180 007c 83F83120 		strb	r2, [r3, #49]
 4181              	.L228:
1742:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1743:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1744:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Write Plain Data and Get Cypher Data */
1745:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(CRYP_ProcessData(hcryp, pPlainData, Size, pCypherData, Timeout) != HAL_OK)
 4182              		.loc 1 1745 8
 4183 0080 FA88     		ldrh	r2, [r7, #6]
 4184 0082 BB69     		ldr	r3, [r7, #24]
 4185 0084 0093     		str	r3, [sp]
 4186 0086 3B68     		ldr	r3, [r7]
 4187 0088 B968     		ldr	r1, [r7, #8]
 4188 008a F868     		ldr	r0, [r7, #12]
 4189 008c FFF7FEFF 		bl	CRYP_ProcessData
 4190 0090 0346     		mov	r3, r0
 4191              		.loc 1 1745 7
 4192 0092 002B     		cmp	r3, #0
 4193 0094 01D0     		beq	.L229
1746:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1747:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_TIMEOUT;
 4194              		.loc 1 1747 14
 4195 0096 0323     		movs	r3, #3
 4196 0098 08E0     		b	.L227
 4197              	.L229:
1748:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1749:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1750:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1751:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_READY;
 4198              		.loc 1 1751 16
 4199 009a FB68     		ldr	r3, [r7, #12]
 4200 009c 0122     		movs	r2, #1
 4201 009e 83F83D20 		strb	r2, [r3, #61]
1752:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1753:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Unlocked */
1754:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UNLOCK(hcryp);
 4202              		.loc 1 1754 3
 4203 00a2 FB68     		ldr	r3, [r7, #12]
 4204 00a4 0022     		movs	r2, #0
 4205 00a6 83F83C20 		strb	r2, [r3, #60]
1755:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1756:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1757:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 4206              		.loc 1 1757 10
 4207 00aa 0023     		movs	r3, #0
 4208              	.L227:
1758:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 4209              		.loc 1 1758 1
 4210 00ac 1846     		mov	r0, r3
 4211 00ae 1037     		adds	r7, r7, #16
 4212              	.LCFI92:
 4213              		.cfi_def_cfa_offset 8
 4214 00b0 BD46     		mov	sp, r7
 4215              	.LCFI93:
 4216              		.cfi_def_cfa_register 13
 4217              		@ sp needed
 4218 00b2 80BD     		pop	{r7, pc}
 4219              		.cfi_endproc
 4220              	.LFE143:
 4222              		.section	.text.HAL_CRYP_AESECB_Decrypt,"ax",%progbits
 4223              		.align	1
 4224              		.global	HAL_CRYP_AESECB_Decrypt
 4225              		.syntax unified
 4226              		.thumb
 4227              		.thumb_func
 4228              		.fpu softvfp
 4230              	HAL_CRYP_AESECB_Decrypt:
 4231              	.LFB144:
1759:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1760:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1761:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the CRYP peripheral in AES ECB decryption mode
1762:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         then decrypted pCypherData. The cypher data are available in pPlainData
1763:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1764:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1765:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pCypherData Pointer to the cyphertext buffer
1766:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Size Length of the plaintext buffer, must be a multiple of 16.
1767:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pPlainData Pointer to the plaintext buffer
1768:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout Specify Timeout value  
1769:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
1770:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1771:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_AESECB_Decrypt(CRYP_HandleTypeDef *hcryp, uint8_t *pCypherData, uint16_t
1772:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 4232              		.loc 1 1772 1
 4233              		.cfi_startproc
 4234              		@ args = 4, pretend = 0, frame = 24
 4235              		@ frame_needed = 1, uses_anonymous_args = 0
 4236 0000 80B5     		push	{r7, lr}
 4237              	.LCFI94:
 4238              		.cfi_def_cfa_offset 8
 4239              		.cfi_offset 7, -8
 4240              		.cfi_offset 14, -4
 4241 0002 88B0     		sub	sp, sp, #32
 4242              	.LCFI95:
 4243              		.cfi_def_cfa_offset 40
 4244 0004 02AF     		add	r7, sp, #8
 4245              	.LCFI96:
 4246              		.cfi_def_cfa 7, 32
 4247 0006 F860     		str	r0, [r7, #12]
 4248 0008 B960     		str	r1, [r7, #8]
 4249 000a 3B60     		str	r3, [r7]
 4250 000c 1346     		mov	r3, r2	@ movhi
 4251 000e FB80     		strh	r3, [r7, #6]	@ movhi
1773:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 4252              		.loc 1 1773 13
 4253 0010 0023     		movs	r3, #0
 4254 0012 7B61     		str	r3, [r7, #20]
1774:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1775:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
1776:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_LOCK(hcryp);
 4255              		.loc 1 1776 3
 4256 0014 FB68     		ldr	r3, [r7, #12]
 4257 0016 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4258 001a 012B     		cmp	r3, #1
 4259 001c 01D1     		bne	.L231
 4260              		.loc 1 1776 3 is_stmt 0 discriminator 1
 4261 001e 0223     		movs	r3, #2
 4262 0020 8AE0     		b	.L232
 4263              	.L231:
 4264              		.loc 1 1776 3 discriminator 2
 4265 0022 FB68     		ldr	r3, [r7, #12]
 4266 0024 0122     		movs	r2, #1
 4267 0026 83F83C20 		strb	r2, [r3, #60]
1777:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1778:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1779:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 4268              		.loc 1 1779 16 is_stmt 1 discriminator 2
 4269 002a FB68     		ldr	r3, [r7, #12]
 4270 002c 0222     		movs	r2, #2
 4271 002e 83F83D20 		strb	r2, [r3, #61]
1780:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1781:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check if initialization phase has already been performed */
1782:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp->Phase == HAL_CRYP_PHASE_READY)
 4272              		.loc 1 1782 11 discriminator 2
 4273 0032 FB68     		ldr	r3, [r7, #12]
 4274 0034 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 4275              		.loc 1 1782 5 discriminator 2
 4276 0038 012B     		cmp	r3, #1
 4277 003a 67D1     		bne	.L233
1783:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1784:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the key */
1785:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     CRYP_SetKey(hcryp, hcryp->Init.pKey, hcryp->Init.KeySize);
 4278              		.loc 1 1785 5
 4279 003c FB68     		ldr	r3, [r7, #12]
 4280 003e D968     		ldr	r1, [r3, #12]
 4281 0040 FB68     		ldr	r3, [r7, #12]
 4282 0042 9B68     		ldr	r3, [r3, #8]
 4283 0044 1A46     		mov	r2, r3
 4284 0046 F868     		ldr	r0, [r7, #12]
 4285 0048 FFF7FEFF 		bl	CRYP_SetKey
1786:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1787:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the CRYP peripheral in AES Key mode */
1788:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_SET_MODE(hcryp, CRYP_CR_ALGOMODE_AES_KEY | CRYP_CR_ALGODIR);
 4286              		.loc 1 1788 5
 4287 004c FB68     		ldr	r3, [r7, #12]
 4288 004e 1B68     		ldr	r3, [r3]
 4289 0050 1A68     		ldr	r2, [r3]
 4290 0052 FB68     		ldr	r3, [r7, #12]
 4291 0054 1B68     		ldr	r3, [r3]
 4292 0056 42F03C02 		orr	r2, r2, #60
 4293 005a 1A60     		str	r2, [r3]
1789:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1790:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable CRYP */
1791:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_ENABLE(hcryp);
 4294              		.loc 1 1791 5
 4295 005c FB68     		ldr	r3, [r7, #12]
 4296 005e 1B68     		ldr	r3, [r3]
 4297 0060 1A68     		ldr	r2, [r3]
 4298 0062 FB68     		ldr	r3, [r7, #12]
 4299 0064 1B68     		ldr	r3, [r3]
 4300 0066 42F40042 		orr	r2, r2, #32768
 4301 006a 1A60     		str	r2, [r3]
1792:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1793:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get tick */ 
1794:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 4302              		.loc 1 1794 17
 4303 006c FFF7FEFF 		bl	HAL_GetTick
 4304 0070 7861     		str	r0, [r7, #20]
1795:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1796:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(HAL_IS_BIT_SET(hcryp->Instance->SR, CRYP_FLAG_BUSY))
 4305              		.loc 1 1796 10
 4306 0072 18E0     		b	.L234
 4307              	.L236:
1797:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1798:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check for the Timeout */
1799:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(Timeout != HAL_MAX_DELAY)
 4308              		.loc 1 1799 9
 4309 0074 3B6A     		ldr	r3, [r7, #32]
 4310 0076 B3F1FF3F 		cmp	r3, #-1
 4311 007a 14D0     		beq	.L234
1800:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1801:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 4312              		.loc 1 1801 11
 4313 007c 3B6A     		ldr	r3, [r7, #32]
 4314 007e 002B     		cmp	r3, #0
 4315 0080 07D0     		beq	.L235
 4316              		.loc 1 1801 31 discriminator 1
 4317 0082 FFF7FEFF 		bl	HAL_GetTick
 4318 0086 0246     		mov	r2, r0
 4319              		.loc 1 1801 45 discriminator 1
 4320 0088 7B69     		ldr	r3, [r7, #20]
 4321 008a D31A     		subs	r3, r2, r3
 4322              		.loc 1 1801 27 discriminator 1
 4323 008c 3A6A     		ldr	r2, [r7, #32]
 4324 008e 9A42     		cmp	r2, r3
 4325 0090 09D2     		bcs	.L234
 4326              	.L235:
1802:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1803:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Change state */
1804:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           hcryp->State = HAL_CRYP_STATE_TIMEOUT;
 4327              		.loc 1 1804 24
 4328 0092 FB68     		ldr	r3, [r7, #12]
 4329 0094 0322     		movs	r2, #3
 4330 0096 83F83D20 		strb	r2, [r3, #61]
1805:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           
1806:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Process Unlocked */          
1807:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           __HAL_UNLOCK(hcryp);
 4331              		.loc 1 1807 11
 4332 009a FB68     		ldr	r3, [r7, #12]
 4333 009c 0022     		movs	r2, #0
 4334 009e 83F83C20 		strb	r2, [r3, #60]
1808:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         
1809:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 4335              		.loc 1 1809 18
 4336 00a2 0323     		movs	r3, #3
 4337 00a4 48E0     		b	.L232
 4338              	.L234:
1796:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 4339              		.loc 1 1796 11
 4340 00a6 FB68     		ldr	r3, [r7, #12]
 4341 00a8 1B68     		ldr	r3, [r3]
 4342 00aa 5B68     		ldr	r3, [r3, #4]
 4343 00ac 03F01003 		and	r3, r3, #16
1796:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 4344              		.loc 1 1796 10
 4345 00b0 002B     		cmp	r3, #0
 4346 00b2 DFD1     		bne	.L236
1810:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1811:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1812:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1813:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1814:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Disable CRYP */
1815:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_DISABLE(hcryp);
 4347              		.loc 1 1815 5
 4348 00b4 FB68     		ldr	r3, [r7, #12]
 4349 00b6 1B68     		ldr	r3, [r3]
 4350 00b8 1A68     		ldr	r2, [r3]
 4351 00ba FB68     		ldr	r3, [r7, #12]
 4352 00bc 1B68     		ldr	r3, [r3]
 4353 00be 22F40042 		bic	r2, r2, #32768
 4354 00c2 1A60     		str	r2, [r3]
1816:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1817:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Reset the ALGOMODE bits*/
1818:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     CRYP->CR &= (uint32_t)(~CRYP_CR_ALGOMODE);
 4355              		.loc 1 1818 14
 4356 00c4 1E4B     		ldr	r3, .L238
 4357 00c6 1B68     		ldr	r3, [r3]
 4358 00c8 1D4A     		ldr	r2, .L238
 4359 00ca 23F40023 		bic	r3, r3, #524288
 4360 00ce 23F03803 		bic	r3, r3, #56
 4361 00d2 1360     		str	r3, [r2]
1819:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1820:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the CRYP peripheral in AES ECB decryption mode */
1821:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_SET_MODE(hcryp, CRYP_CR_ALGOMODE_AES_ECB | CRYP_CR_ALGODIR);
 4362              		.loc 1 1821 5
 4363 00d4 FB68     		ldr	r3, [r7, #12]
 4364 00d6 1B68     		ldr	r3, [r3]
 4365 00d8 1A68     		ldr	r2, [r3]
 4366 00da FB68     		ldr	r3, [r7, #12]
 4367 00dc 1B68     		ldr	r3, [r3]
 4368 00de 42F02402 		orr	r2, r2, #36
 4369 00e2 1A60     		str	r2, [r3]
1822:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Flush FIFO */
1823:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_FIFO_FLUSH(hcryp);
 4370              		.loc 1 1823 5
 4371 00e4 FB68     		ldr	r3, [r7, #12]
 4372 00e6 1B68     		ldr	r3, [r3]
 4373 00e8 1A68     		ldr	r2, [r3]
 4374 00ea FB68     		ldr	r3, [r7, #12]
 4375 00ec 1B68     		ldr	r3, [r3]
 4376 00ee 42F48042 		orr	r2, r2, #16384
 4377 00f2 1A60     		str	r2, [r3]
1824:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1825:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable CRYP */
1826:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_ENABLE(hcryp);
 4378              		.loc 1 1826 5
 4379 00f4 FB68     		ldr	r3, [r7, #12]
 4380 00f6 1B68     		ldr	r3, [r3]
 4381 00f8 1A68     		ldr	r2, [r3]
 4382 00fa FB68     		ldr	r3, [r7, #12]
 4383 00fc 1B68     		ldr	r3, [r3]
 4384 00fe 42F40042 		orr	r2, r2, #32768
 4385 0102 1A60     		str	r2, [r3]
1827:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1828:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the phase */
1829:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Phase = HAL_CRYP_PHASE_PROCESS;
 4386              		.loc 1 1829 18
 4387 0104 FB68     		ldr	r3, [r7, #12]
 4388 0106 0222     		movs	r2, #2
 4389 0108 83F83120 		strb	r2, [r3, #49]
 4390              	.L233:
1830:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1831:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1832:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Write Plain Data and Get Cypher Data */
1833:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(CRYP_ProcessData(hcryp, pCypherData, Size, pPlainData, Timeout) != HAL_OK)
 4391              		.loc 1 1833 8
 4392 010c FA88     		ldrh	r2, [r7, #6]
 4393 010e 3B6A     		ldr	r3, [r7, #32]
 4394 0110 0093     		str	r3, [sp]
 4395 0112 3B68     		ldr	r3, [r7]
 4396 0114 B968     		ldr	r1, [r7, #8]
 4397 0116 F868     		ldr	r0, [r7, #12]
 4398 0118 FFF7FEFF 		bl	CRYP_ProcessData
 4399 011c 0346     		mov	r3, r0
 4400              		.loc 1 1833 7
 4401 011e 002B     		cmp	r3, #0
 4402 0120 01D0     		beq	.L237
1834:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1835:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_TIMEOUT;
 4403              		.loc 1 1835 14
 4404 0122 0323     		movs	r3, #3
 4405 0124 08E0     		b	.L232
 4406              	.L237:
1836:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1837:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1838:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1839:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_READY;
 4407              		.loc 1 1839 16
 4408 0126 FB68     		ldr	r3, [r7, #12]
 4409 0128 0122     		movs	r2, #1
 4410 012a 83F83D20 		strb	r2, [r3, #61]
1840:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1841:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Unlocked */
1842:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UNLOCK(hcryp);
 4411              		.loc 1 1842 3
 4412 012e FB68     		ldr	r3, [r7, #12]
 4413 0130 0022     		movs	r2, #0
 4414 0132 83F83C20 		strb	r2, [r3, #60]
1843:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1844:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1845:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 4415              		.loc 1 1845 10
 4416 0136 0023     		movs	r3, #0
 4417              	.L232:
1846:../../hardware/victims/firmware/./hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 4418              		.loc 1 1846 1
 4419 0138 1846     		mov	r0, r3
 4420 013a 1837     		adds	r7, r7, #24
 4421              	.LCFI97:
 4422              		.cfi_def_cfa_offset 8
 4423 013c BD46     		mov	sp, r7
 4424              	.LCFI98:
 4425              		.cfi_def_cfa_register 13
 4426              		@ sp needed
 4427 013e 80BD     		pop	{r7, pc}
 4428              	.L239:
 4429              		.align	2
 4430              	.L238:
 4431 0140 00000650 		.word	1342570496
 4432              		.cfi_endproc
 4433              	.LFE144:
 4435              		.bss
 4436              		.align	2
 4437              	tick.0:
 4438 0000 00000000 		.space	4
 4440              		.text
 4441              	.Letext0:
 4442              		.file 3 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine\\_d
 4443              		.file 4 "c:\\users\\h3c\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_stdin
 4444              		.file 5 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/device/stm32f415xx.h"
 4445              		.file 6 "../../hardware/victims/firmware/./hal/stm32f4/CMSIS/device/stm32f4xx.h"
 4446              		.file 7 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_def.h"
 4447              		.file 8 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_rcc_ex.h"
 4448              		.file 9 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_rcc.h"
 4449              		.file 10 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_gpio.h"
 4450              		.file 11 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_dma.h"
 4451              		.file 12 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_uart.h"
 4452              		.file 13 "../../hardware/victims/firmware/./hal/stm32f4/stm32f4xx_hal_cryp.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4_hal_lowlevel.c
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:16     .text.HAL_GetTick:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:24     .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:59     .text.HAL_GetTick:00000018 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4437   .bss:00000000 tick.0
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:64     .text.RCC_AHB2PeriphClockCmd:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:71     .text.RCC_AHB2PeriphClockCmd:00000000 RCC_AHB2PeriphClockCmd
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:133    .text.RCC_AHB2PeriphClockCmd:00000038 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:138    .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:145    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:574    .text.HAL_RCC_OscConfig:00000268 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:580    .text.HAL_RCC_OscConfig:00000278 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:964    .text.HAL_RCC_OscConfig:000004b4 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:972    .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:979    .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1316   .text.HAL_RCC_ClockConfig:000001e0 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1322   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1329   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1359   .text.HAL_RCC_GetPCLK1Freq:00000010 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1364   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1371   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1401   .text.HAL_RCC_GetPCLK2Freq:00000010 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1406   .text.HAL_GPIO_Init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1413   .text.HAL_GPIO_Init:00000000 HAL_GPIO_Init
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1970   .text.HAL_GPIO_Init:00000308 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1985   .text.HAL_GPIO_WritePin:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:1992   .text.HAL_GPIO_WritePin:00000000 HAL_GPIO_WritePin
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2051   .text.UART_SetConfig:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2057   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2485   .text.UART_SetConfig:00000348 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2490   .text.UART_SetConfig:00000354 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2597   .text.UART_SetConfig:00000434 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2602   .text.HAL_UART_Init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2609   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2715   .text.UART_WaitOnFlagForever:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2721   .text.UART_WaitOnFlagForever:00000000 UART_WaitOnFlagForever
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2784   .text.HAL_UART_Transmit:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:2791   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3000   .text.HAL_UART_Receive:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3007   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3241   .text.CRYP_SetKey:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3247   .text.CRYP_SetKey:00000000 CRYP_SetKey
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3682   .text.CRYP_ProcessData:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3688   .text.CRYP_ProcessData:00000000 CRYP_ProcessData
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3905   .text.HAL_CRYP_Init:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:3912   .text.HAL_CRYP_Init:00000000 HAL_CRYP_Init
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4002   .text.HAL_CRYP_Init:00000064 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4007   .text.HAL_CRYP_DeInit:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4014   .text.HAL_CRYP_DeInit:00000000 HAL_CRYP_DeInit
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4093   .text.HAL_CRYP_AESECB_Encrypt:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4100   .text.HAL_CRYP_AESECB_Encrypt:00000000 HAL_CRYP_AESECB_Encrypt
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4223   .text.HAL_CRYP_AESECB_Decrypt:00000000 $t
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4230   .text.HAL_CRYP_AESECB_Decrypt:00000000 HAL_CRYP_AESECB_Decrypt
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4431   .text.HAL_CRYP_AESECB_Decrypt:00000140 $d
C:\Users\H3C\AppData\Local\Temp\ccBRbDwp.s:4436   .bss:00000000 $d

NO UNDEFINED SYMBOLS
